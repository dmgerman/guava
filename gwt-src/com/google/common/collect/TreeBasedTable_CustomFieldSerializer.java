begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2009 Google Inc.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.collect
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|SerializationException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|SerializationStreamReader
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|SerializationStreamWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_comment
comment|/**  * This class implements the GWT serialization of {@link TreeBasedTable}.  *  * @author Hayward Chan  */
end_comment

begin_class
DECL|class|TreeBasedTable_CustomFieldSerializer
specifier|public
class|class
name|TreeBasedTable_CustomFieldSerializer
block|{
DECL|method|deserialize (SerializationStreamReader reader, TreeBasedTable<?, ?, ?> instance)
specifier|public
specifier|static
name|void
name|deserialize
parameter_list|(
name|SerializationStreamReader
name|reader
parameter_list|,
name|TreeBasedTable
argument_list|<
name|?
argument_list|,
name|?
argument_list|,
name|?
argument_list|>
name|instance
parameter_list|)
block|{   }
DECL|method|instantiate ( SerializationStreamReader reader)
specifier|public
specifier|static
name|TreeBasedTable
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|,
name|Object
argument_list|>
name|instantiate
parameter_list|(
name|SerializationStreamReader
name|reader
parameter_list|)
throws|throws
name|SerializationException
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
comment|// The comparator isn't used statically.
name|Comparator
argument_list|<
name|Object
argument_list|>
name|rowComparator
init|=
operator|(
name|Comparator
argument_list|<
name|Object
argument_list|>
operator|)
name|reader
operator|.
name|readObject
argument_list|()
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
comment|// The comparator isn't used statically.
name|Comparator
argument_list|<
name|Object
argument_list|>
name|columnComparator
init|=
operator|(
name|Comparator
argument_list|<
name|Object
argument_list|>
operator|)
name|reader
operator|.
name|readObject
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|backingMap
init|=
operator|(
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
operator|)
name|reader
operator|.
name|readObject
argument_list|()
decl_stmt|;
name|TreeBasedTable
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|,
name|Object
argument_list|>
name|table
init|=
name|TreeBasedTable
operator|.
name|create
argument_list|(
name|rowComparator
argument_list|,
name|columnComparator
argument_list|)
decl_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|row
range|:
name|backingMap
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|table
operator|.
name|row
argument_list|(
name|row
operator|.
name|getKey
argument_list|()
argument_list|)
operator|.
name|putAll
argument_list|(
operator|(
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
operator|)
name|row
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|table
return|;
block|}
DECL|method|serialize (SerializationStreamWriter writer, TreeBasedTable<?, ?, ?> instance)
specifier|public
specifier|static
name|void
name|serialize
parameter_list|(
name|SerializationStreamWriter
name|writer
parameter_list|,
name|TreeBasedTable
argument_list|<
name|?
argument_list|,
name|?
argument_list|,
name|?
argument_list|>
name|instance
parameter_list|)
throws|throws
name|SerializationException
block|{
comment|/*      * The backing map of a TreeBasedTable is a tree map of tree map.      * Therefore, the backing map is GWT serializable (assuming the row,      * column, value, the row comparator and column comparator are all      * serializable).      */
name|writer
operator|.
name|writeObject
argument_list|(
name|instance
operator|.
name|rowComparator
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeObject
argument_list|(
name|instance
operator|.
name|columnComparator
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeObject
argument_list|(
name|instance
operator|.
name|backingMap
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

