begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2009 Google Inc.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.collect
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|SerializationException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|SerializationStreamReader
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|SerializationStreamWriter
import|;
end_import

begin_comment
comment|/**  * This class contains static utility methods for writing {@code Multiset} GWT  * field serializers. Serializers should delegate to  * {@link #serialize(SerializationStreamWriter, Multiset)} and to either  * {@link #instantiate(SerializationStreamReader, ImmutableMultiset.Builder)} or  * {@link #populate(SerializationStreamReader, Multiset)}.  *   * @author Chris Povirk  */
end_comment

begin_class
DECL|class|Multiset_CustomFieldSerializerBase
specifier|final
class|class
name|Multiset_CustomFieldSerializerBase
block|{
DECL|method|instantiate ( SerializationStreamReader reader, ImmutableMultiset.Builder<Object> builder)
specifier|static
name|ImmutableMultiset
argument_list|<
name|Object
argument_list|>
name|instantiate
parameter_list|(
name|SerializationStreamReader
name|reader
parameter_list|,
name|ImmutableMultiset
operator|.
name|Builder
argument_list|<
name|Object
argument_list|>
name|builder
parameter_list|)
throws|throws
name|SerializationException
block|{
name|int
name|distinctElements
init|=
name|reader
operator|.
name|readInt
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|distinctElements
condition|;
name|i
operator|++
control|)
block|{
name|Object
name|element
init|=
name|reader
operator|.
name|readObject
argument_list|()
decl_stmt|;
name|int
name|count
init|=
name|reader
operator|.
name|readInt
argument_list|()
decl_stmt|;
name|builder
operator|.
name|addCopies
argument_list|(
name|element
argument_list|,
name|count
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|populate ( SerializationStreamReader reader, Multiset<Object> multiset)
specifier|static
name|Multiset
argument_list|<
name|Object
argument_list|>
name|populate
parameter_list|(
name|SerializationStreamReader
name|reader
parameter_list|,
name|Multiset
argument_list|<
name|Object
argument_list|>
name|multiset
parameter_list|)
throws|throws
name|SerializationException
block|{
name|int
name|distinctElements
init|=
name|reader
operator|.
name|readInt
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|distinctElements
condition|;
name|i
operator|++
control|)
block|{
name|Object
name|element
init|=
name|reader
operator|.
name|readObject
argument_list|()
decl_stmt|;
name|int
name|count
init|=
name|reader
operator|.
name|readInt
argument_list|()
decl_stmt|;
name|multiset
operator|.
name|add
argument_list|(
name|element
argument_list|,
name|count
argument_list|)
expr_stmt|;
block|}
return|return
name|multiset
return|;
block|}
DECL|method|serialize (SerializationStreamWriter writer, Multiset<?> instance)
specifier|static
name|void
name|serialize
parameter_list|(
name|SerializationStreamWriter
name|writer
parameter_list|,
name|Multiset
argument_list|<
name|?
argument_list|>
name|instance
parameter_list|)
throws|throws
name|SerializationException
block|{
name|int
name|entryCount
init|=
name|instance
operator|.
name|entrySet
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|writer
operator|.
name|writeInt
argument_list|(
name|entryCount
argument_list|)
expr_stmt|;
for|for
control|(
name|Multiset
operator|.
name|Entry
argument_list|<
name|?
argument_list|>
name|entry
range|:
name|instance
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|writer
operator|.
name|writeObject
argument_list|(
name|entry
operator|.
name|getElement
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeInt
argument_list|(
name|entry
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|Multiset_CustomFieldSerializerBase ()
specifier|private
name|Multiset_CustomFieldSerializerBase
parameter_list|()
block|{}
block|}
end_class

end_unit

