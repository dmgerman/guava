begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2017 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|CharMatcher
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|errorprone
operator|.
name|refaster
operator|.
name|annotation
operator|.
name|AfterTemplate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|errorprone
operator|.
name|refaster
operator|.
name|annotation
operator|.
name|BeforeTemplate
import|;
end_import

begin_comment
comment|/**  * Refaster refactorings to rewrite uses of CharMatcher static constants to the static factory  * methods.  */
end_comment

begin_class
DECL|class|CharMatcherRewrite
specifier|public
class|class
name|CharMatcherRewrite
block|{
DECL|class|Whitespace
class|class
name|Whitespace
block|{
annotation|@
name|BeforeTemplate
DECL|method|before ()
name|CharMatcher
name|before
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|WHITESPACE
return|;
block|}
annotation|@
name|AfterTemplate
DECL|method|after ()
name|CharMatcher
name|after
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|whitespace
argument_list|()
return|;
block|}
block|}
DECL|class|BreakingWhitespace
class|class
name|BreakingWhitespace
block|{
annotation|@
name|BeforeTemplate
DECL|method|before ()
name|CharMatcher
name|before
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|BREAKING_WHITESPACE
return|;
block|}
annotation|@
name|AfterTemplate
DECL|method|after ()
name|CharMatcher
name|after
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|breakingWhitespace
argument_list|()
return|;
block|}
block|}
DECL|class|Ascii
class|class
name|Ascii
block|{
annotation|@
name|BeforeTemplate
DECL|method|before ()
name|CharMatcher
name|before
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|ASCII
return|;
block|}
annotation|@
name|AfterTemplate
DECL|method|after ()
name|CharMatcher
name|after
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|ascii
argument_list|()
return|;
block|}
block|}
DECL|class|Digit
class|class
name|Digit
block|{
annotation|@
name|BeforeTemplate
DECL|method|before ()
name|CharMatcher
name|before
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|DIGIT
return|;
block|}
annotation|@
name|AfterTemplate
DECL|method|after ()
name|CharMatcher
name|after
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|digit
argument_list|()
return|;
block|}
block|}
DECL|class|JavaDigit
class|class
name|JavaDigit
block|{
annotation|@
name|BeforeTemplate
DECL|method|before ()
name|CharMatcher
name|before
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|JAVA_DIGIT
return|;
block|}
annotation|@
name|AfterTemplate
DECL|method|after ()
name|CharMatcher
name|after
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|javaDigit
argument_list|()
return|;
block|}
block|}
DECL|class|JavaLetterOrDigit
class|class
name|JavaLetterOrDigit
block|{
annotation|@
name|BeforeTemplate
DECL|method|before ()
name|CharMatcher
name|before
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|JAVA_LETTER_OR_DIGIT
return|;
block|}
annotation|@
name|AfterTemplate
DECL|method|after ()
name|CharMatcher
name|after
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|javaLetterOrDigit
argument_list|()
return|;
block|}
block|}
DECL|class|JavaUpperCase
class|class
name|JavaUpperCase
block|{
annotation|@
name|BeforeTemplate
DECL|method|before ()
name|CharMatcher
name|before
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|JAVA_UPPER_CASE
return|;
block|}
annotation|@
name|AfterTemplate
DECL|method|after ()
name|CharMatcher
name|after
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|javaUpperCase
argument_list|()
return|;
block|}
block|}
DECL|class|JavaLowerCase
class|class
name|JavaLowerCase
block|{
annotation|@
name|BeforeTemplate
DECL|method|before ()
name|CharMatcher
name|before
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|JAVA_LOWER_CASE
return|;
block|}
annotation|@
name|AfterTemplate
DECL|method|after ()
name|CharMatcher
name|after
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|javaLowerCase
argument_list|()
return|;
block|}
block|}
DECL|class|JavaIsoControl
class|class
name|JavaIsoControl
block|{
annotation|@
name|BeforeTemplate
DECL|method|before ()
name|CharMatcher
name|before
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|JAVA_ISO_CONTROL
return|;
block|}
annotation|@
name|AfterTemplate
DECL|method|after ()
name|CharMatcher
name|after
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|javaIsoControl
argument_list|()
return|;
block|}
block|}
DECL|class|Invisible
class|class
name|Invisible
block|{
annotation|@
name|BeforeTemplate
DECL|method|before ()
name|CharMatcher
name|before
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|INVISIBLE
return|;
block|}
annotation|@
name|AfterTemplate
DECL|method|after ()
name|CharMatcher
name|after
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|invisible
argument_list|()
return|;
block|}
block|}
DECL|class|SingleWidth
class|class
name|SingleWidth
block|{
annotation|@
name|BeforeTemplate
DECL|method|before ()
name|CharMatcher
name|before
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|SINGLE_WIDTH
return|;
block|}
annotation|@
name|AfterTemplate
DECL|method|after ()
name|CharMatcher
name|after
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|singleWidth
argument_list|()
return|;
block|}
block|}
DECL|class|Any
class|class
name|Any
block|{
annotation|@
name|BeforeTemplate
DECL|method|before ()
name|CharMatcher
name|before
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|ANY
return|;
block|}
annotation|@
name|AfterTemplate
DECL|method|after ()
name|CharMatcher
name|after
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|any
argument_list|()
return|;
block|}
block|}
DECL|class|None
class|class
name|None
block|{
annotation|@
name|BeforeTemplate
DECL|method|before ()
name|CharMatcher
name|before
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|NONE
return|;
block|}
annotation|@
name|AfterTemplate
DECL|method|after ()
name|CharMatcher
name|after
parameter_list|()
block|{
return|return
name|CharMatcher
operator|.
name|none
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

