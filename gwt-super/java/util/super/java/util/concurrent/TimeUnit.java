begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2009 Google Inc.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|java.util.concurrent
package|package
name|java
operator|.
name|util
operator|.
name|concurrent
package|;
end_package

begin_comment
comment|/**  * OpenJDK TimeUnit minus the unsupported operations  *  * @author fry@google.com (Charles Fry)  */
end_comment

begin_enum
DECL|enum|TimeUnit
specifier|public
enum|enum
name|TimeUnit
block|{
DECL|enumConstant|NANOSECONDS
name|NANOSECONDS
block|{
specifier|public
name|long
name|toNanos
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
return|;
block|}
specifier|public
name|long
name|toMicros
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C1
operator|/
name|C0
operator|)
return|;
block|}
specifier|public
name|long
name|toMillis
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C2
operator|/
name|C0
operator|)
return|;
block|}
specifier|public
name|long
name|toSeconds
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C3
operator|/
name|C0
operator|)
return|;
block|}
specifier|public
name|long
name|toMinutes
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C4
operator|/
name|C0
operator|)
return|;
block|}
specifier|public
name|long
name|toHours
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C5
operator|/
name|C0
operator|)
return|;
block|}
specifier|public
name|long
name|toDays
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C6
operator|/
name|C0
operator|)
return|;
block|}
specifier|public
name|long
name|convert
parameter_list|(
name|long
name|d
parameter_list|,
name|TimeUnit
name|u
parameter_list|)
block|{
return|return
name|u
operator|.
name|toNanos
argument_list|(
name|d
argument_list|)
return|;
block|}
name|int
name|excessNanos
parameter_list|(
name|long
name|d
parameter_list|,
name|long
name|m
parameter_list|)
block|{
return|return
call|(
name|int
call|)
argument_list|(
name|d
operator|-
operator|(
name|m
operator|*
name|C2
operator|)
argument_list|)
return|;
block|}
block|}
block|,
DECL|enumConstant|MICROSECONDS
name|MICROSECONDS
block|{
specifier|public
name|long
name|toNanos
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C1
operator|/
name|C0
argument_list|,
name|MAX
operator|/
operator|(
name|C1
operator|/
name|C0
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toMicros
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
return|;
block|}
specifier|public
name|long
name|toMillis
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C2
operator|/
name|C1
operator|)
return|;
block|}
specifier|public
name|long
name|toSeconds
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C3
operator|/
name|C1
operator|)
return|;
block|}
specifier|public
name|long
name|toMinutes
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C4
operator|/
name|C1
operator|)
return|;
block|}
specifier|public
name|long
name|toHours
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C5
operator|/
name|C1
operator|)
return|;
block|}
specifier|public
name|long
name|toDays
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C6
operator|/
name|C1
operator|)
return|;
block|}
specifier|public
name|long
name|convert
parameter_list|(
name|long
name|d
parameter_list|,
name|TimeUnit
name|u
parameter_list|)
block|{
return|return
name|u
operator|.
name|toMicros
argument_list|(
name|d
argument_list|)
return|;
block|}
name|int
name|excessNanos
parameter_list|(
name|long
name|d
parameter_list|,
name|long
name|m
parameter_list|)
block|{
return|return
call|(
name|int
call|)
argument_list|(
operator|(
name|d
operator|*
name|C1
operator|)
operator|-
operator|(
name|m
operator|*
name|C2
operator|)
argument_list|)
return|;
block|}
block|}
block|,
DECL|enumConstant|MILLISECONDS
name|MILLISECONDS
block|{
specifier|public
name|long
name|toNanos
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C2
operator|/
name|C0
argument_list|,
name|MAX
operator|/
operator|(
name|C2
operator|/
name|C0
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toMicros
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C2
operator|/
name|C1
argument_list|,
name|MAX
operator|/
operator|(
name|C2
operator|/
name|C1
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toMillis
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
return|;
block|}
specifier|public
name|long
name|toSeconds
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C3
operator|/
name|C2
operator|)
return|;
block|}
specifier|public
name|long
name|toMinutes
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C4
operator|/
name|C2
operator|)
return|;
block|}
specifier|public
name|long
name|toHours
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C5
operator|/
name|C2
operator|)
return|;
block|}
specifier|public
name|long
name|toDays
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C6
operator|/
name|C2
operator|)
return|;
block|}
specifier|public
name|long
name|convert
parameter_list|(
name|long
name|d
parameter_list|,
name|TimeUnit
name|u
parameter_list|)
block|{
return|return
name|u
operator|.
name|toMillis
argument_list|(
name|d
argument_list|)
return|;
block|}
name|int
name|excessNanos
parameter_list|(
name|long
name|d
parameter_list|,
name|long
name|m
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
block|}
block|,
DECL|enumConstant|SECONDS
name|SECONDS
block|{
specifier|public
name|long
name|toNanos
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C3
operator|/
name|C0
argument_list|,
name|MAX
operator|/
operator|(
name|C3
operator|/
name|C0
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toMicros
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C3
operator|/
name|C1
argument_list|,
name|MAX
operator|/
operator|(
name|C3
operator|/
name|C1
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toMillis
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C3
operator|/
name|C2
argument_list|,
name|MAX
operator|/
operator|(
name|C3
operator|/
name|C2
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toSeconds
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
return|;
block|}
specifier|public
name|long
name|toMinutes
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C4
operator|/
name|C3
operator|)
return|;
block|}
specifier|public
name|long
name|toHours
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C5
operator|/
name|C3
operator|)
return|;
block|}
specifier|public
name|long
name|toDays
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C6
operator|/
name|C3
operator|)
return|;
block|}
specifier|public
name|long
name|convert
parameter_list|(
name|long
name|d
parameter_list|,
name|TimeUnit
name|u
parameter_list|)
block|{
return|return
name|u
operator|.
name|toSeconds
argument_list|(
name|d
argument_list|)
return|;
block|}
name|int
name|excessNanos
parameter_list|(
name|long
name|d
parameter_list|,
name|long
name|m
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
block|}
block|,
DECL|enumConstant|MINUTES
name|MINUTES
block|{
specifier|public
name|long
name|toNanos
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C4
operator|/
name|C0
argument_list|,
name|MAX
operator|/
operator|(
name|C4
operator|/
name|C0
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toMicros
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C4
operator|/
name|C1
argument_list|,
name|MAX
operator|/
operator|(
name|C4
operator|/
name|C1
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toMillis
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C4
operator|/
name|C2
argument_list|,
name|MAX
operator|/
operator|(
name|C4
operator|/
name|C2
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toSeconds
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C4
operator|/
name|C3
argument_list|,
name|MAX
operator|/
operator|(
name|C4
operator|/
name|C3
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toMinutes
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
return|;
block|}
specifier|public
name|long
name|toHours
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C5
operator|/
name|C4
operator|)
return|;
block|}
specifier|public
name|long
name|toDays
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C6
operator|/
name|C4
operator|)
return|;
block|}
specifier|public
name|long
name|convert
parameter_list|(
name|long
name|d
parameter_list|,
name|TimeUnit
name|u
parameter_list|)
block|{
return|return
name|u
operator|.
name|toMinutes
argument_list|(
name|d
argument_list|)
return|;
block|}
name|int
name|excessNanos
parameter_list|(
name|long
name|d
parameter_list|,
name|long
name|m
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
block|}
block|,
DECL|enumConstant|HOURS
name|HOURS
block|{
specifier|public
name|long
name|toNanos
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C5
operator|/
name|C0
argument_list|,
name|MAX
operator|/
operator|(
name|C5
operator|/
name|C0
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toMicros
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C5
operator|/
name|C1
argument_list|,
name|MAX
operator|/
operator|(
name|C5
operator|/
name|C1
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toMillis
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C5
operator|/
name|C2
argument_list|,
name|MAX
operator|/
operator|(
name|C5
operator|/
name|C2
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toSeconds
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C5
operator|/
name|C3
argument_list|,
name|MAX
operator|/
operator|(
name|C5
operator|/
name|C3
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toMinutes
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C5
operator|/
name|C4
argument_list|,
name|MAX
operator|/
operator|(
name|C5
operator|/
name|C4
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toHours
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
return|;
block|}
specifier|public
name|long
name|toDays
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
operator|/
operator|(
name|C6
operator|/
name|C5
operator|)
return|;
block|}
specifier|public
name|long
name|convert
parameter_list|(
name|long
name|d
parameter_list|,
name|TimeUnit
name|u
parameter_list|)
block|{
return|return
name|u
operator|.
name|toHours
argument_list|(
name|d
argument_list|)
return|;
block|}
name|int
name|excessNanos
parameter_list|(
name|long
name|d
parameter_list|,
name|long
name|m
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
block|}
block|,
DECL|enumConstant|DAYS
name|DAYS
block|{
specifier|public
name|long
name|toNanos
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C6
operator|/
name|C0
argument_list|,
name|MAX
operator|/
operator|(
name|C6
operator|/
name|C0
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toMicros
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C6
operator|/
name|C1
argument_list|,
name|MAX
operator|/
operator|(
name|C6
operator|/
name|C1
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toMillis
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C6
operator|/
name|C2
argument_list|,
name|MAX
operator|/
operator|(
name|C6
operator|/
name|C2
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toSeconds
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C6
operator|/
name|C3
argument_list|,
name|MAX
operator|/
operator|(
name|C6
operator|/
name|C3
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toMinutes
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C6
operator|/
name|C4
argument_list|,
name|MAX
operator|/
operator|(
name|C6
operator|/
name|C4
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toHours
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|x
argument_list|(
name|d
argument_list|,
name|C6
operator|/
name|C5
argument_list|,
name|MAX
operator|/
operator|(
name|C6
operator|/
name|C5
operator|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|toDays
parameter_list|(
name|long
name|d
parameter_list|)
block|{
return|return
name|d
return|;
block|}
specifier|public
name|long
name|convert
parameter_list|(
name|long
name|d
parameter_list|,
name|TimeUnit
name|u
parameter_list|)
block|{
return|return
name|u
operator|.
name|toDays
argument_list|(
name|d
argument_list|)
return|;
block|}
name|int
name|excessNanos
parameter_list|(
name|long
name|d
parameter_list|,
name|long
name|m
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
block|}
block|;
comment|// Handy constants for conversion methods
DECL|field|C0
specifier|static
specifier|final
name|long
name|C0
init|=
literal|1L
decl_stmt|;
DECL|field|C1
specifier|static
specifier|final
name|long
name|C1
init|=
name|C0
operator|*
literal|1000L
decl_stmt|;
DECL|field|C2
specifier|static
specifier|final
name|long
name|C2
init|=
name|C1
operator|*
literal|1000L
decl_stmt|;
DECL|field|C3
specifier|static
specifier|final
name|long
name|C3
init|=
name|C2
operator|*
literal|1000L
decl_stmt|;
DECL|field|C4
specifier|static
specifier|final
name|long
name|C4
init|=
name|C3
operator|*
literal|60L
decl_stmt|;
DECL|field|C5
specifier|static
specifier|final
name|long
name|C5
init|=
name|C4
operator|*
literal|60L
decl_stmt|;
DECL|field|C6
specifier|static
specifier|final
name|long
name|C6
init|=
name|C5
operator|*
literal|24L
decl_stmt|;
DECL|field|MAX
specifier|static
specifier|final
name|long
name|MAX
init|=
name|Long
operator|.
name|MAX_VALUE
decl_stmt|;
comment|/**    * Scale d by m, checking for overflow.    * This has a short name to make above code more readable.    */
DECL|method|x (long d, long m, long over)
specifier|static
name|long
name|x
parameter_list|(
name|long
name|d
parameter_list|,
name|long
name|m
parameter_list|,
name|long
name|over
parameter_list|)
block|{
if|if
condition|(
name|d
operator|>
name|over
condition|)
return|return
name|Long
operator|.
name|MAX_VALUE
return|;
if|if
condition|(
name|d
operator|<
operator|-
name|over
condition|)
return|return
name|Long
operator|.
name|MIN_VALUE
return|;
return|return
name|d
operator|*
name|m
return|;
block|}
DECL|method|convert (long sourceDuration, TimeUnit sourceUnit)
specifier|public
specifier|abstract
name|long
name|convert
parameter_list|(
name|long
name|sourceDuration
parameter_list|,
name|TimeUnit
name|sourceUnit
parameter_list|)
function_decl|;
DECL|method|toNanos (long duration)
specifier|public
specifier|abstract
name|long
name|toNanos
parameter_list|(
name|long
name|duration
parameter_list|)
function_decl|;
DECL|method|toMicros (long duration)
specifier|public
specifier|abstract
name|long
name|toMicros
parameter_list|(
name|long
name|duration
parameter_list|)
function_decl|;
DECL|method|toMillis (long duration)
specifier|public
specifier|abstract
name|long
name|toMillis
parameter_list|(
name|long
name|duration
parameter_list|)
function_decl|;
DECL|method|toSeconds (long duration)
specifier|public
specifier|abstract
name|long
name|toSeconds
parameter_list|(
name|long
name|duration
parameter_list|)
function_decl|;
DECL|method|toMinutes (long duration)
specifier|public
specifier|abstract
name|long
name|toMinutes
parameter_list|(
name|long
name|duration
parameter_list|)
function_decl|;
DECL|method|toHours (long duration)
specifier|public
specifier|abstract
name|long
name|toHours
parameter_list|(
name|long
name|duration
parameter_list|)
function_decl|;
DECL|method|toDays (long duration)
specifier|public
specifier|abstract
name|long
name|toDays
parameter_list|(
name|long
name|duration
parameter_list|)
function_decl|;
DECL|method|excessNanos (long d, long m)
specifier|abstract
name|int
name|excessNanos
parameter_list|(
name|long
name|d
parameter_list|,
name|long
name|m
parameter_list|)
function_decl|;
block|}
end_enum

end_unit

