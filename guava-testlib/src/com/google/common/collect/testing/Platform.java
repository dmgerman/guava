begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2008 Google Inc.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.collect.testing
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|testing
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_comment
comment|/**  * Methods factored out so that they can be emulated differently in GWT.  *  *<p>This class is emulated in GWT.  *  * @author Hayward Chan  */
end_comment

begin_class
DECL|class|Platform
class|class
name|Platform
block|{
comment|/**    * Calls {@link Class#isInstance(Object)}.  Factored out so that it can be    * emulated in GWT.    *    *<p>This method always returns {@code true} in GWT.    */
DECL|method|checkIsInstance (Class<?> clazz, Object obj)
specifier|static
name|boolean
name|checkIsInstance
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
parameter_list|,
name|Object
name|obj
parameter_list|)
block|{
return|return
name|clazz
operator|.
name|isInstance
argument_list|(
name|obj
argument_list|)
return|;
block|}
DECL|method|clone (T[] array)
specifier|static
parameter_list|<
name|T
parameter_list|>
name|T
index|[]
name|clone
parameter_list|(
name|T
index|[]
name|array
parameter_list|)
block|{
return|return
name|array
operator|.
name|clone
argument_list|()
return|;
block|}
comment|// Class.cast is not supported in GWT.  This method is a no-op in GWT.
DECL|method|checkCast (Class<?> clazz, Object obj)
specifier|static
name|void
name|checkCast
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
parameter_list|,
name|Object
name|obj
parameter_list|)
block|{
name|clazz
operator|.
name|cast
argument_list|(
name|obj
argument_list|)
expr_stmt|;
block|}
DECL|method|format (String template, Object... args)
specifier|static
name|String
name|format
parameter_list|(
name|String
name|template
parameter_list|,
name|Object
modifier|...
name|args
parameter_list|)
block|{
return|return
name|String
operator|.
name|format
argument_list|(
name|template
argument_list|,
name|args
argument_list|)
return|;
block|}
comment|/**    * Wrapper around {@link System#arraycopy} so that it can be emulated    * correctly in GWT.    *    *<p>It is only intended for the case {@code src} and {@code dest} are    * different.  It also doesn't validate the types and indices.    *    *<p>As of GWT 2.0, The built-in {@link System#arraycopy} doesn't work    * in general case.  See    * http://code.google.com/p/google-web-toolkit/issues/detail?id=3621    * for more details.    */
DECL|method|unsafeArrayCopy ( Object[] src, int srcPos, Object[] dest, int destPos, int length)
specifier|static
name|void
name|unsafeArrayCopy
parameter_list|(
name|Object
index|[]
name|src
parameter_list|,
name|int
name|srcPos
parameter_list|,
name|Object
index|[]
name|dest
parameter_list|,
name|int
name|destPos
parameter_list|,
name|int
name|length
parameter_list|)
block|{
name|System
operator|.
name|arraycopy
argument_list|(
name|src
argument_list|,
name|srcPos
argument_list|,
name|dest
argument_list|,
name|destPos
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
DECL|method|getMethod (Class<?> clazz, String name)
specifier|static
name|Method
name|getMethod
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
parameter_list|,
name|String
name|name
parameter_list|)
block|{
try|try
block|{
return|return
name|clazz
operator|.
name|getMethod
argument_list|(
name|name
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|classGetSimpleName (Class<?> clazz)
specifier|static
name|String
name|classGetSimpleName
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
parameter_list|)
block|{
return|return
name|clazz
operator|.
name|getSimpleName
argument_list|()
return|;
block|}
DECL|method|Platform ()
specifier|private
name|Platform
parameter_list|()
block|{}
block|}
end_class

end_unit

