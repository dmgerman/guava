begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2008 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.collect.testing
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|testing
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_comment
comment|/**  * Adapts a test iterable generator to give a TestIteratorGenerator.  *  *<p>This class is GWT compatible.  *  * @author George van den Driessche  */
end_comment

begin_class
DECL|class|DerivedTestIteratorGenerator
specifier|public
specifier|final
class|class
name|DerivedTestIteratorGenerator
parameter_list|<
name|E
parameter_list|>
implements|implements
name|TestIteratorGenerator
argument_list|<
name|E
argument_list|>
block|{
specifier|private
specifier|final
name|TestSubjectGenerator
argument_list|<
name|?
extends|extends
name|Iterable
argument_list|<
name|E
argument_list|>
argument_list|>
DECL|field|collectionGenerator
name|collectionGenerator
decl_stmt|;
DECL|method|DerivedTestIteratorGenerator ( TestSubjectGenerator<? extends Iterable<E>> collectionGenerator)
specifier|public
name|DerivedTestIteratorGenerator
parameter_list|(
name|TestSubjectGenerator
argument_list|<
name|?
extends|extends
name|Iterable
argument_list|<
name|E
argument_list|>
argument_list|>
name|collectionGenerator
parameter_list|)
block|{
name|this
operator|.
name|collectionGenerator
operator|=
name|collectionGenerator
expr_stmt|;
block|}
DECL|method|getCollectionGenerator ()
specifier|public
name|TestSubjectGenerator
argument_list|<
name|?
extends|extends
name|Iterable
argument_list|<
name|E
argument_list|>
argument_list|>
name|getCollectionGenerator
parameter_list|()
block|{
return|return
name|collectionGenerator
return|;
block|}
annotation|@
name|Override
DECL|method|get ()
specifier|public
name|Iterator
argument_list|<
name|E
argument_list|>
name|get
parameter_list|()
block|{
return|return
name|collectionGenerator
operator|.
name|createTestSubject
argument_list|()
operator|.
name|iterator
argument_list|()
return|;
block|}
block|}
end_class

end_unit

