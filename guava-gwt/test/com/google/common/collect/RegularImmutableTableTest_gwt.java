begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2008 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.collect
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
package|;
end_package

begin_class
DECL|class|RegularImmutableTableTest_gwt
specifier|public
class|class
name|RegularImmutableTableTest_gwt
extends|extends
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|junit
operator|.
name|client
operator|.
name|GWTTestCase
block|{
DECL|method|getModuleName ()
annotation|@
name|Override
specifier|public
name|String
name|getModuleName
parameter_list|()
block|{
return|return
literal|"com.google.common.collect.testModule"
return|;
block|}
DECL|method|testCellSet ()
specifier|public
name|void
name|testCellSet
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCellSet
argument_list|()
expr_stmt|;
block|}
DECL|method|testClear ()
specifier|public
name|void
name|testClear
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testClear
argument_list|()
expr_stmt|;
block|}
DECL|method|testColumn ()
specifier|public
name|void
name|testColumn
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testColumn
argument_list|()
expr_stmt|;
block|}
DECL|method|testColumnKeySet ()
specifier|public
name|void
name|testColumnKeySet
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testColumnKeySet
argument_list|()
expr_stmt|;
block|}
DECL|method|testColumnMap ()
specifier|public
name|void
name|testColumnMap
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testColumnMap
argument_list|()
expr_stmt|;
block|}
DECL|method|testConsistentHashCode ()
specifier|public
name|void
name|testConsistentHashCode
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConsistentHashCode
argument_list|()
expr_stmt|;
block|}
DECL|method|testConsistentToString ()
specifier|public
name|void
name|testConsistentToString
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConsistentToString
argument_list|()
expr_stmt|;
block|}
DECL|method|testContains ()
specifier|public
name|void
name|testContains
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testContains
argument_list|()
expr_stmt|;
block|}
DECL|method|testContainsColumn ()
specifier|public
name|void
name|testContainsColumn
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testContainsColumn
argument_list|()
expr_stmt|;
block|}
DECL|method|testContainsRow ()
specifier|public
name|void
name|testContainsRow
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testContainsRow
argument_list|()
expr_stmt|;
block|}
DECL|method|testContainsValue ()
specifier|public
name|void
name|testContainsValue
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testContainsValue
argument_list|()
expr_stmt|;
block|}
DECL|method|testForCells ()
specifier|public
name|void
name|testForCells
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testForCells
argument_list|()
expr_stmt|;
block|}
DECL|method|testGet ()
specifier|public
name|void
name|testGet
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGet
argument_list|()
expr_stmt|;
block|}
DECL|method|testIsEmpty ()
specifier|public
name|void
name|testIsEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testIsEmpty
argument_list|()
expr_stmt|;
block|}
DECL|method|testPut ()
specifier|public
name|void
name|testPut
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPut
argument_list|()
expr_stmt|;
block|}
DECL|method|testPutAll ()
specifier|public
name|void
name|testPutAll
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPutAll
argument_list|()
expr_stmt|;
block|}
DECL|method|testRemove ()
specifier|public
name|void
name|testRemove
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testRemove
argument_list|()
expr_stmt|;
block|}
DECL|method|testRow ()
specifier|public
name|void
name|testRow
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testRow
argument_list|()
expr_stmt|;
block|}
DECL|method|testRowKeySet ()
specifier|public
name|void
name|testRowKeySet
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testRowKeySet
argument_list|()
expr_stmt|;
block|}
DECL|method|testRowMap ()
specifier|public
name|void
name|testRowMap
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testRowMap
argument_list|()
expr_stmt|;
block|}
DECL|method|testSize ()
specifier|public
name|void
name|testSize
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testSize
argument_list|()
expr_stmt|;
block|}
DECL|method|testValues ()
specifier|public
name|void
name|testValues
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|RegularImmutableTableTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testValues
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

