begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2008 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.collect
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
package|;
end_package

begin_class
DECL|class|IteratorsTest_gwt
specifier|public
class|class
name|IteratorsTest_gwt
extends|extends
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|junit
operator|.
name|client
operator|.
name|GWTTestCase
block|{
DECL|method|getModuleName ()
annotation|@
name|Override
specifier|public
name|String
name|getModuleName
parameter_list|()
block|{
return|return
literal|"com.google.common.collect.testModule"
return|;
block|}
DECL|method|testAddAllToList ()
specifier|public
name|void
name|testAddAllToList
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAddAllToList
argument_list|()
expr_stmt|;
block|}
DECL|method|testAddAllToSet ()
specifier|public
name|void
name|testAddAllToSet
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAddAllToSet
argument_list|()
expr_stmt|;
block|}
DECL|method|testAddAllWithEmptyIterator ()
specifier|public
name|void
name|testAddAllWithEmptyIterator
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAddAllWithEmptyIterator
argument_list|()
expr_stmt|;
block|}
DECL|method|testAdvance_basic ()
specifier|public
name|void
name|testAdvance_basic
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAdvance_basic
argument_list|()
expr_stmt|;
block|}
DECL|method|testAdvance_illegalArgument ()
specifier|public
name|void
name|testAdvance_illegalArgument
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAdvance_illegalArgument
argument_list|()
expr_stmt|;
block|}
DECL|method|testAdvance_pastEnd ()
specifier|public
name|void
name|testAdvance_pastEnd
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAdvance_pastEnd
argument_list|()
expr_stmt|;
block|}
DECL|method|testAll ()
specifier|public
name|void
name|testAll
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAll
argument_list|()
expr_stmt|;
block|}
DECL|method|testAny ()
specifier|public
name|void
name|testAny
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAny
argument_list|()
expr_stmt|;
block|}
DECL|method|testAsEnumerationEmpty ()
specifier|public
name|void
name|testAsEnumerationEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAsEnumerationEmpty
argument_list|()
expr_stmt|;
block|}
DECL|method|testAsEnumerationSingleton ()
specifier|public
name|void
name|testAsEnumerationSingleton
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAsEnumerationSingleton
argument_list|()
expr_stmt|;
block|}
DECL|method|testAsEnumerationTypical ()
specifier|public
name|void
name|testAsEnumerationTypical
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAsEnumerationTypical
argument_list|()
expr_stmt|;
block|}
DECL|method|testConcatContainingNull ()
specifier|public
name|void
name|testConcatContainingNull
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcatContainingNull
argument_list|()
expr_stmt|;
block|}
DECL|method|testConcatNested_appendToBeginning ()
specifier|public
name|void
name|testConcatNested_appendToBeginning
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcatNested_appendToBeginning
argument_list|()
expr_stmt|;
block|}
DECL|method|testConcatNested_appendToEnd ()
specifier|public
name|void
name|testConcatNested_appendToEnd
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcatNested_appendToEnd
argument_list|()
expr_stmt|;
block|}
DECL|method|testConcatPartiallyAdvanced ()
specifier|public
name|void
name|testConcatPartiallyAdvanced
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcatPartiallyAdvanced
argument_list|()
expr_stmt|;
block|}
DECL|method|testConcatVarArgsContainingNull ()
specifier|public
name|void
name|testConcatVarArgsContainingNull
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcatVarArgsContainingNull
argument_list|()
expr_stmt|;
block|}
DECL|method|testConsumingIterator ()
specifier|public
name|void
name|testConsumingIterator
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConsumingIterator
argument_list|()
expr_stmt|;
block|}
DECL|method|testCycleNoSuchElementException ()
specifier|public
name|void
name|testCycleNoSuchElementException
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCycleNoSuchElementException
argument_list|()
expr_stmt|;
block|}
DECL|method|testCycleOfEmpty ()
specifier|public
name|void
name|testCycleOfEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCycleOfEmpty
argument_list|()
expr_stmt|;
block|}
DECL|method|testCycleOfOne ()
specifier|public
name|void
name|testCycleOfOne
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCycleOfOne
argument_list|()
expr_stmt|;
block|}
DECL|method|testCycleOfOneWithRemove ()
specifier|public
name|void
name|testCycleOfOneWithRemove
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCycleOfOneWithRemove
argument_list|()
expr_stmt|;
block|}
DECL|method|testCycleOfTwo ()
specifier|public
name|void
name|testCycleOfTwo
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCycleOfTwo
argument_list|()
expr_stmt|;
block|}
DECL|method|testCycleOfTwoWithRemove ()
specifier|public
name|void
name|testCycleOfTwoWithRemove
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCycleOfTwoWithRemove
argument_list|()
expr_stmt|;
block|}
DECL|method|testCycleRemoveAfterHasNext ()
specifier|public
name|void
name|testCycleRemoveAfterHasNext
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCycleRemoveAfterHasNext
argument_list|()
expr_stmt|;
block|}
DECL|method|testCycleRemoveAfterHasNextExtraPicky ()
specifier|public
name|void
name|testCycleRemoveAfterHasNextExtraPicky
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCycleRemoveAfterHasNextExtraPicky
argument_list|()
expr_stmt|;
block|}
DECL|method|testCycleRemoveSameElementTwice ()
specifier|public
name|void
name|testCycleRemoveSameElementTwice
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCycleRemoveSameElementTwice
argument_list|()
expr_stmt|;
block|}
DECL|method|testCycleRemoveWithoutNext ()
specifier|public
name|void
name|testCycleRemoveWithoutNext
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCycleRemoveWithoutNext
argument_list|()
expr_stmt|;
block|}
DECL|method|testCycleWhenRemoveIsNotSupported ()
specifier|public
name|void
name|testCycleWhenRemoveIsNotSupported
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCycleWhenRemoveIsNotSupported
argument_list|()
expr_stmt|;
block|}
DECL|method|testElementsEqual ()
specifier|public
name|void
name|testElementsEqual
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testElementsEqual
argument_list|()
expr_stmt|;
block|}
DECL|method|testEmptyIterator ()
specifier|public
name|void
name|testEmptyIterator
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testEmptyIterator
argument_list|()
expr_stmt|;
block|}
DECL|method|testEmptyListIterator ()
specifier|public
name|void
name|testEmptyListIterator
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testEmptyListIterator
argument_list|()
expr_stmt|;
block|}
DECL|method|testEmptyModifiableIterator ()
specifier|public
name|void
name|testEmptyModifiableIterator
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testEmptyModifiableIterator
argument_list|()
expr_stmt|;
block|}
DECL|method|testFilterMatchAll ()
specifier|public
name|void
name|testFilterMatchAll
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testFilterMatchAll
argument_list|()
expr_stmt|;
block|}
DECL|method|testFilterNoMatch ()
specifier|public
name|void
name|testFilterNoMatch
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testFilterNoMatch
argument_list|()
expr_stmt|;
block|}
DECL|method|testFilterNothing ()
specifier|public
name|void
name|testFilterNothing
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testFilterNothing
argument_list|()
expr_stmt|;
block|}
DECL|method|testFilterSimple ()
specifier|public
name|void
name|testFilterSimple
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testFilterSimple
argument_list|()
expr_stmt|;
block|}
DECL|method|testFind_firstElement ()
specifier|public
name|void
name|testFind_firstElement
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testFind_firstElement
argument_list|()
expr_stmt|;
block|}
DECL|method|testFind_lastElement ()
specifier|public
name|void
name|testFind_lastElement
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testFind_lastElement
argument_list|()
expr_stmt|;
block|}
DECL|method|testFind_matchAlways ()
specifier|public
name|void
name|testFind_matchAlways
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testFind_matchAlways
argument_list|()
expr_stmt|;
block|}
DECL|method|testFind_notPresent ()
specifier|public
name|void
name|testFind_notPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testFind_notPresent
argument_list|()
expr_stmt|;
block|}
DECL|method|testFind_withDefault_first ()
specifier|public
name|void
name|testFind_withDefault_first
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testFind_withDefault_first
argument_list|()
expr_stmt|;
block|}
DECL|method|testFind_withDefault_last ()
specifier|public
name|void
name|testFind_withDefault_last
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testFind_withDefault_last
argument_list|()
expr_stmt|;
block|}
DECL|method|testFind_withDefault_matchAlways ()
specifier|public
name|void
name|testFind_withDefault_matchAlways
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testFind_withDefault_matchAlways
argument_list|()
expr_stmt|;
block|}
DECL|method|testFind_withDefault_notPresent ()
specifier|public
name|void
name|testFind_withDefault_notPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testFind_withDefault_notPresent
argument_list|()
expr_stmt|;
block|}
DECL|method|testFind_withDefault_notPresent_nullReturn ()
specifier|public
name|void
name|testFind_withDefault_notPresent_nullReturn
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testFind_withDefault_notPresent_nullReturn
argument_list|()
expr_stmt|;
block|}
DECL|method|testForArrayEmpty ()
specifier|public
name|void
name|testForArrayEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testForArrayEmpty
argument_list|()
expr_stmt|;
block|}
DECL|method|testForArrayLength0 ()
specifier|public
name|void
name|testForArrayLength0
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testForArrayLength0
argument_list|()
expr_stmt|;
block|}
DECL|method|testForArrayOffset ()
specifier|public
name|void
name|testForArrayOffset
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testForArrayOffset
argument_list|()
expr_stmt|;
block|}
DECL|method|testForArrayTypical ()
specifier|public
name|void
name|testForArrayTypical
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testForArrayTypical
argument_list|()
expr_stmt|;
block|}
DECL|method|testForEnumerationEmpty ()
specifier|public
name|void
name|testForEnumerationEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testForEnumerationEmpty
argument_list|()
expr_stmt|;
block|}
DECL|method|testForEnumerationSingleton ()
specifier|public
name|void
name|testForEnumerationSingleton
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testForEnumerationSingleton
argument_list|()
expr_stmt|;
block|}
DECL|method|testForEnumerationTypical ()
specifier|public
name|void
name|testForEnumerationTypical
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testForEnumerationTypical
argument_list|()
expr_stmt|;
block|}
DECL|method|testFrequency ()
specifier|public
name|void
name|testFrequency
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testFrequency
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetLast_basic ()
specifier|public
name|void
name|testGetLast_basic
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetLast_basic
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetLast_exception ()
specifier|public
name|void
name|testGetLast_exception
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetLast_exception
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetLast_withDefault_empty ()
specifier|public
name|void
name|testGetLast_withDefault_empty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetLast_withDefault_empty
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetLast_withDefault_empty_null ()
specifier|public
name|void
name|testGetLast_withDefault_empty_null
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetLast_withDefault_empty_null
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetLast_withDefault_singleton ()
specifier|public
name|void
name|testGetLast_withDefault_singleton
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetLast_withDefault_singleton
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetLast_withDefault_two ()
specifier|public
name|void
name|testGetLast_withDefault_two
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetLast_withDefault_two
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetNext_withDefault_empty ()
specifier|public
name|void
name|testGetNext_withDefault_empty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetNext_withDefault_empty
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetNext_withDefault_empty_null ()
specifier|public
name|void
name|testGetNext_withDefault_empty_null
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetNext_withDefault_empty_null
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetNext_withDefault_singleton ()
specifier|public
name|void
name|testGetNext_withDefault_singleton
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetNext_withDefault_singleton
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetNext_withDefault_two ()
specifier|public
name|void
name|testGetNext_withDefault_two
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetNext_withDefault_two
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetOnlyElement_noDefault_empty ()
specifier|public
name|void
name|testGetOnlyElement_noDefault_empty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetOnlyElement_noDefault_empty
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetOnlyElement_noDefault_fiveElements ()
specifier|public
name|void
name|testGetOnlyElement_noDefault_fiveElements
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetOnlyElement_noDefault_fiveElements
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetOnlyElement_noDefault_moreThanFiveElements ()
specifier|public
name|void
name|testGetOnlyElement_noDefault_moreThanFiveElements
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetOnlyElement_noDefault_moreThanFiveElements
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetOnlyElement_noDefault_moreThanOneLessThanFiveElements ()
specifier|public
name|void
name|testGetOnlyElement_noDefault_moreThanOneLessThanFiveElements
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetOnlyElement_noDefault_moreThanOneLessThanFiveElements
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetOnlyElement_noDefault_valid ()
specifier|public
name|void
name|testGetOnlyElement_noDefault_valid
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetOnlyElement_noDefault_valid
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetOnlyElement_withDefault_empty ()
specifier|public
name|void
name|testGetOnlyElement_withDefault_empty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetOnlyElement_withDefault_empty
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetOnlyElement_withDefault_empty_null ()
specifier|public
name|void
name|testGetOnlyElement_withDefault_empty_null
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetOnlyElement_withDefault_empty_null
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetOnlyElement_withDefault_singleton ()
specifier|public
name|void
name|testGetOnlyElement_withDefault_singleton
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetOnlyElement_withDefault_singleton
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetOnlyElement_withDefault_two ()
specifier|public
name|void
name|testGetOnlyElement_withDefault_two
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetOnlyElement_withDefault_two
argument_list|()
expr_stmt|;
block|}
DECL|method|testGet_atSize ()
specifier|public
name|void
name|testGet_atSize
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGet_atSize
argument_list|()
expr_stmt|;
block|}
DECL|method|testGet_basic ()
specifier|public
name|void
name|testGet_basic
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGet_basic
argument_list|()
expr_stmt|;
block|}
DECL|method|testGet_empty ()
specifier|public
name|void
name|testGet_empty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGet_empty
argument_list|()
expr_stmt|;
block|}
DECL|method|testGet_negativeIndex ()
specifier|public
name|void
name|testGet_negativeIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGet_negativeIndex
argument_list|()
expr_stmt|;
block|}
DECL|method|testGet_pastEnd ()
specifier|public
name|void
name|testGet_pastEnd
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGet_pastEnd
argument_list|()
expr_stmt|;
block|}
DECL|method|testGet_withDefault_atSize ()
specifier|public
name|void
name|testGet_withDefault_atSize
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGet_withDefault_atSize
argument_list|()
expr_stmt|;
block|}
DECL|method|testGet_withDefault_basic ()
specifier|public
name|void
name|testGet_withDefault_basic
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGet_withDefault_basic
argument_list|()
expr_stmt|;
block|}
DECL|method|testGet_withDefault_negativeIndex ()
specifier|public
name|void
name|testGet_withDefault_negativeIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGet_withDefault_negativeIndex
argument_list|()
expr_stmt|;
block|}
DECL|method|testGet_withDefault_pastEnd ()
specifier|public
name|void
name|testGet_withDefault_pastEnd
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGet_withDefault_pastEnd
argument_list|()
expr_stmt|;
block|}
DECL|method|testIndexOf_consumedData ()
specifier|public
name|void
name|testIndexOf_consumedData
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testIndexOf_consumedData
argument_list|()
expr_stmt|;
block|}
DECL|method|testIndexOf_consumedDataNoMatch ()
specifier|public
name|void
name|testIndexOf_consumedDataNoMatch
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testIndexOf_consumedDataNoMatch
argument_list|()
expr_stmt|;
block|}
DECL|method|testIndexOf_consumedDataWithDuplicates ()
specifier|public
name|void
name|testIndexOf_consumedDataWithDuplicates
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testIndexOf_consumedDataWithDuplicates
argument_list|()
expr_stmt|;
block|}
DECL|method|testLimit ()
specifier|public
name|void
name|testLimit
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testLimit
argument_list|()
expr_stmt|;
block|}
DECL|method|testLimitRemove ()
specifier|public
name|void
name|testLimitRemove
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testLimitRemove
argument_list|()
expr_stmt|;
block|}
DECL|method|testNullFriendlyTransform ()
specifier|public
name|void
name|testNullFriendlyTransform
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNullFriendlyTransform
argument_list|()
expr_stmt|;
block|}
DECL|method|testPaddedPartitionRandomAccess ()
specifier|public
name|void
name|testPaddedPartitionRandomAccess
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPaddedPartitionRandomAccess
argument_list|()
expr_stmt|;
block|}
DECL|method|testPaddedPartition_badSize ()
specifier|public
name|void
name|testPaddedPartition_badSize
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPaddedPartition_badSize
argument_list|()
expr_stmt|;
block|}
DECL|method|testPaddedPartition_empty ()
specifier|public
name|void
name|testPaddedPartition_empty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPaddedPartition_empty
argument_list|()
expr_stmt|;
block|}
DECL|method|testPaddedPartition_singleton1 ()
specifier|public
name|void
name|testPaddedPartition_singleton1
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPaddedPartition_singleton1
argument_list|()
expr_stmt|;
block|}
DECL|method|testPaddedPartition_singleton2 ()
specifier|public
name|void
name|testPaddedPartition_singleton2
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPaddedPartition_singleton2
argument_list|()
expr_stmt|;
block|}
DECL|method|testPaddedPartition_view ()
specifier|public
name|void
name|testPaddedPartition_view
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPaddedPartition_view
argument_list|()
expr_stmt|;
block|}
DECL|method|testPartition_badSize ()
specifier|public
name|void
name|testPartition_badSize
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPartition_badSize
argument_list|()
expr_stmt|;
block|}
DECL|method|testPartition_empty ()
specifier|public
name|void
name|testPartition_empty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPartition_empty
argument_list|()
expr_stmt|;
block|}
DECL|method|testPartition_singleton1 ()
specifier|public
name|void
name|testPartition_singleton1
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPartition_singleton1
argument_list|()
expr_stmt|;
block|}
DECL|method|testPartition_singleton2 ()
specifier|public
name|void
name|testPartition_singleton2
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPartition_singleton2
argument_list|()
expr_stmt|;
block|}
DECL|method|testPartition_view ()
specifier|public
name|void
name|testPartition_view
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPartition_view
argument_list|()
expr_stmt|;
block|}
DECL|method|testPeekingIteratorShortCircuit ()
specifier|public
name|void
name|testPeekingIteratorShortCircuit
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPeekingIteratorShortCircuit
argument_list|()
expr_stmt|;
block|}
DECL|method|testPoorlyBehavedTransform ()
specifier|public
name|void
name|testPoorlyBehavedTransform
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPoorlyBehavedTransform
argument_list|()
expr_stmt|;
block|}
DECL|method|testRemoveAll ()
specifier|public
name|void
name|testRemoveAll
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testRemoveAll
argument_list|()
expr_stmt|;
block|}
DECL|method|testRemoveIf ()
specifier|public
name|void
name|testRemoveIf
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testRemoveIf
argument_list|()
expr_stmt|;
block|}
DECL|method|testRetainAll ()
specifier|public
name|void
name|testRetainAll
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testRetainAll
argument_list|()
expr_stmt|;
block|}
DECL|method|testSize0 ()
specifier|public
name|void
name|testSize0
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testSize0
argument_list|()
expr_stmt|;
block|}
DECL|method|testSize1 ()
specifier|public
name|void
name|testSize1
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testSize1
argument_list|()
expr_stmt|;
block|}
DECL|method|testSize_partiallyConsumed ()
specifier|public
name|void
name|testSize_partiallyConsumed
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testSize_partiallyConsumed
argument_list|()
expr_stmt|;
block|}
DECL|method|testToString ()
specifier|public
name|void
name|testToString
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testToString
argument_list|()
expr_stmt|;
block|}
DECL|method|testToStringEmptyIterator ()
specifier|public
name|void
name|testToStringEmptyIterator
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testToStringEmptyIterator
argument_list|()
expr_stmt|;
block|}
DECL|method|testToStringWithNull ()
specifier|public
name|void
name|testToStringWithNull
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testToStringWithNull
argument_list|()
expr_stmt|;
block|}
DECL|method|testTransform ()
specifier|public
name|void
name|testTransform
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testTransform
argument_list|()
expr_stmt|;
block|}
DECL|method|testTransformRemove ()
specifier|public
name|void
name|testTransformRemove
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testTransformRemove
argument_list|()
expr_stmt|;
block|}
DECL|method|testTryFind_alwaysFalse_isPresent ()
specifier|public
name|void
name|testTryFind_alwaysFalse_isPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testTryFind_alwaysFalse_isPresent
argument_list|()
expr_stmt|;
block|}
DECL|method|testTryFind_alwaysFalse_orDefault ()
specifier|public
name|void
name|testTryFind_alwaysFalse_orDefault
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testTryFind_alwaysFalse_orDefault
argument_list|()
expr_stmt|;
block|}
DECL|method|testTryFind_alwaysTrue ()
specifier|public
name|void
name|testTryFind_alwaysTrue
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testTryFind_alwaysTrue
argument_list|()
expr_stmt|;
block|}
DECL|method|testTryFind_firstElement ()
specifier|public
name|void
name|testTryFind_firstElement
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testTryFind_firstElement
argument_list|()
expr_stmt|;
block|}
DECL|method|testTryFind_lastElement ()
specifier|public
name|void
name|testTryFind_lastElement
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testTryFind_lastElement
argument_list|()
expr_stmt|;
block|}
DECL|method|testUnmodifiableIteratorShortCircuit ()
specifier|public
name|void
name|testUnmodifiableIteratorShortCircuit
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testUnmodifiableIteratorShortCircuit
argument_list|()
expr_stmt|;
block|}
DECL|method|test_contains_nonnull_no ()
specifier|public
name|void
name|test_contains_nonnull_no
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|test_contains_nonnull_no
argument_list|()
expr_stmt|;
block|}
DECL|method|test_contains_nonnull_yes ()
specifier|public
name|void
name|test_contains_nonnull_yes
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|test_contains_nonnull_yes
argument_list|()
expr_stmt|;
block|}
DECL|method|test_contains_null_no ()
specifier|public
name|void
name|test_contains_null_no
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|test_contains_null_no
argument_list|()
expr_stmt|;
block|}
DECL|method|test_contains_null_yes ()
specifier|public
name|void
name|test_contains_null_yes
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|IteratorsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|test_contains_null_yes
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

