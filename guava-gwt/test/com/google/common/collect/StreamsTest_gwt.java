begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2008 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.collect
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
package|;
end_package

begin_class
DECL|class|StreamsTest_gwt
specifier|public
class|class
name|StreamsTest_gwt
extends|extends
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|junit
operator|.
name|client
operator|.
name|GWTTestCase
block|{
DECL|method|getModuleName ()
annotation|@
name|Override
specifier|public
name|String
name|getModuleName
parameter_list|()
block|{
return|return
literal|"com.google.common.collect.testModule"
return|;
block|}
DECL|method|testConcatInfiniteStream ()
specifier|public
name|void
name|testConcatInfiniteStream
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcatInfiniteStream
argument_list|()
expr_stmt|;
block|}
DECL|method|testConcatInfiniteStream_double ()
specifier|public
name|void
name|testConcatInfiniteStream_double
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcatInfiniteStream_double
argument_list|()
expr_stmt|;
block|}
DECL|method|testConcatInfiniteStream_int ()
specifier|public
name|void
name|testConcatInfiniteStream_int
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcatInfiniteStream_int
argument_list|()
expr_stmt|;
block|}
DECL|method|testConcatInfiniteStream_long ()
specifier|public
name|void
name|testConcatInfiniteStream_long
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcatInfiniteStream_long
argument_list|()
expr_stmt|;
block|}
DECL|method|testConcat_doubleStream ()
specifier|public
name|void
name|testConcat_doubleStream
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcat_doubleStream
argument_list|()
expr_stmt|;
block|}
DECL|method|testConcat_intStream ()
specifier|public
name|void
name|testConcat_intStream
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcat_intStream
argument_list|()
expr_stmt|;
block|}
DECL|method|testConcat_longStream ()
specifier|public
name|void
name|testConcat_longStream
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcat_longStream
argument_list|()
expr_stmt|;
block|}
DECL|method|testConcat_refStream ()
specifier|public
name|void
name|testConcat_refStream
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcat_refStream
argument_list|()
expr_stmt|;
block|}
DECL|method|testConcat_refStream_closeIsPropagated ()
specifier|public
name|void
name|testConcat_refStream_closeIsPropagated
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcat_refStream_closeIsPropagated
argument_list|()
expr_stmt|;
block|}
DECL|method|testConcat_refStream_closeIsPropagated_Stream_concat ()
specifier|public
name|void
name|testConcat_refStream_closeIsPropagated_Stream_concat
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcat_refStream_closeIsPropagated_Stream_concat
argument_list|()
expr_stmt|;
block|}
DECL|method|testConcat_refStream_closeIsPropagated_Stream_flatMap ()
specifier|public
name|void
name|testConcat_refStream_closeIsPropagated_Stream_flatMap
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcat_refStream_closeIsPropagated_Stream_flatMap
argument_list|()
expr_stmt|;
block|}
DECL|method|testConcat_refStream_parallel ()
specifier|public
name|void
name|testConcat_refStream_parallel
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcat_refStream_parallel
argument_list|()
expr_stmt|;
block|}
DECL|method|testForEachPair ()
specifier|public
name|void
name|testForEachPair
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testForEachPair
argument_list|()
expr_stmt|;
block|}
DECL|method|testForEachPair_differingLengths1 ()
specifier|public
name|void
name|testForEachPair_differingLengths1
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testForEachPair_differingLengths1
argument_list|()
expr_stmt|;
block|}
DECL|method|testForEachPair_differingLengths2 ()
specifier|public
name|void
name|testForEachPair_differingLengths2
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testForEachPair_differingLengths2
argument_list|()
expr_stmt|;
block|}
DECL|method|testForEachPair_finiteWithInfinite ()
specifier|public
name|void
name|testForEachPair_finiteWithInfinite
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testForEachPair_finiteWithInfinite
argument_list|()
expr_stmt|;
block|}
DECL|method|testForEachPair_oneEmpty ()
specifier|public
name|void
name|testForEachPair_oneEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testForEachPair_oneEmpty
argument_list|()
expr_stmt|;
block|}
DECL|method|testForEachPair_parallel ()
specifier|public
name|void
name|testForEachPair_parallel
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testForEachPair_parallel
argument_list|()
expr_stmt|;
block|}
DECL|method|testMapWithIndex_arrayListSource ()
specifier|public
name|void
name|testMapWithIndex_arrayListSource
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testMapWithIndex_arrayListSource
argument_list|()
expr_stmt|;
block|}
DECL|method|testMapWithIndex_closeIsPropagated_sizedSource ()
specifier|public
name|void
name|testMapWithIndex_closeIsPropagated_sizedSource
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testMapWithIndex_closeIsPropagated_sizedSource
argument_list|()
expr_stmt|;
block|}
DECL|method|testMapWithIndex_closeIsPropagated_unsizedSource ()
specifier|public
name|void
name|testMapWithIndex_closeIsPropagated_unsizedSource
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testMapWithIndex_closeIsPropagated_unsizedSource
argument_list|()
expr_stmt|;
block|}
DECL|method|testMapWithIndex_doubleStream_closeIsPropagated_sized ()
specifier|public
name|void
name|testMapWithIndex_doubleStream_closeIsPropagated_sized
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testMapWithIndex_doubleStream_closeIsPropagated_sized
argument_list|()
expr_stmt|;
block|}
DECL|method|testMapWithIndex_doubleStream_closeIsPropagated_unsized ()
specifier|public
name|void
name|testMapWithIndex_doubleStream_closeIsPropagated_unsized
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testMapWithIndex_doubleStream_closeIsPropagated_unsized
argument_list|()
expr_stmt|;
block|}
DECL|method|testMapWithIndex_intStream ()
specifier|public
name|void
name|testMapWithIndex_intStream
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testMapWithIndex_intStream
argument_list|()
expr_stmt|;
block|}
DECL|method|testMapWithIndex_intStream_closeIsPropagated_sized ()
specifier|public
name|void
name|testMapWithIndex_intStream_closeIsPropagated_sized
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testMapWithIndex_intStream_closeIsPropagated_sized
argument_list|()
expr_stmt|;
block|}
DECL|method|testMapWithIndex_intStream_closeIsPropagated_unsized ()
specifier|public
name|void
name|testMapWithIndex_intStream_closeIsPropagated_unsized
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testMapWithIndex_intStream_closeIsPropagated_unsized
argument_list|()
expr_stmt|;
block|}
DECL|method|testMapWithIndex_linkedHashSetSource ()
specifier|public
name|void
name|testMapWithIndex_linkedHashSetSource
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testMapWithIndex_linkedHashSetSource
argument_list|()
expr_stmt|;
block|}
DECL|method|testMapWithIndex_longStream ()
specifier|public
name|void
name|testMapWithIndex_longStream
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testMapWithIndex_longStream
argument_list|()
expr_stmt|;
block|}
DECL|method|testMapWithIndex_longStream_closeIsPropagated_sized ()
specifier|public
name|void
name|testMapWithIndex_longStream_closeIsPropagated_sized
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testMapWithIndex_longStream_closeIsPropagated_sized
argument_list|()
expr_stmt|;
block|}
DECL|method|testMapWithIndex_longStream_closeIsPropagated_unsized ()
specifier|public
name|void
name|testMapWithIndex_longStream_closeIsPropagated_unsized
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testMapWithIndex_longStream_closeIsPropagated_unsized
argument_list|()
expr_stmt|;
block|}
DECL|method|testMapWithIndex_unsizedSource ()
specifier|public
name|void
name|testMapWithIndex_unsizedSource
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testMapWithIndex_unsizedSource
argument_list|()
expr_stmt|;
block|}
DECL|method|testStream_collection ()
specifier|public
name|void
name|testStream_collection
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testStream_collection
argument_list|()
expr_stmt|;
block|}
DECL|method|testStream_googleOptional ()
specifier|public
name|void
name|testStream_googleOptional
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testStream_googleOptional
argument_list|()
expr_stmt|;
block|}
DECL|method|testStream_iterator ()
specifier|public
name|void
name|testStream_iterator
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testStream_iterator
argument_list|()
expr_stmt|;
block|}
DECL|method|testStream_javaOptional ()
specifier|public
name|void
name|testStream_javaOptional
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testStream_javaOptional
argument_list|()
expr_stmt|;
block|}
DECL|method|testStream_nonCollection ()
specifier|public
name|void
name|testStream_nonCollection
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testStream_nonCollection
argument_list|()
expr_stmt|;
block|}
DECL|method|testStream_optionalDouble ()
specifier|public
name|void
name|testStream_optionalDouble
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testStream_optionalDouble
argument_list|()
expr_stmt|;
block|}
DECL|method|testStream_optionalInt ()
specifier|public
name|void
name|testStream_optionalInt
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testStream_optionalInt
argument_list|()
expr_stmt|;
block|}
DECL|method|testStream_optionalLong ()
specifier|public
name|void
name|testStream_optionalLong
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testStream_optionalLong
argument_list|()
expr_stmt|;
block|}
DECL|method|testZip ()
specifier|public
name|void
name|testZip
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testZip
argument_list|()
expr_stmt|;
block|}
DECL|method|testZipDifferingLengths ()
specifier|public
name|void
name|testZipDifferingLengths
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testZipDifferingLengths
argument_list|()
expr_stmt|;
block|}
DECL|method|testZipFiniteWithInfinite ()
specifier|public
name|void
name|testZipFiniteWithInfinite
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testZipFiniteWithInfinite
argument_list|()
expr_stmt|;
block|}
DECL|method|testZipInfiniteWithInfinite ()
specifier|public
name|void
name|testZipInfiniteWithInfinite
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testZipInfiniteWithInfinite
argument_list|()
expr_stmt|;
block|}
DECL|method|testZip_closeIsPropagated ()
specifier|public
name|void
name|testZip_closeIsPropagated
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|StreamsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testZip_closeIsPropagated
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

