begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2008 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.collect
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
package|;
end_package

begin_class
DECL|class|SetsTest_gwt
specifier|public
class|class
name|SetsTest_gwt
extends|extends
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|junit
operator|.
name|client
operator|.
name|GWTTestCase
block|{
DECL|method|getModuleName ()
annotation|@
name|Override
specifier|public
name|String
name|getModuleName
parameter_list|()
block|{
return|return
literal|"com.google.common.collect.testModule"
return|;
block|}
DECL|method|testCartesianProductTooBig ()
specifier|public
name|void
name|testCartesianProductTooBig
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCartesianProductTooBig
argument_list|()
expr_stmt|;
block|}
DECL|method|testCartesianProduct_2x2x2 ()
specifier|public
name|void
name|testCartesianProduct_2x2x2
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCartesianProduct_2x2x2
argument_list|()
expr_stmt|;
block|}
DECL|method|testCartesianProduct_binary0x0 ()
specifier|public
name|void
name|testCartesianProduct_binary0x0
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCartesianProduct_binary0x0
argument_list|()
expr_stmt|;
block|}
DECL|method|testCartesianProduct_binary0x1 ()
specifier|public
name|void
name|testCartesianProduct_binary0x1
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCartesianProduct_binary0x1
argument_list|()
expr_stmt|;
block|}
DECL|method|testCartesianProduct_binary1x0 ()
specifier|public
name|void
name|testCartesianProduct_binary1x0
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCartesianProduct_binary1x0
argument_list|()
expr_stmt|;
block|}
DECL|method|testCartesianProduct_binary1x1 ()
specifier|public
name|void
name|testCartesianProduct_binary1x1
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCartesianProduct_binary1x1
argument_list|()
expr_stmt|;
block|}
DECL|method|testCartesianProduct_binary1x2 ()
specifier|public
name|void
name|testCartesianProduct_binary1x2
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCartesianProduct_binary1x2
argument_list|()
expr_stmt|;
block|}
DECL|method|testCartesianProduct_binary2x2 ()
specifier|public
name|void
name|testCartesianProduct_binary2x2
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCartesianProduct_binary2x2
argument_list|()
expr_stmt|;
block|}
DECL|method|testCartesianProduct_contains ()
specifier|public
name|void
name|testCartesianProduct_contains
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCartesianProduct_contains
argument_list|()
expr_stmt|;
block|}
DECL|method|testCartesianProduct_hashCode ()
specifier|public
name|void
name|testCartesianProduct_hashCode
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCartesianProduct_hashCode
argument_list|()
expr_stmt|;
block|}
DECL|method|testCartesianProduct_unary ()
specifier|public
name|void
name|testCartesianProduct_unary
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCartesianProduct_unary
argument_list|()
expr_stmt|;
block|}
DECL|method|testCartesianProduct_unrelatedTypes ()
specifier|public
name|void
name|testCartesianProduct_unrelatedTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCartesianProduct_unrelatedTypes
argument_list|()
expr_stmt|;
block|}
DECL|method|testCartesianProduct_zeroary ()
specifier|public
name|void
name|testCartesianProduct_zeroary
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCartesianProduct_zeroary
argument_list|()
expr_stmt|;
block|}
DECL|method|testComplementOfEmptyEnumSetWithoutType ()
specifier|public
name|void
name|testComplementOfEmptyEnumSetWithoutType
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testComplementOfEmptyEnumSetWithoutType
argument_list|()
expr_stmt|;
block|}
DECL|method|testComplementOfEmptySet ()
specifier|public
name|void
name|testComplementOfEmptySet
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testComplementOfEmptySet
argument_list|()
expr_stmt|;
block|}
DECL|method|testComplementOfEmptySetWithoutTypeDoesntWork ()
specifier|public
name|void
name|testComplementOfEmptySetWithoutTypeDoesntWork
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testComplementOfEmptySetWithoutTypeDoesntWork
argument_list|()
expr_stmt|;
block|}
DECL|method|testComplementOfEnumSet ()
specifier|public
name|void
name|testComplementOfEnumSet
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testComplementOfEnumSet
argument_list|()
expr_stmt|;
block|}
DECL|method|testComplementOfEnumSetWithType ()
specifier|public
name|void
name|testComplementOfEnumSetWithType
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testComplementOfEnumSetWithType
argument_list|()
expr_stmt|;
block|}
DECL|method|testComplementOfFullSet ()
specifier|public
name|void
name|testComplementOfFullSet
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testComplementOfFullSet
argument_list|()
expr_stmt|;
block|}
DECL|method|testComplementOfRegularSet ()
specifier|public
name|void
name|testComplementOfRegularSet
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testComplementOfRegularSet
argument_list|()
expr_stmt|;
block|}
DECL|method|testComplementOfRegularSetWithType ()
specifier|public
name|void
name|testComplementOfRegularSetWithType
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testComplementOfRegularSetWithType
argument_list|()
expr_stmt|;
block|}
DECL|method|testImmutableEnumSet ()
specifier|public
name|void
name|testImmutableEnumSet
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testImmutableEnumSet
argument_list|()
expr_stmt|;
block|}
DECL|method|testImmutableEnumSet_fromIterable ()
specifier|public
name|void
name|testImmutableEnumSet_fromIterable
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testImmutableEnumSet_fromIterable
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewConcurrentHashSetEmpty ()
specifier|public
name|void
name|testNewConcurrentHashSetEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewConcurrentHashSetEmpty
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewConcurrentHashSetFromCollection ()
specifier|public
name|void
name|testNewConcurrentHashSetFromCollection
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewConcurrentHashSetFromCollection
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewEnumSet_collection ()
specifier|public
name|void
name|testNewEnumSet_collection
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewEnumSet_collection
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewEnumSet_empty ()
specifier|public
name|void
name|testNewEnumSet_empty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewEnumSet_empty
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewEnumSet_enumSet ()
specifier|public
name|void
name|testNewEnumSet_enumSet
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewEnumSet_enumSet
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewEnumSet_iterable ()
specifier|public
name|void
name|testNewEnumSet_iterable
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewEnumSet_iterable
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewHashSetEmpty ()
specifier|public
name|void
name|testNewHashSetEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewHashSetEmpty
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewHashSetFromCollection ()
specifier|public
name|void
name|testNewHashSetFromCollection
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewHashSetFromCollection
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewHashSetFromIterable ()
specifier|public
name|void
name|testNewHashSetFromIterable
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewHashSetFromIterable
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewHashSetFromIterator ()
specifier|public
name|void
name|testNewHashSetFromIterator
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewHashSetFromIterator
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewHashSetVarArgs ()
specifier|public
name|void
name|testNewHashSetVarArgs
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewHashSetVarArgs
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewHashSetWithExpectedSizeLarge ()
specifier|public
name|void
name|testNewHashSetWithExpectedSizeLarge
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewHashSetWithExpectedSizeLarge
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewHashSetWithExpectedSizeSmall ()
specifier|public
name|void
name|testNewHashSetWithExpectedSizeSmall
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewHashSetWithExpectedSizeSmall
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewIdentityHashSet ()
specifier|public
name|void
name|testNewIdentityHashSet
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewIdentityHashSet
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewLinkedHashSetEmpty ()
specifier|public
name|void
name|testNewLinkedHashSetEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewLinkedHashSetEmpty
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewLinkedHashSetFromCollection ()
specifier|public
name|void
name|testNewLinkedHashSetFromCollection
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewLinkedHashSetFromCollection
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewLinkedHashSetFromIterable ()
specifier|public
name|void
name|testNewLinkedHashSetFromIterable
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewLinkedHashSetFromIterable
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewLinkedHashSetWithExpectedSizeLarge ()
specifier|public
name|void
name|testNewLinkedHashSetWithExpectedSizeLarge
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewLinkedHashSetWithExpectedSizeLarge
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewLinkedHashSetWithExpectedSizeSmall ()
specifier|public
name|void
name|testNewLinkedHashSetWithExpectedSizeSmall
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewLinkedHashSetWithExpectedSizeSmall
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewSetFromMap ()
specifier|public
name|void
name|testNewSetFromMap
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewSetFromMap
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewSetFromMapIllegal ()
specifier|public
name|void
name|testNewSetFromMapIllegal
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewSetFromMapIllegal
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewTreeSetEmpty ()
specifier|public
name|void
name|testNewTreeSetEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewTreeSetEmpty
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewTreeSetEmptyDerived ()
specifier|public
name|void
name|testNewTreeSetEmptyDerived
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewTreeSetEmptyDerived
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewTreeSetEmptyNonGeneric ()
specifier|public
name|void
name|testNewTreeSetEmptyNonGeneric
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewTreeSetEmptyNonGeneric
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewTreeSetEmptyWithComparator ()
specifier|public
name|void
name|testNewTreeSetEmptyWithComparator
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewTreeSetEmptyWithComparator
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewTreeSetFromCollection ()
specifier|public
name|void
name|testNewTreeSetFromCollection
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewTreeSetFromCollection
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewTreeSetFromIterable ()
specifier|public
name|void
name|testNewTreeSetFromIterable
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewTreeSetFromIterable
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewTreeSetFromIterableDerived ()
specifier|public
name|void
name|testNewTreeSetFromIterableDerived
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewTreeSetFromIterableDerived
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewTreeSetFromIterableNonGeneric ()
specifier|public
name|void
name|testNewTreeSetFromIterableNonGeneric
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewTreeSetFromIterableNonGeneric
argument_list|()
expr_stmt|;
block|}
DECL|method|testPowerSetContents ()
specifier|public
name|void
name|testPowerSetContents
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPowerSetContents
argument_list|()
expr_stmt|;
block|}
DECL|method|testPowerSetCreationErrors ()
specifier|public
name|void
name|testPowerSetCreationErrors
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPowerSetCreationErrors
argument_list|()
expr_stmt|;
block|}
DECL|method|testPowerSetEmpty ()
specifier|public
name|void
name|testPowerSetEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPowerSetEmpty
argument_list|()
expr_stmt|;
block|}
DECL|method|testPowerSetEqualsAndHashCode_verifyAgainstHashSet ()
specifier|public
name|void
name|testPowerSetEqualsAndHashCode_verifyAgainstHashSet
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPowerSetEqualsAndHashCode_verifyAgainstHashSet
argument_list|()
expr_stmt|;
block|}
DECL|method|testPowerSetHashCode_inputHashCodeTimesTooFarValueIsZero ()
specifier|public
name|void
name|testPowerSetHashCode_inputHashCodeTimesTooFarValueIsZero
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPowerSetHashCode_inputHashCodeTimesTooFarValueIsZero
argument_list|()
expr_stmt|;
block|}
DECL|method|testPowerSetIteration_iteratorTester_fast ()
specifier|public
name|void
name|testPowerSetIteration_iteratorTester_fast
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPowerSetIteration_iteratorTester_fast
argument_list|()
expr_stmt|;
block|}
DECL|method|testPowerSetIteration_manual ()
specifier|public
name|void
name|testPowerSetIteration_manual
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPowerSetIteration_manual
argument_list|()
expr_stmt|;
block|}
DECL|method|testPowerSetShowOff ()
specifier|public
name|void
name|testPowerSetShowOff
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPowerSetShowOff
argument_list|()
expr_stmt|;
block|}
DECL|method|testPowerSetSize ()
specifier|public
name|void
name|testPowerSetSize
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPowerSetSize
argument_list|()
expr_stmt|;
block|}
DECL|method|testToImmutableEnumSet ()
specifier|public
name|void
name|testToImmutableEnumSet
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testToImmutableEnumSet
argument_list|()
expr_stmt|;
block|}
DECL|method|testToImmutableEnumSetEmpty ()
specifier|public
name|void
name|testToImmutableEnumSetEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|SetsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testToImmutableEnumSetEmpty
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

