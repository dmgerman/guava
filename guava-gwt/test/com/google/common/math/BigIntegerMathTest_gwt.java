begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2008 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.math
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
package|;
end_package

begin_class
DECL|class|BigIntegerMathTest_gwt
specifier|public
class|class
name|BigIntegerMathTest_gwt
extends|extends
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|junit
operator|.
name|client
operator|.
name|GWTTestCase
block|{
DECL|method|getModuleName ()
annotation|@
name|Override
specifier|public
name|String
name|getModuleName
parameter_list|()
block|{
return|return
literal|"com.google.common.math.testModule"
return|;
block|}
DECL|method|testBinomialOutside ()
specifier|public
name|void
name|testBinomialOutside
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBinomialOutside
argument_list|()
expr_stmt|;
block|}
DECL|method|testBinomialSmall ()
specifier|public
name|void
name|testBinomialSmall
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBinomialSmall
argument_list|()
expr_stmt|;
block|}
DECL|method|testFactorial ()
specifier|public
name|void
name|testFactorial
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testFactorial
argument_list|()
expr_stmt|;
block|}
DECL|method|testFactorial0 ()
specifier|public
name|void
name|testFactorial0
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testFactorial0
argument_list|()
expr_stmt|;
block|}
DECL|method|testFactorialNegative ()
specifier|public
name|void
name|testFactorialNegative
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testFactorialNegative
argument_list|()
expr_stmt|;
block|}
DECL|method|testIsPowerOfTwo ()
specifier|public
name|void
name|testIsPowerOfTwo
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testIsPowerOfTwo
argument_list|()
expr_stmt|;
block|}
DECL|method|testLog2Ceiling ()
specifier|public
name|void
name|testLog2Ceiling
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testLog2Ceiling
argument_list|()
expr_stmt|;
block|}
DECL|method|testLog2Exact ()
specifier|public
name|void
name|testLog2Exact
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testLog2Exact
argument_list|()
expr_stmt|;
block|}
DECL|method|testLog2Floor ()
specifier|public
name|void
name|testLog2Floor
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testLog2Floor
argument_list|()
expr_stmt|;
block|}
DECL|method|testLog2HalfDown ()
specifier|public
name|void
name|testLog2HalfDown
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testLog2HalfDown
argument_list|()
expr_stmt|;
block|}
DECL|method|testLog2HalfEven ()
specifier|public
name|void
name|testLog2HalfEven
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testLog2HalfEven
argument_list|()
expr_stmt|;
block|}
DECL|method|testLog2HalfUp ()
specifier|public
name|void
name|testLog2HalfUp
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testLog2HalfUp
argument_list|()
expr_stmt|;
block|}
DECL|method|testLog2NegativeAlwaysThrows ()
specifier|public
name|void
name|testLog2NegativeAlwaysThrows
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testLog2NegativeAlwaysThrows
argument_list|()
expr_stmt|;
block|}
DECL|method|testLog2ZeroAlwaysThrows ()
specifier|public
name|void
name|testLog2ZeroAlwaysThrows
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|math
operator|.
name|BigIntegerMathTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testLog2ZeroAlwaysThrows
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

