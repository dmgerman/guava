begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2008 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.testing
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
package|;
end_package

begin_class
DECL|class|FakeTickerTest_gwt
specifier|public
class|class
name|FakeTickerTest_gwt
extends|extends
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|junit
operator|.
name|client
operator|.
name|GWTTestCase
block|{
DECL|method|getModuleName ()
annotation|@
name|Override
specifier|public
name|String
name|getModuleName
parameter_list|()
block|{
return|return
literal|"com.google.common.testing.testModule"
return|;
block|}
DECL|method|testAdvance ()
specifier|public
name|void
name|testAdvance
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|FakeTickerTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|FakeTickerTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAdvance
argument_list|()
expr_stmt|;
block|}
DECL|method|testAutoIncrementStep_millis ()
specifier|public
name|void
name|testAutoIncrementStep_millis
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|FakeTickerTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|FakeTickerTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAutoIncrementStep_millis
argument_list|()
expr_stmt|;
block|}
DECL|method|testAutoIncrementStep_nanos ()
specifier|public
name|void
name|testAutoIncrementStep_nanos
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|FakeTickerTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|FakeTickerTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAutoIncrementStep_nanos
argument_list|()
expr_stmt|;
block|}
DECL|method|testAutoIncrementStep_resetToZero ()
specifier|public
name|void
name|testAutoIncrementStep_resetToZero
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|FakeTickerTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|FakeTickerTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAutoIncrementStep_resetToZero
argument_list|()
expr_stmt|;
block|}
DECL|method|testAutoIncrementStep_returnsSameInstance ()
specifier|public
name|void
name|testAutoIncrementStep_returnsSameInstance
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|FakeTickerTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|FakeTickerTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAutoIncrementStep_returnsSameInstance
argument_list|()
expr_stmt|;
block|}
DECL|method|testAutoIncrementStep_seconds ()
specifier|public
name|void
name|testAutoIncrementStep_seconds
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|FakeTickerTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|FakeTickerTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAutoIncrementStep_seconds
argument_list|()
expr_stmt|;
block|}
DECL|method|testAutoIncrement_negative ()
specifier|public
name|void
name|testAutoIncrement_negative
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|FakeTickerTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|FakeTickerTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAutoIncrement_negative
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

