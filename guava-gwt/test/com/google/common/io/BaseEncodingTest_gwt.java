begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2008 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.io
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
package|;
end_package

begin_class
DECL|class|BaseEncodingTest_gwt
specifier|public
class|class
name|BaseEncodingTest_gwt
extends|extends
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|junit
operator|.
name|client
operator|.
name|GWTTestCase
block|{
DECL|method|getModuleName ()
annotation|@
name|Override
specifier|public
name|String
name|getModuleName
parameter_list|()
block|{
return|return
literal|"com.google.common.io.testModule"
return|;
block|}
DECL|method|testAtMostOneSeparator ()
specifier|public
name|void
name|testAtMostOneSeparator
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAtMostOneSeparator
argument_list|()
expr_stmt|;
block|}
DECL|method|testBase16 ()
specifier|public
name|void
name|testBase16
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBase16
argument_list|()
expr_stmt|;
block|}
DECL|method|testBase16InvalidDecodings ()
specifier|public
name|void
name|testBase16InvalidDecodings
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBase16InvalidDecodings
argument_list|()
expr_stmt|;
block|}
DECL|method|testBase16UpperCaseIsNoOp ()
specifier|public
name|void
name|testBase16UpperCaseIsNoOp
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBase16UpperCaseIsNoOp
argument_list|()
expr_stmt|;
block|}
DECL|method|testBase32 ()
specifier|public
name|void
name|testBase32
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBase32
argument_list|()
expr_stmt|;
block|}
DECL|method|testBase32AlternatePadding ()
specifier|public
name|void
name|testBase32AlternatePadding
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBase32AlternatePadding
argument_list|()
expr_stmt|;
block|}
DECL|method|testBase32Hex ()
specifier|public
name|void
name|testBase32Hex
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBase32Hex
argument_list|()
expr_stmt|;
block|}
DECL|method|testBase32HexInvalidDecodings ()
specifier|public
name|void
name|testBase32HexInvalidDecodings
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBase32HexInvalidDecodings
argument_list|()
expr_stmt|;
block|}
DECL|method|testBase32HexLenientPadding ()
specifier|public
name|void
name|testBase32HexLenientPadding
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBase32HexLenientPadding
argument_list|()
expr_stmt|;
block|}
DECL|method|testBase32HexUpperCaseIsNoOp ()
specifier|public
name|void
name|testBase32HexUpperCaseIsNoOp
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBase32HexUpperCaseIsNoOp
argument_list|()
expr_stmt|;
block|}
DECL|method|testBase32InvalidDecodings ()
specifier|public
name|void
name|testBase32InvalidDecodings
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBase32InvalidDecodings
argument_list|()
expr_stmt|;
block|}
DECL|method|testBase32LenientPadding ()
specifier|public
name|void
name|testBase32LenientPadding
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBase32LenientPadding
argument_list|()
expr_stmt|;
block|}
DECL|method|testBase32UpperCaseIsNoOp ()
specifier|public
name|void
name|testBase32UpperCaseIsNoOp
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBase32UpperCaseIsNoOp
argument_list|()
expr_stmt|;
block|}
DECL|method|testBase64 ()
specifier|public
name|void
name|testBase64
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBase64
argument_list|()
expr_stmt|;
block|}
DECL|method|testBase64AlternatePadding ()
specifier|public
name|void
name|testBase64AlternatePadding
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBase64AlternatePadding
argument_list|()
expr_stmt|;
block|}
DECL|method|testBase64CannotLowerCase ()
specifier|public
name|void
name|testBase64CannotLowerCase
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBase64CannotLowerCase
argument_list|()
expr_stmt|;
block|}
DECL|method|testBase64CannotUpperCase ()
specifier|public
name|void
name|testBase64CannotUpperCase
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBase64CannotUpperCase
argument_list|()
expr_stmt|;
block|}
DECL|method|testBase64InvalidDecodings ()
specifier|public
name|void
name|testBase64InvalidDecodings
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBase64InvalidDecodings
argument_list|()
expr_stmt|;
block|}
DECL|method|testBase64LenientPadding ()
specifier|public
name|void
name|testBase64LenientPadding
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBase64LenientPadding
argument_list|()
expr_stmt|;
block|}
DECL|method|testBase64OmitPadding ()
specifier|public
name|void
name|testBase64OmitPadding
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBase64OmitPadding
argument_list|()
expr_stmt|;
block|}
DECL|method|testSeparatorSameAsPadChar ()
specifier|public
name|void
name|testSeparatorSameAsPadChar
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testSeparatorSameAsPadChar
argument_list|()
expr_stmt|;
block|}
DECL|method|testSeparatorsExplicitly ()
specifier|public
name|void
name|testSeparatorsExplicitly
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testSeparatorsExplicitly
argument_list|()
expr_stmt|;
block|}
DECL|method|testToString ()
specifier|public
name|void
name|testToString
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|BaseEncodingTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testToString
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

