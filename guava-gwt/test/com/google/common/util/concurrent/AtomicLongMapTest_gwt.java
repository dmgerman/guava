begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2008 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.util.concurrent
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
package|;
end_package

begin_class
DECL|class|AtomicLongMapTest_gwt
specifier|public
class|class
name|AtomicLongMapTest_gwt
extends|extends
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|junit
operator|.
name|client
operator|.
name|GWTTestCase
block|{
DECL|method|getModuleName ()
annotation|@
name|Override
specifier|public
name|String
name|getModuleName
parameter_list|()
block|{
return|return
literal|"com.google.common.util.concurrent.testModule"
return|;
block|}
DECL|method|testAddAndGet ()
specifier|public
name|void
name|testAddAndGet
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAddAndGet
argument_list|()
expr_stmt|;
block|}
DECL|method|testAddAndGet_zero ()
specifier|public
name|void
name|testAddAndGet_zero
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testAddAndGet_zero
argument_list|()
expr_stmt|;
block|}
DECL|method|testClear ()
specifier|public
name|void
name|testClear
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testClear
argument_list|()
expr_stmt|;
block|}
DECL|method|testCreate_map ()
specifier|public
name|void
name|testCreate_map
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCreate_map
argument_list|()
expr_stmt|;
block|}
DECL|method|testDecrementAndGet ()
specifier|public
name|void
name|testDecrementAndGet
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testDecrementAndGet
argument_list|()
expr_stmt|;
block|}
DECL|method|testDecrementAndGet_zero ()
specifier|public
name|void
name|testDecrementAndGet_zero
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testDecrementAndGet_zero
argument_list|()
expr_stmt|;
block|}
DECL|method|testEmpty ()
specifier|public
name|void
name|testEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testEmpty
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetAndAdd ()
specifier|public
name|void
name|testGetAndAdd
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetAndAdd
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetAndAdd_zero ()
specifier|public
name|void
name|testGetAndAdd_zero
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetAndAdd_zero
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetAndDecrement ()
specifier|public
name|void
name|testGetAndDecrement
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetAndDecrement
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetAndDecrement_zero ()
specifier|public
name|void
name|testGetAndDecrement_zero
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetAndDecrement_zero
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetAndIncrement ()
specifier|public
name|void
name|testGetAndIncrement
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetAndIncrement
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetAndIncrement_zero ()
specifier|public
name|void
name|testGetAndIncrement_zero
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGetAndIncrement_zero
argument_list|()
expr_stmt|;
block|}
DECL|method|testIncrementAndGet ()
specifier|public
name|void
name|testIncrementAndGet
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testIncrementAndGet
argument_list|()
expr_stmt|;
block|}
DECL|method|testIncrementAndGet_zero ()
specifier|public
name|void
name|testIncrementAndGet_zero
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testIncrementAndGet_zero
argument_list|()
expr_stmt|;
block|}
DECL|method|testPut ()
specifier|public
name|void
name|testPut
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPut
argument_list|()
expr_stmt|;
block|}
DECL|method|testPutAll ()
specifier|public
name|void
name|testPutAll
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPutAll
argument_list|()
expr_stmt|;
block|}
DECL|method|testPutIfAbsent ()
specifier|public
name|void
name|testPutIfAbsent
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPutIfAbsent
argument_list|()
expr_stmt|;
block|}
DECL|method|testPutIfAbsent_zero ()
specifier|public
name|void
name|testPutIfAbsent_zero
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPutIfAbsent_zero
argument_list|()
expr_stmt|;
block|}
DECL|method|testPut_zero ()
specifier|public
name|void
name|testPut_zero
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testPut_zero
argument_list|()
expr_stmt|;
block|}
DECL|method|testRemove ()
specifier|public
name|void
name|testRemove
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testRemove
argument_list|()
expr_stmt|;
block|}
DECL|method|testRemoveIfZero ()
specifier|public
name|void
name|testRemoveIfZero
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testRemoveIfZero
argument_list|()
expr_stmt|;
block|}
DECL|method|testRemoveValue ()
specifier|public
name|void
name|testRemoveValue
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testRemoveValue
argument_list|()
expr_stmt|;
block|}
DECL|method|testRemoveValue_zero ()
specifier|public
name|void
name|testRemoveValue_zero
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testRemoveValue_zero
argument_list|()
expr_stmt|;
block|}
DECL|method|testRemoveZeros ()
specifier|public
name|void
name|testRemoveZeros
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testRemoveZeros
argument_list|()
expr_stmt|;
block|}
DECL|method|testRemove_zero ()
specifier|public
name|void
name|testRemove_zero
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testRemove_zero
argument_list|()
expr_stmt|;
block|}
DECL|method|testReplace ()
specifier|public
name|void
name|testReplace
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testReplace
argument_list|()
expr_stmt|;
block|}
DECL|method|testReplace_zero ()
specifier|public
name|void
name|testReplace_zero
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testReplace_zero
argument_list|()
expr_stmt|;
block|}
DECL|method|testSum ()
specifier|public
name|void
name|testSum
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|AtomicLongMapTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testSum
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

