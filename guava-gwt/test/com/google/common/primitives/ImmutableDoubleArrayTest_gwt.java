begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2008 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.primitives
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
package|;
end_package

begin_class
DECL|class|ImmutableDoubleArrayTest_gwt
specifier|public
class|class
name|ImmutableDoubleArrayTest_gwt
extends|extends
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|junit
operator|.
name|client
operator|.
name|GWTTestCase
block|{
DECL|method|getModuleName ()
annotation|@
name|Override
specifier|public
name|String
name|getModuleName
parameter_list|()
block|{
return|return
literal|"com.google.common.primitives.testModule"
return|;
block|}
DECL|method|testBuilder_bruteForce ()
specifier|public
name|void
name|testBuilder_bruteForce
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBuilder_bruteForce
argument_list|()
expr_stmt|;
block|}
DECL|method|testBuilder_presize_negative ()
specifier|public
name|void
name|testBuilder_presize_negative
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBuilder_presize_negative
argument_list|()
expr_stmt|;
block|}
DECL|method|testBuilder_presize_zero ()
specifier|public
name|void
name|testBuilder_presize_zero
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testBuilder_presize_zero
argument_list|()
expr_stmt|;
block|}
DECL|method|testContains ()
specifier|public
name|void
name|testContains
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testContains
argument_list|()
expr_stmt|;
block|}
DECL|method|testCopyOf_array_empty ()
specifier|public
name|void
name|testCopyOf_array_empty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCopyOf_array_empty
argument_list|()
expr_stmt|;
block|}
DECL|method|testCopyOf_array_nonempty ()
specifier|public
name|void
name|testCopyOf_array_nonempty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCopyOf_array_nonempty
argument_list|()
expr_stmt|;
block|}
DECL|method|testCopyOf_collection_empty ()
specifier|public
name|void
name|testCopyOf_collection_empty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCopyOf_collection_empty
argument_list|()
expr_stmt|;
block|}
DECL|method|testCopyOf_collection_nonempty ()
specifier|public
name|void
name|testCopyOf_collection_nonempty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCopyOf_collection_nonempty
argument_list|()
expr_stmt|;
block|}
DECL|method|testCopyOf_iterable_collection_empty ()
specifier|public
name|void
name|testCopyOf_iterable_collection_empty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCopyOf_iterable_collection_empty
argument_list|()
expr_stmt|;
block|}
DECL|method|testCopyOf_iterable_collection_nonempty ()
specifier|public
name|void
name|testCopyOf_iterable_collection_nonempty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCopyOf_iterable_collection_nonempty
argument_list|()
expr_stmt|;
block|}
DECL|method|testCopyOf_iterable_notCollection_empty ()
specifier|public
name|void
name|testCopyOf_iterable_notCollection_empty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCopyOf_iterable_notCollection_empty
argument_list|()
expr_stmt|;
block|}
DECL|method|testCopyOf_iterable_notCollection_nonempty ()
specifier|public
name|void
name|testCopyOf_iterable_notCollection_nonempty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCopyOf_iterable_notCollection_nonempty
argument_list|()
expr_stmt|;
block|}
DECL|method|testCopyOf_stream ()
specifier|public
name|void
name|testCopyOf_stream
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCopyOf_stream
argument_list|()
expr_stmt|;
block|}
DECL|method|testEquals ()
specifier|public
name|void
name|testEquals
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testEquals
argument_list|()
expr_stmt|;
block|}
DECL|method|testForEach ()
specifier|public
name|void
name|testForEach
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testForEach
argument_list|()
expr_stmt|;
block|}
DECL|method|testGet_bad ()
specifier|public
name|void
name|testGet_bad
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGet_bad
argument_list|()
expr_stmt|;
block|}
DECL|method|testGet_good ()
specifier|public
name|void
name|testGet_good
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testGet_good
argument_list|()
expr_stmt|;
block|}
DECL|method|testIndexOf ()
specifier|public
name|void
name|testIndexOf
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testIndexOf
argument_list|()
expr_stmt|;
block|}
DECL|method|testIndexOf_specialValues ()
specifier|public
name|void
name|testIndexOf_specialValues
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testIndexOf_specialValues
argument_list|()
expr_stmt|;
block|}
DECL|method|testIsEmpty ()
specifier|public
name|void
name|testIsEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testIsEmpty
argument_list|()
expr_stmt|;
block|}
DECL|method|testLastIndexOf ()
specifier|public
name|void
name|testLastIndexOf
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testLastIndexOf
argument_list|()
expr_stmt|;
block|}
DECL|method|testLength ()
specifier|public
name|void
name|testLength
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testLength
argument_list|()
expr_stmt|;
block|}
DECL|method|testOf0 ()
specifier|public
name|void
name|testOf0
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testOf0
argument_list|()
expr_stmt|;
block|}
DECL|method|testOf1 ()
specifier|public
name|void
name|testOf1
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testOf1
argument_list|()
expr_stmt|;
block|}
DECL|method|testOf2 ()
specifier|public
name|void
name|testOf2
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testOf2
argument_list|()
expr_stmt|;
block|}
DECL|method|testOf3 ()
specifier|public
name|void
name|testOf3
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testOf3
argument_list|()
expr_stmt|;
block|}
DECL|method|testOf4 ()
specifier|public
name|void
name|testOf4
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testOf4
argument_list|()
expr_stmt|;
block|}
DECL|method|testOf5 ()
specifier|public
name|void
name|testOf5
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testOf5
argument_list|()
expr_stmt|;
block|}
DECL|method|testOf6 ()
specifier|public
name|void
name|testOf6
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testOf6
argument_list|()
expr_stmt|;
block|}
DECL|method|testOf7 ()
specifier|public
name|void
name|testOf7
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testOf7
argument_list|()
expr_stmt|;
block|}
DECL|method|testStream ()
specifier|public
name|void
name|testStream
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testStream
argument_list|()
expr_stmt|;
block|}
DECL|method|testSubArray ()
specifier|public
name|void
name|testSubArray
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testSubArray
argument_list|()
expr_stmt|;
block|}
DECL|method|testTrimmed ()
specifier|public
name|void
name|testTrimmed
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|ImmutableDoubleArrayTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testTrimmed
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

