begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2008 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.cache
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
package|;
end_package

begin_class
DECL|class|CacheBuilderTest_gwt
specifier|public
class|class
name|CacheBuilderTest_gwt
extends|extends
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|junit
operator|.
name|client
operator|.
name|GWTTestCase
block|{
DECL|method|getModuleName ()
annotation|@
name|Override
specifier|public
name|String
name|getModuleName
parameter_list|()
block|{
return|return
literal|"com.google.common.cache.testModule"
return|;
block|}
DECL|method|testConcurrencyLevel_large ()
specifier|public
name|void
name|testConcurrencyLevel_large
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcurrencyLevel_large
argument_list|()
expr_stmt|;
block|}
DECL|method|testConcurrencyLevel_setTwice ()
specifier|public
name|void
name|testConcurrencyLevel_setTwice
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcurrencyLevel_setTwice
argument_list|()
expr_stmt|;
block|}
DECL|method|testConcurrencyLevel_zero ()
specifier|public
name|void
name|testConcurrencyLevel_zero
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testConcurrencyLevel_zero
argument_list|()
expr_stmt|;
block|}
DECL|method|testInitialCapacity_large ()
specifier|public
name|void
name|testInitialCapacity_large
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testInitialCapacity_large
argument_list|()
expr_stmt|;
block|}
DECL|method|testInitialCapacity_negative ()
specifier|public
name|void
name|testInitialCapacity_negative
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testInitialCapacity_negative
argument_list|()
expr_stmt|;
block|}
DECL|method|testInitialCapacity_setTwice ()
specifier|public
name|void
name|testInitialCapacity_setTwice
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testInitialCapacity_setTwice
argument_list|()
expr_stmt|;
block|}
DECL|method|testMaximumSize_negative ()
specifier|public
name|void
name|testMaximumSize_negative
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testMaximumSize_negative
argument_list|()
expr_stmt|;
block|}
DECL|method|testMaximumSize_setTwice ()
specifier|public
name|void
name|testMaximumSize_setTwice
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testMaximumSize_setTwice
argument_list|()
expr_stmt|;
block|}
DECL|method|testNewBuilder ()
specifier|public
name|void
name|testNewBuilder
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testNewBuilder
argument_list|()
expr_stmt|;
block|}
DECL|method|testRemovalListener_setTwice ()
specifier|public
name|void
name|testRemovalListener_setTwice
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testRemovalListener_setTwice
argument_list|()
expr_stmt|;
block|}
DECL|method|testTicker_setTwice ()
specifier|public
name|void
name|testTicker_setTwice
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testTicker_setTwice
argument_list|()
expr_stmt|;
block|}
DECL|method|testTimeToIdleAndToLive ()
specifier|public
name|void
name|testTimeToIdleAndToLive
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testTimeToIdleAndToLive
argument_list|()
expr_stmt|;
block|}
DECL|method|testTimeToIdle_negative ()
specifier|public
name|void
name|testTimeToIdle_negative
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testTimeToIdle_negative
argument_list|()
expr_stmt|;
block|}
DECL|method|testTimeToIdle_setTwice ()
specifier|public
name|void
name|testTimeToIdle_setTwice
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testTimeToIdle_setTwice
argument_list|()
expr_stmt|;
block|}
DECL|method|testTimeToIdle_small ()
specifier|public
name|void
name|testTimeToIdle_small
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testTimeToIdle_small
argument_list|()
expr_stmt|;
block|}
DECL|method|testTimeToLive_negative ()
specifier|public
name|void
name|testTimeToLive_negative
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testTimeToLive_negative
argument_list|()
expr_stmt|;
block|}
DECL|method|testTimeToLive_setTwice ()
specifier|public
name|void
name|testTimeToLive_setTwice
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testTimeToLive_setTwice
argument_list|()
expr_stmt|;
block|}
DECL|method|testTimeToLive_small ()
specifier|public
name|void
name|testTimeToLive_small
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilderTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testTimeToLive_small
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

