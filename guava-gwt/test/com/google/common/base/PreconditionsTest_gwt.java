begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2008 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.base
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
package|;
end_package

begin_class
DECL|class|PreconditionsTest_gwt
specifier|public
class|class
name|PreconditionsTest_gwt
extends|extends
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|junit
operator|.
name|client
operator|.
name|GWTTestCase
block|{
DECL|method|getModuleName ()
annotation|@
name|Override
specifier|public
name|String
name|getModuleName
parameter_list|()
block|{
return|return
literal|"com.google.common.base.testModule"
return|;
block|}
DECL|method|testCheckArgument_complexMessage_failure ()
specifier|public
name|void
name|testCheckArgument_complexMessage_failure
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckArgument_complexMessage_failure
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckArgument_complexMessage_success ()
specifier|public
name|void
name|testCheckArgument_complexMessage_success
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckArgument_complexMessage_success
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckArgument_notEnoughArgs_failure ()
specifier|public
name|void
name|testCheckArgument_notEnoughArgs_failure
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckArgument_notEnoughArgs_failure
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckArgument_nullArgs_failure ()
specifier|public
name|void
name|testCheckArgument_nullArgs_failure
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckArgument_nullArgs_failure
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckArgument_nullMessageWithArgs_failure ()
specifier|public
name|void
name|testCheckArgument_nullMessageWithArgs_failure
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckArgument_nullMessageWithArgs_failure
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckArgument_nullMessage_failure ()
specifier|public
name|void
name|testCheckArgument_nullMessage_failure
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckArgument_nullMessage_failure
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckArgument_simpleMessage_failure ()
specifier|public
name|void
name|testCheckArgument_simpleMessage_failure
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckArgument_simpleMessage_failure
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckArgument_simpleMessage_success ()
specifier|public
name|void
name|testCheckArgument_simpleMessage_success
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckArgument_simpleMessage_success
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckArgument_simple_failure ()
specifier|public
name|void
name|testCheckArgument_simple_failure
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckArgument_simple_failure
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckArgument_simple_success ()
specifier|public
name|void
name|testCheckArgument_simple_success
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckArgument_simple_success
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckArgument_singleNullArg_failure ()
specifier|public
name|void
name|testCheckArgument_singleNullArg_failure
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckArgument_singleNullArg_failure
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckArgument_singleNullArray_failure ()
specifier|public
name|void
name|testCheckArgument_singleNullArray_failure
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckArgument_singleNullArray_failure
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckArgument_tooManyArgs_failure ()
specifier|public
name|void
name|testCheckArgument_tooManyArgs_failure
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckArgument_tooManyArgs_failure
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckElementIndex_badSize ()
specifier|public
name|void
name|testCheckElementIndex_badSize
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckElementIndex_badSize
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckElementIndex_negative ()
specifier|public
name|void
name|testCheckElementIndex_negative
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckElementIndex_negative
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckElementIndex_ok ()
specifier|public
name|void
name|testCheckElementIndex_ok
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckElementIndex_ok
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckElementIndex_tooHigh ()
specifier|public
name|void
name|testCheckElementIndex_tooHigh
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckElementIndex_tooHigh
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckElementIndex_withDesc_negative ()
specifier|public
name|void
name|testCheckElementIndex_withDesc_negative
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckElementIndex_withDesc_negative
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckElementIndex_withDesc_tooHigh ()
specifier|public
name|void
name|testCheckElementIndex_withDesc_tooHigh
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckElementIndex_withDesc_tooHigh
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckNotNull_complexMessage_failure ()
specifier|public
name|void
name|testCheckNotNull_complexMessage_failure
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckNotNull_complexMessage_failure
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckNotNull_complexMessage_success ()
specifier|public
name|void
name|testCheckNotNull_complexMessage_success
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckNotNull_complexMessage_success
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckNotNull_simpleMessage_failure ()
specifier|public
name|void
name|testCheckNotNull_simpleMessage_failure
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckNotNull_simpleMessage_failure
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckNotNull_simpleMessage_success ()
specifier|public
name|void
name|testCheckNotNull_simpleMessage_success
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckNotNull_simpleMessage_success
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckNotNull_simple_failure ()
specifier|public
name|void
name|testCheckNotNull_simple_failure
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckNotNull_simple_failure
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckNotNull_simple_success ()
specifier|public
name|void
name|testCheckNotNull_simple_success
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckNotNull_simple_success
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckPositionIndex_badSize ()
specifier|public
name|void
name|testCheckPositionIndex_badSize
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckPositionIndex_badSize
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckPositionIndex_negative ()
specifier|public
name|void
name|testCheckPositionIndex_negative
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckPositionIndex_negative
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckPositionIndex_ok ()
specifier|public
name|void
name|testCheckPositionIndex_ok
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckPositionIndex_ok
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckPositionIndex_startNegative ()
specifier|public
name|void
name|testCheckPositionIndex_startNegative
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckPositionIndex_startNegative
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckPositionIndex_tooHigh ()
specifier|public
name|void
name|testCheckPositionIndex_tooHigh
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckPositionIndex_tooHigh
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckPositionIndex_withDesc_negative ()
specifier|public
name|void
name|testCheckPositionIndex_withDesc_negative
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckPositionIndex_withDesc_negative
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckPositionIndex_withDesc_tooHigh ()
specifier|public
name|void
name|testCheckPositionIndex_withDesc_tooHigh
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckPositionIndex_withDesc_tooHigh
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckPositionIndexes_badSize ()
specifier|public
name|void
name|testCheckPositionIndexes_badSize
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckPositionIndexes_badSize
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckPositionIndexes_endTooHigh ()
specifier|public
name|void
name|testCheckPositionIndexes_endTooHigh
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckPositionIndexes_endTooHigh
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckPositionIndexes_ok ()
specifier|public
name|void
name|testCheckPositionIndexes_ok
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckPositionIndexes_ok
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckPositionIndexes_reversed ()
specifier|public
name|void
name|testCheckPositionIndexes_reversed
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckPositionIndexes_reversed
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckState_complexMessage_failure ()
specifier|public
name|void
name|testCheckState_complexMessage_failure
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckState_complexMessage_failure
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckState_complexMessage_success ()
specifier|public
name|void
name|testCheckState_complexMessage_success
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckState_complexMessage_success
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckState_nullMessage_failure ()
specifier|public
name|void
name|testCheckState_nullMessage_failure
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckState_nullMessage_failure
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckState_simpleMessage_failure ()
specifier|public
name|void
name|testCheckState_simpleMessage_failure
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckState_simpleMessage_failure
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckState_simpleMessage_success ()
specifier|public
name|void
name|testCheckState_simpleMessage_success
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckState_simpleMessage_success
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckState_simple_failure ()
specifier|public
name|void
name|testCheckState_simple_failure
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckState_simple_failure
argument_list|()
expr_stmt|;
block|}
DECL|method|testCheckState_simple_success ()
specifier|public
name|void
name|testCheckState_simple_success
parameter_list|()
throws|throws
name|Exception
block|{
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
name|testCase
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|PreconditionsTest
argument_list|()
decl_stmt|;
name|testCase
operator|.
name|testCheckState_simple_success
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

