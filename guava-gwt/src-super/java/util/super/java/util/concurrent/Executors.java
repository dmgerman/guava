begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * This file is a modified version of  * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/src/main/java/util/concurrent/Executors.java?revision=1.90  * which contained the following notice:  *  * Written by Doug Lea with assistance from members of JCP JSR-166  * Expert Group and released to the public domain, as explained at  * http://creativecommons.org/publicdomain/zero/1.0/  */
end_comment

begin_package
DECL|package|java.util.concurrent
package|package
name|java
operator|.
name|util
operator|.
name|concurrent
package|;
end_package

begin_comment
comment|/** Emulation of executors. */
end_comment

begin_class
DECL|class|Executors
specifier|public
class|class
name|Executors
block|{
DECL|method|callable (Runnable task, T result)
specifier|public
specifier|static
parameter_list|<
name|T
parameter_list|>
name|Callable
argument_list|<
name|T
argument_list|>
name|callable
parameter_list|(
name|Runnable
name|task
parameter_list|,
name|T
name|result
parameter_list|)
block|{
if|if
condition|(
name|task
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
return|return
operator|new
name|RunnableAdapter
argument_list|<
name|T
argument_list|>
argument_list|(
name|task
argument_list|,
name|result
argument_list|)
return|;
block|}
DECL|method|callable (Runnable task)
specifier|public
specifier|static
name|Callable
argument_list|<
name|Object
argument_list|>
name|callable
parameter_list|(
name|Runnable
name|task
parameter_list|)
block|{
if|if
condition|(
name|task
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
return|return
operator|new
name|RunnableAdapter
argument_list|<
name|Object
argument_list|>
argument_list|(
name|task
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|class|RunnableAdapter
specifier|static
specifier|final
class|class
name|RunnableAdapter
parameter_list|<
name|T
parameter_list|>
implements|implements
name|Callable
argument_list|<
name|T
argument_list|>
block|{
DECL|field|task
specifier|final
name|Runnable
name|task
decl_stmt|;
DECL|field|result
specifier|final
name|T
name|result
decl_stmt|;
DECL|method|RunnableAdapter (Runnable task, T result)
name|RunnableAdapter
parameter_list|(
name|Runnable
name|task
parameter_list|,
name|T
name|result
parameter_list|)
block|{
name|this
operator|.
name|task
operator|=
name|task
expr_stmt|;
name|this
operator|.
name|result
operator|=
name|result
expr_stmt|;
block|}
DECL|method|call ()
specifier|public
name|T
name|call
parameter_list|()
block|{
name|task
operator|.
name|run
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
DECL|method|Executors ()
specifier|private
name|Executors
parameter_list|()
block|{}
block|}
end_class

end_unit

