begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2012 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.collect
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_comment
comment|/**  * GWT emulated version of {@link EmptyImmutableSortedMap}.  *  * @author Chris Povirk  */
end_comment

begin_class
DECL|class|EmptyImmutableSortedMap
specifier|final
class|class
name|EmptyImmutableSortedMap
parameter_list|<
name|K
parameter_list|,
name|V
parameter_list|>
extends|extends
name|ImmutableSortedMap
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
block|{
DECL|method|EmptyImmutableSortedMap (Comparator<? super K> comparator)
specifier|private
name|EmptyImmutableSortedMap
parameter_list|(
name|Comparator
argument_list|<
name|?
super|super
name|K
argument_list|>
name|comparator
parameter_list|)
block|{
name|super
argument_list|(
operator|new
name|TreeMap
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
argument_list|(
name|comparator
argument_list|)
argument_list|,
name|comparator
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|field|NATURAL_EMPTY_MAP
specifier|private
specifier|static
specifier|final
name|ImmutableSortedMap
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|NATURAL_EMPTY_MAP
init|=
operator|new
name|EmptyImmutableSortedMap
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
argument_list|(
name|NATURAL_ORDER
argument_list|)
decl_stmt|;
DECL|method|forComparator (Comparator<? super K> comparator)
specifier|static
parameter_list|<
name|K
parameter_list|,
name|V
parameter_list|>
name|ImmutableSortedMap
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
name|forComparator
parameter_list|(
name|Comparator
argument_list|<
name|?
super|super
name|K
argument_list|>
name|comparator
parameter_list|)
block|{
if|if
condition|(
name|comparator
operator|==
name|NATURAL_ORDER
condition|)
block|{
return|return
operator|(
name|ImmutableSortedMap
operator|)
name|NATURAL_EMPTY_MAP
return|;
block|}
return|return
operator|new
name|EmptyImmutableSortedMap
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
argument_list|(
name|comparator
argument_list|)
return|;
block|}
block|}
end_class

end_unit

