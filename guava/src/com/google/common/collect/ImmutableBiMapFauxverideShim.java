begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2015 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.collect
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|GwtIncompatible
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|errorprone
operator|.
name|annotations
operator|.
name|DoNotCall
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|BinaryOperator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Function
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|checkerframework
operator|.
name|checker
operator|.
name|nullness
operator|.
name|qual
operator|.
name|Nullable
import|;
end_import

begin_comment
comment|/**  * "Overrides" the {@link ImmutableMap} static methods that lack {@link ImmutableBiMap} equivalents  * with deprecated, exception-throwing versions. See {@link ImmutableSortedSetFauxverideShim} for  * details.  *  * @author Louis Wasserman  */
end_comment

begin_class
annotation|@
name|GwtIncompatible
annotation|@
name|ElementTypesAreNonnullByDefault
DECL|class|ImmutableBiMapFauxverideShim
specifier|abstract
class|class
name|ImmutableBiMapFauxverideShim
parameter_list|<
name|K
parameter_list|,
name|V
parameter_list|>
extends|extends
name|ImmutableMap
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
block|{
comment|/**    * Not supported. Use {@link ImmutableBiMap#toImmutableBiMap} instead. This method exists only to    * hide {@link ImmutableMap#toImmutableMap(Function, Function)} from consumers of {@code    * ImmutableBiMap}.    *    * @throws UnsupportedOperationException always    * @deprecated Use {@link ImmutableBiMap#toImmutableBiMap}.    */
annotation|@
name|Deprecated
annotation|@
name|DoNotCall
argument_list|(
literal|"Use toImmutableBiMap"
argument_list|)
specifier|public
specifier|static
operator|<
name|T
expr|extends @
name|Nullable
name|Object
operator|,
name|K
operator|,
name|V
operator|>
DECL|method|toImmutableMap ( Function<? super T, ? extends K> keyFunction, Function<? super T, ? extends V> valueFunction)
name|Collector
argument_list|<
name|T
argument_list|,
name|?
argument_list|,
name|ImmutableMap
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
argument_list|>
name|toImmutableMap
argument_list|(
name|Function
argument_list|<
name|?
super|super
name|T
argument_list|,
name|?
extends|extends
name|K
argument_list|>
name|keyFunction
operator|,
name|Function
argument_list|<
name|?
super|super
name|T
argument_list|,
name|?
extends|extends
name|V
argument_list|>
name|valueFunction
argument_list|)
block|{
throw|throw
argument_list|new
name|UnsupportedOperationException
argument_list|()
block|;   }
comment|/**    * Not supported. This method does not make sense for {@code BiMap}. This method exists only to    * hide {@link ImmutableMap#toImmutableMap(Function, Function, BinaryOperator)} from consumers of    * {@code ImmutableBiMap}.    *    * @throws UnsupportedOperationException always    * @deprecated    */
expr|@
name|Deprecated
expr|@
name|DoNotCall
argument_list|(
literal|"Use toImmutableBiMap"
argument_list|)
specifier|public
specifier|static
operator|<
name|T
expr|extends @
name|Nullable
name|Object
operator|,
name|K
operator|,
name|V
operator|>
DECL|method|toImmutableMap ( Function<? super T, ? extends K> keyFunction, Function<? super T, ? extends V> valueFunction, BinaryOperator<V> mergeFunction)
name|Collector
argument_list|<
name|T
argument_list|,
name|?
argument_list|,
name|ImmutableMap
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
argument_list|>
name|toImmutableMap
argument_list|(
name|Function
argument_list|<
name|?
super|super
name|T
argument_list|,
name|?
extends|extends
name|K
argument_list|>
name|keyFunction
operator|,
name|Function
argument_list|<
name|?
super|super
name|T
argument_list|,
name|?
extends|extends
name|V
argument_list|>
name|valueFunction
operator|,
name|BinaryOperator
argument_list|<
name|V
argument_list|>
name|mergeFunction
argument_list|)
block|{
throw|throw
argument_list|new
name|UnsupportedOperationException
argument_list|()
block|;   }
block|}
end_class

end_unit

