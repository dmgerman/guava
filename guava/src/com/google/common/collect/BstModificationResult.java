begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2011 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except  * in compliance with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software distributed under the  * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either  * express or implied. See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.collect
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
operator|.
name|checkNotNull
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|GwtCompatible
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_comment
comment|/**  * The result of a {@code BstModifier}.  *  * @author Louis Wasserman  */
end_comment

begin_class
annotation|@
name|GwtCompatible
DECL|class|BstModificationResult
specifier|final
class|class
name|BstModificationResult
parameter_list|<
name|N
extends|extends
name|BstNode
parameter_list|<
name|?
parameter_list|,
name|N
parameter_list|>
parameter_list|>
block|{
DECL|enum|ModificationType
enum|enum
name|ModificationType
block|{
DECL|enumConstant|IDENTITY
DECL|enumConstant|REBUILDING_CHANGE
DECL|enumConstant|REBALANCING_CHANGE
name|IDENTITY
block|,
name|REBUILDING_CHANGE
block|,
name|REBALANCING_CHANGE
block|;   }
DECL|method|identity (@ullable N target)
specifier|static
parameter_list|<
name|N
extends|extends
name|BstNode
argument_list|<
name|?
argument_list|,
name|N
argument_list|>
parameter_list|>
name|BstModificationResult
argument_list|<
name|N
argument_list|>
name|identity
parameter_list|(
annotation|@
name|Nullable
name|N
name|target
parameter_list|)
block|{
return|return
operator|new
name|BstModificationResult
argument_list|<
name|N
argument_list|>
argument_list|(
name|target
argument_list|,
name|target
argument_list|,
name|ModificationType
operator|.
name|IDENTITY
argument_list|)
return|;
block|}
DECL|method|rebuildingChange ( @ullable N originalTarget, @Nullable N changedTarget)
specifier|static
parameter_list|<
name|N
extends|extends
name|BstNode
argument_list|<
name|?
argument_list|,
name|N
argument_list|>
parameter_list|>
name|BstModificationResult
argument_list|<
name|N
argument_list|>
name|rebuildingChange
parameter_list|(
annotation|@
name|Nullable
name|N
name|originalTarget
parameter_list|,
annotation|@
name|Nullable
name|N
name|changedTarget
parameter_list|)
block|{
return|return
operator|new
name|BstModificationResult
argument_list|<
name|N
argument_list|>
argument_list|(
name|originalTarget
argument_list|,
name|changedTarget
argument_list|,
name|ModificationType
operator|.
name|REBUILDING_CHANGE
argument_list|)
return|;
block|}
DECL|method|rebalancingChange ( @ullable N originalTarget, @Nullable N changedTarget)
specifier|static
parameter_list|<
name|N
extends|extends
name|BstNode
argument_list|<
name|?
argument_list|,
name|N
argument_list|>
parameter_list|>
name|BstModificationResult
argument_list|<
name|N
argument_list|>
name|rebalancingChange
parameter_list|(
annotation|@
name|Nullable
name|N
name|originalTarget
parameter_list|,
annotation|@
name|Nullable
name|N
name|changedTarget
parameter_list|)
block|{
return|return
operator|new
name|BstModificationResult
argument_list|<
name|N
argument_list|>
argument_list|(
name|originalTarget
argument_list|,
name|changedTarget
argument_list|,
name|ModificationType
operator|.
name|REBALANCING_CHANGE
argument_list|)
return|;
block|}
DECL|field|originalTarget
annotation|@
name|Nullable
specifier|private
specifier|final
name|N
name|originalTarget
decl_stmt|;
DECL|field|changedTarget
annotation|@
name|Nullable
specifier|private
specifier|final
name|N
name|changedTarget
decl_stmt|;
DECL|field|type
specifier|private
specifier|final
name|ModificationType
name|type
decl_stmt|;
DECL|method|BstModificationResult ( @ullable N originalTarget, @Nullable N changedTarget, ModificationType type)
specifier|private
name|BstModificationResult
parameter_list|(
annotation|@
name|Nullable
name|N
name|originalTarget
parameter_list|,
annotation|@
name|Nullable
name|N
name|changedTarget
parameter_list|,
name|ModificationType
name|type
parameter_list|)
block|{
name|this
operator|.
name|originalTarget
operator|=
name|originalTarget
expr_stmt|;
name|this
operator|.
name|changedTarget
operator|=
name|changedTarget
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|checkNotNull
argument_list|(
name|type
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Nullable
DECL|method|getOriginalTarget ()
name|N
name|getOriginalTarget
parameter_list|()
block|{
return|return
name|originalTarget
return|;
block|}
annotation|@
name|Nullable
DECL|method|getChangedTarget ()
name|N
name|getChangedTarget
parameter_list|()
block|{
return|return
name|changedTarget
return|;
block|}
DECL|method|getType ()
name|ModificationType
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
block|}
end_class

end_unit

