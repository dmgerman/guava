begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2009 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.io
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|NullPointerTester
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|NullPointerTester
operator|.
name|Visibility
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FilenameFilter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|PatternSyntaxException
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_comment
comment|/**  * Unit test for {@link PatternFilenameFilter}.  *  * @author Chris Nokleberg  */
end_comment

begin_class
DECL|class|PatternFilenameFilterTest
specifier|public
class|class
name|PatternFilenameFilterTest
extends|extends
name|TestCase
block|{
DECL|method|testSyntaxException ()
specifier|public
name|void
name|testSyntaxException
parameter_list|()
block|{
try|try
block|{
operator|new
name|PatternFilenameFilter
argument_list|(
literal|"("
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"expected exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PatternSyntaxException
name|expected
parameter_list|)
block|{     }
block|}
DECL|method|testAccept ()
specifier|public
name|void
name|testAccept
parameter_list|()
block|{
name|File
name|dir
init|=
operator|new
name|File
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|FilenameFilter
name|filter
init|=
operator|new
name|PatternFilenameFilter
argument_list|(
literal|"a+"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|filter
operator|.
name|accept
argument_list|(
name|dir
argument_list|,
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|filter
operator|.
name|accept
argument_list|(
name|dir
argument_list|,
literal|"aaaa"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|filter
operator|.
name|accept
argument_list|(
name|dir
argument_list|,
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Show that dir is ignored
name|assertTrue
argument_list|(
name|filter
operator|.
name|accept
argument_list|(
literal|null
argument_list|,
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testNulls ()
specifier|public
name|void
name|testNulls
parameter_list|()
throws|throws
name|Exception
block|{
name|NullPointerTester
name|tester
init|=
operator|new
name|NullPointerTester
argument_list|()
decl_stmt|;
name|tester
operator|.
name|testConstructors
argument_list|(
name|PatternFilenameFilter
operator|.
name|class
argument_list|,
name|Visibility
operator|.
name|PACKAGE
argument_list|)
expr_stmt|;
name|tester
operator|.
name|testStaticMethods
argument_list|(
name|PatternFilenameFilter
operator|.
name|class
argument_list|,
name|Visibility
operator|.
name|PACKAGE
argument_list|)
expr_stmt|;
comment|// currently none
comment|// The reason that we skip this method is discussed in a comment on the method.
name|tester
operator|.
name|ignore
argument_list|(
name|PatternFilenameFilter
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"accept"
argument_list|,
name|File
operator|.
name|class
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|tester
operator|.
name|testInstanceMethods
argument_list|(
operator|new
name|PatternFilenameFilter
argument_list|(
literal|".*"
argument_list|)
argument_list|,
name|Visibility
operator|.
name|PACKAGE
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

