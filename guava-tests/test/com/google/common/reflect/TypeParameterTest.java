begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright 2011 Google Inc. All Rights Reserved.
end_comment

begin_package
DECL|package|com.google.common.reflect
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|reflect
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|EqualsTester
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|NullPointerTester
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|TypeVariable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Unit test for {@link TypeParameter}.  *  * @author benyu@google.com (Ben Yu)  */
end_comment

begin_class
DECL|class|TypeParameterTest
specifier|public
class|class
name|TypeParameterTest
extends|extends
name|TestCase
block|{
DECL|method|testCaptureTypeParameter ()
specifier|public
parameter_list|<
name|T
parameter_list|>
name|void
name|testCaptureTypeParameter
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeVariable
argument_list|<
name|?
argument_list|>
name|variable
init|=
operator|new
name|TypeParameter
argument_list|<
name|T
argument_list|>
argument_list|()
block|{}
operator|.
name|typeVariable
decl_stmt|;
name|TypeVariable
argument_list|<
name|?
argument_list|>
name|expected
init|=
name|TypeParameterTest
operator|.
name|class
operator|.
name|getDeclaredMethod
argument_list|(
literal|"testCaptureTypeParameter"
argument_list|)
operator|.
name|getTypeParameters
argument_list|()
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|variable
argument_list|)
expr_stmt|;
block|}
DECL|method|testConcreteTypeRejected ()
specifier|public
name|void
name|testConcreteTypeRejected
parameter_list|()
block|{
try|try
block|{
operator|new
name|TypeParameter
argument_list|<
name|String
argument_list|>
argument_list|()
block|{}
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|expected
parameter_list|)
block|{}
block|}
DECL|method|testEquals ()
specifier|public
parameter_list|<
name|A
parameter_list|,
name|B
parameter_list|>
name|void
name|testEquals
parameter_list|()
throws|throws
name|Exception
block|{
name|Method
name|method
init|=
name|TypeParameterTest
operator|.
name|class
operator|.
name|getDeclaredMethod
argument_list|(
literal|"testEquals"
argument_list|)
decl_stmt|;
name|TypeVariable
argument_list|<
name|?
argument_list|>
name|a
init|=
name|method
operator|.
name|getTypeParameters
argument_list|()
index|[
literal|0
index|]
decl_stmt|;
name|TypeVariable
argument_list|<
name|?
argument_list|>
name|b
init|=
name|method
operator|.
name|getTypeParameters
argument_list|()
index|[
literal|1
index|]
decl_stmt|;
operator|new
name|EqualsTester
argument_list|()
operator|.
name|addEqualityGroup
argument_list|(
operator|new
name|TypeParameter
argument_list|<
name|A
argument_list|>
argument_list|()
block|{}
argument_list|,
operator|new
name|TypeParameter
argument_list|<
name|A
argument_list|>
argument_list|()
block|{}
argument_list|,
name|TypeParameter
operator|.
name|of
argument_list|(
name|a
argument_list|)
argument_list|)
operator|.
name|addEqualityGroup
argument_list|(
operator|new
name|TypeParameter
argument_list|<
name|B
argument_list|>
argument_list|()
block|{}
argument_list|,
name|TypeParameter
operator|.
name|of
argument_list|(
name|b
argument_list|)
argument_list|)
operator|.
name|testEquals
argument_list|()
expr_stmt|;
block|}
DECL|method|testNullPointers ()
specifier|public
name|void
name|testNullPointers
parameter_list|()
throws|throws
name|Exception
block|{
name|NullPointerTester
name|tester
init|=
operator|new
name|NullPointerTester
argument_list|()
decl_stmt|;
name|tester
operator|.
name|setDefault
argument_list|(
name|TypeVariable
operator|.
name|class
argument_list|,
name|Types
operator|.
name|newTypeVariable
argument_list|(
name|List
operator|.
name|class
argument_list|,
literal|"E"
argument_list|)
argument_list|)
expr_stmt|;
name|tester
operator|.
name|testAllPublicStaticMethods
argument_list|(
name|TypeParameter
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

