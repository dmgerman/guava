begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2011 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.collect
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|GwtCompatible
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Function
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Functions
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|SortedMap
import|;
end_import

begin_comment
comment|/**  * Tests for {@link Maps#transformValues(SortedMap, Function)}.  *   * @author Louis Wasserman  */
end_comment

begin_class
annotation|@
name|GwtCompatible
DECL|class|MapsSortedTransformValuesTest
specifier|public
class|class
name|MapsSortedTransformValuesTest
extends|extends
name|MapsTransformValuesTest
block|{
annotation|@
name|Override
DECL|method|makeEmptyMap ()
specifier|protected
name|SortedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|makeEmptyMap
parameter_list|()
block|{
return|return
name|Maps
operator|.
name|transformValues
argument_list|(
name|Maps
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|newTreeMap
argument_list|()
argument_list|,
name|Functions
operator|.
expr|<
name|String
operator|>
name|identity
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|makePopulatedMap ()
specifier|protected
name|SortedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|makePopulatedMap
parameter_list|()
block|{
name|SortedMap
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
name|underlying
init|=
name|Maps
operator|.
name|newTreeMap
argument_list|()
decl_stmt|;
name|underlying
operator|.
name|put
argument_list|(
literal|"a"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|underlying
operator|.
name|put
argument_list|(
literal|"b"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|underlying
operator|.
name|put
argument_list|(
literal|"c"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
return|return
name|Maps
operator|.
name|transformValues
argument_list|(
name|underlying
argument_list|,
name|Functions
operator|.
name|toStringFunction
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

