begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2011 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.collect
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|testing
operator|.
name|features
operator|.
name|CollectionFeature
operator|.
name|ALLOWS_NULL_QUERIES
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|testing
operator|.
name|features
operator|.
name|CollectionFeature
operator|.
name|KNOWN_ORDER
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|testing
operator|.
name|features
operator|.
name|CollectionFeature
operator|.
name|NON_STANDARD_TOSTRING
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|testing
operator|.
name|features
operator|.
name|CollectionFeature
operator|.
name|RESTRICTS_ELEMENTS
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|testing
operator|.
name|testers
operator|.
name|NavigableSetNavigationTester
operator|.
name|getHoleMethods
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|testing
operator|.
name|NavigableSetTestSuiteBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|testing
operator|.
name|features
operator|.
name|CollectionSize
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|testing
operator|.
name|google
operator|.
name|SetGenerators
operator|.
name|ContiguousSetDescendingGenerator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|testing
operator|.
name|google
operator|.
name|SetGenerators
operator|.
name|ContiguousSetGenerator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|testing
operator|.
name|google
operator|.
name|SetGenerators
operator|.
name|ContiguousSetHeadsetGenerator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|testing
operator|.
name|google
operator|.
name|SetGenerators
operator|.
name|ContiguousSetSubsetGenerator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|testing
operator|.
name|google
operator|.
name|SetGenerators
operator|.
name|ContiguousSetTailsetGenerator
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestSuite
import|;
end_import

begin_comment
comment|/**  * @author Gregory Kick  */
end_comment

begin_class
DECL|class|ContiguousSetNonGwtTest
specifier|public
class|class
name|ContiguousSetNonGwtTest
extends|extends
name|TestCase
block|{
DECL|class|BuiltTests
specifier|public
specifier|static
class|class
name|BuiltTests
extends|extends
name|TestCase
block|{
DECL|method|suite ()
specifier|public
specifier|static
name|Test
name|suite
parameter_list|()
block|{
name|TestSuite
name|suite
init|=
operator|new
name|TestSuite
argument_list|()
decl_stmt|;
name|suite
operator|.
name|addTest
argument_list|(
name|NavigableSetTestSuiteBuilder
operator|.
name|using
argument_list|(
operator|new
name|ContiguousSetGenerator
argument_list|()
argument_list|)
operator|.
name|named
argument_list|(
literal|"Range.asSet"
argument_list|)
operator|.
name|withFeatures
argument_list|(
name|CollectionSize
operator|.
name|ANY
argument_list|,
name|KNOWN_ORDER
argument_list|,
name|ALLOWS_NULL_QUERIES
argument_list|,
name|NON_STANDARD_TOSTRING
argument_list|,
name|RESTRICTS_ELEMENTS
argument_list|)
operator|.
name|suppressing
argument_list|(
name|getHoleMethods
argument_list|()
argument_list|)
operator|.
name|createTestSuite
argument_list|()
argument_list|)
expr_stmt|;
name|suite
operator|.
name|addTest
argument_list|(
name|NavigableSetTestSuiteBuilder
operator|.
name|using
argument_list|(
operator|new
name|ContiguousSetHeadsetGenerator
argument_list|()
argument_list|)
operator|.
name|named
argument_list|(
literal|"Range.asSet, headset"
argument_list|)
operator|.
name|withFeatures
argument_list|(
name|CollectionSize
operator|.
name|ANY
argument_list|,
name|KNOWN_ORDER
argument_list|,
name|ALLOWS_NULL_QUERIES
argument_list|,
name|NON_STANDARD_TOSTRING
argument_list|,
name|RESTRICTS_ELEMENTS
argument_list|)
operator|.
name|suppressing
argument_list|(
name|getHoleMethods
argument_list|()
argument_list|)
operator|.
name|createTestSuite
argument_list|()
argument_list|)
expr_stmt|;
name|suite
operator|.
name|addTest
argument_list|(
name|NavigableSetTestSuiteBuilder
operator|.
name|using
argument_list|(
operator|new
name|ContiguousSetTailsetGenerator
argument_list|()
argument_list|)
operator|.
name|named
argument_list|(
literal|"Range.asSet, tailset"
argument_list|)
operator|.
name|withFeatures
argument_list|(
name|CollectionSize
operator|.
name|ANY
argument_list|,
name|KNOWN_ORDER
argument_list|,
name|ALLOWS_NULL_QUERIES
argument_list|,
name|NON_STANDARD_TOSTRING
argument_list|,
name|RESTRICTS_ELEMENTS
argument_list|)
operator|.
name|suppressing
argument_list|(
name|getHoleMethods
argument_list|()
argument_list|)
operator|.
name|createTestSuite
argument_list|()
argument_list|)
expr_stmt|;
name|suite
operator|.
name|addTest
argument_list|(
name|NavigableSetTestSuiteBuilder
operator|.
name|using
argument_list|(
operator|new
name|ContiguousSetSubsetGenerator
argument_list|()
argument_list|)
operator|.
name|named
argument_list|(
literal|"Range.asSet, subset"
argument_list|)
operator|.
name|withFeatures
argument_list|(
name|CollectionSize
operator|.
name|ANY
argument_list|,
name|KNOWN_ORDER
argument_list|,
name|ALLOWS_NULL_QUERIES
argument_list|,
name|NON_STANDARD_TOSTRING
argument_list|,
name|RESTRICTS_ELEMENTS
argument_list|)
operator|.
name|suppressing
argument_list|(
name|getHoleMethods
argument_list|()
argument_list|)
operator|.
name|createTestSuite
argument_list|()
argument_list|)
expr_stmt|;
name|suite
operator|.
name|addTest
argument_list|(
name|NavigableSetTestSuiteBuilder
operator|.
name|using
argument_list|(
operator|new
name|ContiguousSetDescendingGenerator
argument_list|()
argument_list|)
operator|.
name|named
argument_list|(
literal|"Range.asSet.descendingSet"
argument_list|)
operator|.
name|withFeatures
argument_list|(
name|CollectionSize
operator|.
name|ANY
argument_list|,
name|KNOWN_ORDER
argument_list|,
name|ALLOWS_NULL_QUERIES
argument_list|,
name|NON_STANDARD_TOSTRING
argument_list|,
name|RESTRICTS_ELEMENTS
argument_list|)
operator|.
name|suppressing
argument_list|(
name|getHoleMethods
argument_list|()
argument_list|)
operator|.
name|createTestSuite
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|suite
return|;
block|}
block|}
DECL|method|testNothing ()
specifier|public
name|void
name|testNothing
parameter_list|()
block|{
comment|/*      * It's a warning if a TestCase subclass contains no tests, so we add one.      * Alternatively, we could stop extending TestCase, but I worry that someone      * will add a test in the future and not realize that it's being ignored.      */
block|}
block|}
end_class

end_unit

