begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright 2011 Google Inc. All Rights Reserved.
end_comment

begin_package
DECL|package|com.google.common.cache
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheTesting
operator|.
name|checkEmpty
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|TestingCacheLoaders
operator|.
name|constantLoader
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|TestingCacheLoaders
operator|.
name|exceptionLoader
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|TestingRemovalListeners
operator|.
name|countingRemovalListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|TestingRemovalListeners
operator|.
name|CountingRemovalListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|UncheckedExecutionException
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_comment
comment|/**  * {@link Cache} tests for caches with a maximum size of zero.  *  * @author schmoe@google.com (mike nonemacher)  */
end_comment

begin_class
DECL|class|NullCacheTest
specifier|public
class|class
name|NullCacheTest
extends|extends
name|TestCase
block|{
DECL|field|listener
name|CountingRemovalListener
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|listener
decl_stmt|;
annotation|@
name|Override
DECL|method|setUp ()
specifier|protected
name|void
name|setUp
parameter_list|()
block|{
name|listener
operator|=
name|countingRemovalListener
argument_list|()
expr_stmt|;
block|}
DECL|method|testGet ()
specifier|public
name|void
name|testGet
parameter_list|()
block|{
name|Object
name|computed
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
name|Cache
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|cache
init|=
name|CacheBuilder
operator|.
name|newBuilder
argument_list|()
operator|.
name|maximumSize
argument_list|(
literal|0
argument_list|)
operator|.
name|removalListener
argument_list|(
name|listener
argument_list|)
operator|.
name|build
argument_list|(
name|constantLoader
argument_list|(
name|computed
argument_list|)
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|computed
argument_list|,
name|cache
operator|.
name|getUnchecked
argument_list|(
operator|new
name|Object
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|listener
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|checkEmpty
argument_list|(
name|cache
argument_list|)
expr_stmt|;
block|}
DECL|method|testGet_computeNull ()
specifier|public
name|void
name|testGet_computeNull
parameter_list|()
block|{
name|Cache
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|cache
init|=
name|CacheBuilder
operator|.
name|newBuilder
argument_list|()
operator|.
name|maximumSize
argument_list|(
literal|0
argument_list|)
operator|.
name|removalListener
argument_list|(
name|listener
argument_list|)
operator|.
name|build
argument_list|(
name|constantLoader
argument_list|(
literal|null
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|cache
operator|.
name|getUnchecked
argument_list|(
operator|new
name|Object
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NullPointerException
name|e
parameter_list|)
block|{
comment|/* expected */
block|}
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|listener
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|checkEmpty
argument_list|(
name|cache
argument_list|)
expr_stmt|;
block|}
DECL|method|testGet_runtimeException ()
specifier|public
name|void
name|testGet_runtimeException
parameter_list|()
block|{
specifier|final
name|RuntimeException
name|e
init|=
operator|new
name|RuntimeException
argument_list|()
decl_stmt|;
name|Cache
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|map
init|=
name|CacheBuilder
operator|.
name|newBuilder
argument_list|()
operator|.
name|maximumSize
argument_list|(
literal|0
argument_list|)
operator|.
name|removalListener
argument_list|(
name|listener
argument_list|)
operator|.
name|build
argument_list|(
name|exceptionLoader
argument_list|(
name|e
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|map
operator|.
name|getUnchecked
argument_list|(
operator|new
name|Object
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UncheckedExecutionException
name|uee
parameter_list|)
block|{
name|assertSame
argument_list|(
name|e
argument_list|,
name|uee
operator|.
name|getCause
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|checkEmpty
argument_list|(
name|map
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

