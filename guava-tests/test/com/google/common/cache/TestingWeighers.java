begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2011 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except  * in compliance with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software distributed under the License  * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express  * or implied. See the License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|com.google.common.cache
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
package|;
end_package

begin_comment
comment|/**  * Utility {@link Weigher} implementations intended for use in testing.  *  * @author Charles Fry  */
end_comment

begin_class
DECL|class|TestingWeighers
specifier|public
class|class
name|TestingWeighers
block|{
comment|/**    * Returns a {@link Weigher} that returns the given {@code constant} for every request.    */
DECL|method|constantWeigher (int constant)
specifier|static
name|Weigher
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|constantWeigher
parameter_list|(
name|int
name|constant
parameter_list|)
block|{
return|return
operator|new
name|ConstantWeigher
argument_list|(
name|constant
argument_list|)
return|;
block|}
comment|/**    * Returns a {@link Weigher} that uses the integer key as the weight.    */
DECL|method|intKeyWeigher ()
specifier|static
name|Weigher
argument_list|<
name|Integer
argument_list|,
name|Object
argument_list|>
name|intKeyWeigher
parameter_list|()
block|{
return|return
operator|new
name|IntKeyWeigher
argument_list|()
return|;
block|}
comment|/**    * Returns a {@link Weigher} that uses the integer value as the weight.    */
DECL|method|intValueWeigher ()
specifier|static
name|Weigher
argument_list|<
name|Object
argument_list|,
name|Integer
argument_list|>
name|intValueWeigher
parameter_list|()
block|{
return|return
operator|new
name|IntValueWeigher
argument_list|()
return|;
block|}
DECL|class|ConstantWeigher
specifier|static
specifier|final
class|class
name|ConstantWeigher
implements|implements
name|Weigher
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
block|{
DECL|field|constant
specifier|private
specifier|final
name|int
name|constant
decl_stmt|;
DECL|method|ConstantWeigher (int constant)
name|ConstantWeigher
parameter_list|(
name|int
name|constant
parameter_list|)
block|{
name|this
operator|.
name|constant
operator|=
name|constant
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|weigh (Object key, Object value)
specifier|public
name|int
name|weigh
parameter_list|(
name|Object
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
name|constant
return|;
block|}
block|}
DECL|class|IntKeyWeigher
specifier|static
specifier|final
class|class
name|IntKeyWeigher
implements|implements
name|Weigher
argument_list|<
name|Integer
argument_list|,
name|Object
argument_list|>
block|{
annotation|@
name|Override
DECL|method|weigh (Integer key, Object value)
specifier|public
name|int
name|weigh
parameter_list|(
name|Integer
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
name|key
return|;
block|}
block|}
DECL|class|IntValueWeigher
specifier|static
specifier|final
class|class
name|IntValueWeigher
implements|implements
name|Weigher
argument_list|<
name|Object
argument_list|,
name|Integer
argument_list|>
block|{
annotation|@
name|Override
DECL|method|weigh (Object key, Integer value)
specifier|public
name|int
name|weigh
parameter_list|(
name|Object
name|key
parameter_list|,
name|Integer
name|value
parameter_list|)
block|{
return|return
name|value
return|;
block|}
block|}
block|}
end_class

end_unit

