begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2011 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.eventbus.outside
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|eventbus
operator|.
name|outside
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|eventbus
operator|.
name|EventBus
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|eventbus
operator|.
name|Subscribe
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicReference
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_comment
comment|/**  * Test cases for {@code EventBus} that must not be in the same package.  *  * @author Louis Wasserman  */
end_comment

begin_class
DECL|class|OutsideEventBusTest
specifier|public
class|class
name|OutsideEventBusTest
extends|extends
name|TestCase
block|{
comment|/*    * If you do this test from common.eventbus.EventBusTest, it doesn't actually test the behavior.    * That is, even if exactly the same method works from inside the common.eventbus package tests,    * it can fail here.    */
DECL|method|testAnonymous ()
specifier|public
name|void
name|testAnonymous
parameter_list|()
block|{
specifier|final
name|AtomicReference
argument_list|<
name|String
argument_list|>
name|holder
init|=
operator|new
name|AtomicReference
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|final
name|AtomicInteger
name|deliveries
init|=
operator|new
name|AtomicInteger
argument_list|()
decl_stmt|;
name|EventBus
name|bus
init|=
operator|new
name|EventBus
argument_list|()
decl_stmt|;
name|bus
operator|.
name|register
argument_list|(
operator|new
name|Object
argument_list|()
block|{
annotation|@
name|Subscribe
specifier|public
name|void
name|accept
parameter_list|(
name|String
name|str
parameter_list|)
block|{
name|holder
operator|.
name|set
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|deliveries
operator|.
name|incrementAndGet
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|String
name|EVENT
init|=
literal|"Hello!"
decl_stmt|;
name|bus
operator|.
name|post
argument_list|(
name|EVENT
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Only one event should be delivered."
argument_list|,
literal|1
argument_list|,
name|deliveries
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Correct string should be delivered."
argument_list|,
name|EVENT
argument_list|,
name|holder
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

