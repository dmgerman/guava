begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2012 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.base
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Field
import|;
end_import

begin_comment
comment|/**  * Tests for {@link StandardSystemProperties}.  *  * @author Kurt Alfred Kluever  */
end_comment

begin_class
DECL|class|StandardSystemPropertiesTest
specifier|public
class|class
name|StandardSystemPropertiesTest
extends|extends
name|TestCase
block|{
DECL|method|testConstantNameMatchesString ()
specifier|public
name|void
name|testConstantNameMatchesString
parameter_list|()
throws|throws
name|Exception
block|{
for|for
control|(
name|Field
name|field
range|:
name|StandardSystemProperties
operator|.
name|class
operator|.
name|getFields
argument_list|()
control|)
block|{
name|String
name|actual
init|=
operator|(
name|String
operator|)
name|field
operator|.
name|get
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|String
name|expected
init|=
name|Ascii
operator|.
name|toLowerCase
argument_list|(
name|field
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"_"
argument_list|,
literal|"."
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
block|}
comment|// TODO(user): Consider checking to make sure the property isn't null.
block|}
end_class

end_unit

