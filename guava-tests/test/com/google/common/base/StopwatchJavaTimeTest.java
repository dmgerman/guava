begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2008 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.base
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|GwtIncompatible
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|FakeTicker
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|Duration
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_comment
comment|/** Unit test for the {@code java.time} support in {@link Stopwatch}. */
end_comment

begin_class
annotation|@
name|GwtIncompatible
DECL|class|StopwatchJavaTimeTest
specifier|public
class|class
name|StopwatchJavaTimeTest
extends|extends
name|TestCase
block|{
DECL|field|ticker
specifier|private
specifier|final
name|FakeTicker
name|ticker
init|=
operator|new
name|FakeTicker
argument_list|()
decl_stmt|;
DECL|field|stopwatch
specifier|private
specifier|final
name|Stopwatch
name|stopwatch
init|=
operator|new
name|Stopwatch
argument_list|(
name|ticker
argument_list|)
decl_stmt|;
DECL|method|testElapsed_duration ()
specifier|public
name|void
name|testElapsed_duration
parameter_list|()
block|{
name|stopwatch
operator|.
name|start
argument_list|()
expr_stmt|;
name|ticker
operator|.
name|advance
argument_list|(
literal|999999
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Duration
operator|.
name|ofNanos
argument_list|(
literal|999999
argument_list|)
argument_list|,
name|stopwatch
operator|.
name|elapsed
argument_list|()
argument_list|)
expr_stmt|;
name|ticker
operator|.
name|advance
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Duration
operator|.
name|ofMillis
argument_list|(
literal|1
argument_list|)
argument_list|,
name|stopwatch
operator|.
name|elapsed
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

