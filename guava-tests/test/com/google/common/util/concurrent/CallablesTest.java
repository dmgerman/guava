begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2009 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.util.concurrent
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Callable
import|;
end_import

begin_comment
comment|/**  * Unit tests for {@link Callables}.  *  * @author Isaac Shum  */
end_comment

begin_class
DECL|class|CallablesTest
specifier|public
class|class
name|CallablesTest
extends|extends
name|TestCase
block|{
DECL|method|testReturning ()
specifier|public
name|void
name|testReturning
parameter_list|()
throws|throws
name|Exception
block|{
name|assertNull
argument_list|(
name|Callables
operator|.
name|returning
argument_list|(
literal|null
argument_list|)
operator|.
name|call
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
name|Callable
argument_list|<
name|Object
argument_list|>
name|callable
init|=
name|Callables
operator|.
name|returning
argument_list|(
name|value
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|value
argument_list|,
name|callable
operator|.
name|call
argument_list|()
argument_list|)
expr_stmt|;
comment|// Expect the same value on subsequent calls
name|assertSame
argument_list|(
name|value
argument_list|,
name|callable
operator|.
name|call
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

