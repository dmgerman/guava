begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright 2011 Google Inc. All Rights Reserved.
end_comment

begin_package
DECL|package|com.google.common.testing
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|GcFinalization
operator|.
name|FinalizationPredicate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|SettableFuture
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|ref
operator|.
name|WeakReference
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|WeakHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDownLatch
import|;
end_import

begin_comment
comment|/**  * Tests for {@link GcFinalization}.  *  * @author martinrb@google.com (Martin Buchholz)  * @author schmoe@google.com (mike nonemacher)  */
end_comment

begin_class
DECL|class|GcFinalizationTest
specifier|public
class|class
name|GcFinalizationTest
extends|extends
name|TestCase
block|{
DECL|method|testAwait_CountDownLatch ()
specifier|public
name|void
name|testAwait_CountDownLatch
parameter_list|()
block|{
specifier|final
name|CountDownLatch
name|latch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|Object
name|x
init|=
operator|new
name|Object
argument_list|()
block|{
specifier|protected
name|void
name|finalize
parameter_list|()
block|{
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
block|}
decl_stmt|;
name|x
operator|=
literal|null
expr_stmt|;
comment|// Hint to the JIT that x is unreachable
name|GcFinalization
operator|.
name|await
argument_list|(
name|latch
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|latch
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testAwaitDone_Future ()
specifier|public
name|void
name|testAwaitDone_Future
parameter_list|()
block|{
specifier|final
name|SettableFuture
argument_list|<
name|Void
argument_list|>
name|future
init|=
name|SettableFuture
operator|.
name|create
argument_list|()
decl_stmt|;
name|Object
name|x
init|=
operator|new
name|Object
argument_list|()
block|{
specifier|protected
name|void
name|finalize
parameter_list|()
block|{
name|future
operator|.
name|set
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|x
operator|=
literal|null
expr_stmt|;
comment|// Hint to the JIT that x is unreachable
name|GcFinalization
operator|.
name|awaitDone
argument_list|(
name|future
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|future
operator|.
name|isDone
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|future
operator|.
name|isCancelled
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testAwaitDone_Future_Cancel ()
specifier|public
name|void
name|testAwaitDone_Future_Cancel
parameter_list|()
block|{
specifier|final
name|SettableFuture
argument_list|<
name|Void
argument_list|>
name|future
init|=
name|SettableFuture
operator|.
name|create
argument_list|()
decl_stmt|;
name|Object
name|x
init|=
operator|new
name|Object
argument_list|()
block|{
specifier|protected
name|void
name|finalize
parameter_list|()
block|{
name|future
operator|.
name|cancel
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|x
operator|=
literal|null
expr_stmt|;
comment|// Hint to the JIT that x is unreachable
name|GcFinalization
operator|.
name|awaitDone
argument_list|(
name|future
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|future
operator|.
name|isDone
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|future
operator|.
name|isCancelled
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testAwaitClear ()
specifier|public
name|void
name|testAwaitClear
parameter_list|()
block|{
specifier|final
name|WeakReference
argument_list|<
name|Object
argument_list|>
name|ref
init|=
operator|new
name|WeakReference
argument_list|<
name|Object
argument_list|>
argument_list|(
operator|new
name|Object
argument_list|()
argument_list|)
decl_stmt|;
name|GcFinalization
operator|.
name|awaitClear
argument_list|(
name|ref
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|ref
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testAwaitDone_FinalizationPredicate ()
specifier|public
name|void
name|testAwaitDone_FinalizationPredicate
parameter_list|()
block|{
specifier|final
name|WeakHashMap
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|map
init|=
operator|new
name|WeakHashMap
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
operator|new
name|Object
argument_list|()
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|GcFinalization
operator|.
name|awaitDone
argument_list|(
operator|new
name|FinalizationPredicate
argument_list|()
block|{
specifier|public
name|boolean
name|isDone
parameter_list|()
block|{
return|return
name|map
operator|.
name|isEmpty
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|map
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

