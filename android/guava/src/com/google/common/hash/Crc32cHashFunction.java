begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2011 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except  * in compliance with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software distributed under the License  * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express  * or implied. See the License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|com.google.common.hash
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|hash
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|errorprone
operator|.
name|annotations
operator|.
name|Immutable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_comment
comment|/**  * This class generates a CRC32C checksum, defined by RFC 3720, Section 12.1. The generator  * polynomial for this checksum is {@code 0x11EDC6F41}.  *  * @author Kurt Alfred Kluever  */
end_comment

begin_class
annotation|@
name|Immutable
DECL|class|Crc32cHashFunction
specifier|final
class|class
name|Crc32cHashFunction
extends|extends
name|AbstractHashFunction
block|{
DECL|field|CRC_32_C
specifier|static
specifier|final
name|HashFunction
name|CRC_32_C
init|=
operator|new
name|Crc32cHashFunction
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|bits ()
specifier|public
name|int
name|bits
parameter_list|()
block|{
return|return
literal|32
return|;
block|}
annotation|@
name|Override
DECL|method|newHasher ()
specifier|public
name|Hasher
name|newHasher
parameter_list|()
block|{
return|return
operator|new
name|Crc32cHasher
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"Hashing.crc32c()"
return|;
block|}
DECL|class|Crc32cHasher
specifier|static
specifier|final
class|class
name|Crc32cHasher
extends|extends
name|AbstractStreamingHasher
block|{
comment|/*      * The striding algorithm works roughly as follows: it is universally the case that      * CRC(x ^ y) == CRC(x) ^ CRC(y).  The approach we take is to break the message as follows,      * with each letter representing a 4-byte word: ABCDABCDABCDABCD... and to calculate      * CRC(A000A000A000...), CRC(0B000B000B...), CRC(00C000C000C...), CRC(000D000D000D...)      * and then to XOR them together.  The STRIDE_TABLE enables us to hash an int followed by 12      * zero bytes (3 ints), while the BYTE_TABLE is for advancing one byte at a time.      * This algorithm is due to the paper "Everything we know about CRC but [are] afraid to forget"      * by Kadatch and Jenkins, 2010.      */
DECL|method|Crc32cHasher ()
name|Crc32cHasher
parameter_list|()
block|{
name|super
argument_list|(
literal|16
argument_list|)
expr_stmt|;
block|}
DECL|field|finished
specifier|private
name|boolean
name|finished
init|=
literal|false
decl_stmt|;
comment|/*      * This trick allows us to avoid having separate states for "first four ints" and "all other      * four int chunks."  The state we want after the first four bytes is      *      * crc0 = ~int0      * crc1 = int1      * crc2 = int2      * crc3 = int3      *      * ...so we set crc0 so that computeForWord(crc0) = -1 and xoring it with the first int      * gives us the desired result.  computeForWord(0) == 0, so all the others do the right thing.      */
DECL|field|crc0
specifier|private
name|int
name|crc0
init|=
name|INVERSE_COMPUTE_FOR_WORD_OF_ALL_1S
decl_stmt|;
DECL|field|crc1
specifier|private
name|int
name|crc1
init|=
literal|0
decl_stmt|;
DECL|field|crc2
specifier|private
name|int
name|crc2
init|=
literal|0
decl_stmt|;
DECL|field|crc3
specifier|private
name|int
name|crc3
init|=
literal|0
decl_stmt|;
annotation|@
name|Override
DECL|method|process (ByteBuffer bb)
specifier|protected
name|void
name|process
parameter_list|(
name|ByteBuffer
name|bb
parameter_list|)
block|{
if|if
condition|(
name|finished
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"The behavior of calling any method after calling hash() is undefined."
argument_list|)
throw|;
block|}
while|while
condition|(
name|bb
operator|.
name|remaining
argument_list|()
operator|>=
literal|16
condition|)
block|{
name|crc0
operator|=
name|computeForWord
argument_list|(
name|crc0
argument_list|)
expr_stmt|;
name|crc1
operator|=
name|computeForWord
argument_list|(
name|crc1
argument_list|)
expr_stmt|;
name|crc2
operator|=
name|computeForWord
argument_list|(
name|crc2
argument_list|)
expr_stmt|;
name|crc3
operator|=
name|computeForWord
argument_list|(
name|crc3
argument_list|)
expr_stmt|;
name|crc0
operator|^=
name|bb
operator|.
name|getInt
argument_list|()
expr_stmt|;
name|crc1
operator|^=
name|bb
operator|.
name|getInt
argument_list|()
expr_stmt|;
name|crc2
operator|^=
name|bb
operator|.
name|getInt
argument_list|()
expr_stmt|;
name|crc3
operator|^=
name|bb
operator|.
name|getInt
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|processRemaining (ByteBuffer bb)
specifier|protected
name|void
name|processRemaining
parameter_list|(
name|ByteBuffer
name|bb
parameter_list|)
block|{
if|if
condition|(
name|finished
condition|)
block|{
return|return;
block|}
name|crc0
operator|=
name|combine
argument_list|(
literal|0
argument_list|,
name|crc0
argument_list|)
expr_stmt|;
name|crc0
operator|=
name|combine
argument_list|(
name|crc0
argument_list|,
name|crc1
argument_list|)
expr_stmt|;
name|crc0
operator|=
name|combine
argument_list|(
name|crc0
argument_list|,
name|crc2
argument_list|)
expr_stmt|;
name|crc0
operator|=
name|combine
argument_list|(
name|crc0
argument_list|,
name|crc3
argument_list|)
expr_stmt|;
while|while
condition|(
name|bb
operator|.
name|hasRemaining
argument_list|()
condition|)
block|{
name|crc0
operator|=
operator|(
name|crc0
operator|>>>
literal|8
operator|)
operator|^
name|BYTE_TABLE
index|[
operator|(
name|bb
operator|.
name|get
argument_list|()
operator|^
name|crc0
operator|)
operator|&
literal|0xFF
index|]
expr_stmt|;
block|}
name|finished
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|makeHash ()
specifier|protected
name|HashCode
name|makeHash
parameter_list|()
block|{
if|if
condition|(
operator|!
name|finished
condition|)
block|{
comment|// processRemaining does teardown we always want to do -- the folding together of the four
comment|// rolling CRCs.  So we call it on an empty ByteBuffer if we didn't already.
name|processRemaining
argument_list|(
name|EMPTY
argument_list|)
expr_stmt|;
block|}
return|return
name|HashCode
operator|.
name|fromInt
argument_list|(
operator|~
name|crc0
argument_list|)
return|;
block|}
DECL|field|BYTE_TABLE
specifier|static
specifier|final
name|int
index|[]
name|BYTE_TABLE
init|=
block|{
literal|0x00000000
block|,
literal|0xf26b8303
block|,
literal|0xe13b70f7
block|,
literal|0x1350f3f4
block|,
literal|0xc79a971f
block|,
literal|0x35f1141c
block|,
literal|0x26a1e7e8
block|,
literal|0xd4ca64eb
block|,
literal|0x8ad958cf
block|,
literal|0x78b2dbcc
block|,
literal|0x6be22838
block|,
literal|0x9989ab3b
block|,
literal|0x4d43cfd0
block|,
literal|0xbf284cd3
block|,
literal|0xac78bf27
block|,
literal|0x5e133c24
block|,
literal|0x105ec76f
block|,
literal|0xe235446c
block|,
literal|0xf165b798
block|,
literal|0x030e349b
block|,
literal|0xd7c45070
block|,
literal|0x25afd373
block|,
literal|0x36ff2087
block|,
literal|0xc494a384
block|,
literal|0x9a879fa0
block|,
literal|0x68ec1ca3
block|,
literal|0x7bbcef57
block|,
literal|0x89d76c54
block|,
literal|0x5d1d08bf
block|,
literal|0xaf768bbc
block|,
literal|0xbc267848
block|,
literal|0x4e4dfb4b
block|,
literal|0x20bd8ede
block|,
literal|0xd2d60ddd
block|,
literal|0xc186fe29
block|,
literal|0x33ed7d2a
block|,
literal|0xe72719c1
block|,
literal|0x154c9ac2
block|,
literal|0x061c6936
block|,
literal|0xf477ea35
block|,
literal|0xaa64d611
block|,
literal|0x580f5512
block|,
literal|0x4b5fa6e6
block|,
literal|0xb93425e5
block|,
literal|0x6dfe410e
block|,
literal|0x9f95c20d
block|,
literal|0x8cc531f9
block|,
literal|0x7eaeb2fa
block|,
literal|0x30e349b1
block|,
literal|0xc288cab2
block|,
literal|0xd1d83946
block|,
literal|0x23b3ba45
block|,
literal|0xf779deae
block|,
literal|0x05125dad
block|,
literal|0x1642ae59
block|,
literal|0xe4292d5a
block|,
literal|0xba3a117e
block|,
literal|0x4851927d
block|,
literal|0x5b016189
block|,
literal|0xa96ae28a
block|,
literal|0x7da08661
block|,
literal|0x8fcb0562
block|,
literal|0x9c9bf696
block|,
literal|0x6ef07595
block|,
literal|0x417b1dbc
block|,
literal|0xb3109ebf
block|,
literal|0xa0406d4b
block|,
literal|0x522bee48
block|,
literal|0x86e18aa3
block|,
literal|0x748a09a0
block|,
literal|0x67dafa54
block|,
literal|0x95b17957
block|,
literal|0xcba24573
block|,
literal|0x39c9c670
block|,
literal|0x2a993584
block|,
literal|0xd8f2b687
block|,
literal|0x0c38d26c
block|,
literal|0xfe53516f
block|,
literal|0xed03a29b
block|,
literal|0x1f682198
block|,
literal|0x5125dad3
block|,
literal|0xa34e59d0
block|,
literal|0xb01eaa24
block|,
literal|0x42752927
block|,
literal|0x96bf4dcc
block|,
literal|0x64d4cecf
block|,
literal|0x77843d3b
block|,
literal|0x85efbe38
block|,
literal|0xdbfc821c
block|,
literal|0x2997011f
block|,
literal|0x3ac7f2eb
block|,
literal|0xc8ac71e8
block|,
literal|0x1c661503
block|,
literal|0xee0d9600
block|,
literal|0xfd5d65f4
block|,
literal|0x0f36e6f7
block|,
literal|0x61c69362
block|,
literal|0x93ad1061
block|,
literal|0x80fde395
block|,
literal|0x72966096
block|,
literal|0xa65c047d
block|,
literal|0x5437877e
block|,
literal|0x4767748a
block|,
literal|0xb50cf789
block|,
literal|0xeb1fcbad
block|,
literal|0x197448ae
block|,
literal|0x0a24bb5a
block|,
literal|0xf84f3859
block|,
literal|0x2c855cb2
block|,
literal|0xdeeedfb1
block|,
literal|0xcdbe2c45
block|,
literal|0x3fd5af46
block|,
literal|0x7198540d
block|,
literal|0x83f3d70e
block|,
literal|0x90a324fa
block|,
literal|0x62c8a7f9
block|,
literal|0xb602c312
block|,
literal|0x44694011
block|,
literal|0x5739b3e5
block|,
literal|0xa55230e6
block|,
literal|0xfb410cc2
block|,
literal|0x092a8fc1
block|,
literal|0x1a7a7c35
block|,
literal|0xe811ff36
block|,
literal|0x3cdb9bdd
block|,
literal|0xceb018de
block|,
literal|0xdde0eb2a
block|,
literal|0x2f8b6829
block|,
literal|0x82f63b78
block|,
literal|0x709db87b
block|,
literal|0x63cd4b8f
block|,
literal|0x91a6c88c
block|,
literal|0x456cac67
block|,
literal|0xb7072f64
block|,
literal|0xa457dc90
block|,
literal|0x563c5f93
block|,
literal|0x082f63b7
block|,
literal|0xfa44e0b4
block|,
literal|0xe9141340
block|,
literal|0x1b7f9043
block|,
literal|0xcfb5f4a8
block|,
literal|0x3dde77ab
block|,
literal|0x2e8e845f
block|,
literal|0xdce5075c
block|,
literal|0x92a8fc17
block|,
literal|0x60c37f14
block|,
literal|0x73938ce0
block|,
literal|0x81f80fe3
block|,
literal|0x55326b08
block|,
literal|0xa759e80b
block|,
literal|0xb4091bff
block|,
literal|0x466298fc
block|,
literal|0x1871a4d8
block|,
literal|0xea1a27db
block|,
literal|0xf94ad42f
block|,
literal|0x0b21572c
block|,
literal|0xdfeb33c7
block|,
literal|0x2d80b0c4
block|,
literal|0x3ed04330
block|,
literal|0xccbbc033
block|,
literal|0xa24bb5a6
block|,
literal|0x502036a5
block|,
literal|0x4370c551
block|,
literal|0xb11b4652
block|,
literal|0x65d122b9
block|,
literal|0x97baa1ba
block|,
literal|0x84ea524e
block|,
literal|0x7681d14d
block|,
literal|0x2892ed69
block|,
literal|0xdaf96e6a
block|,
literal|0xc9a99d9e
block|,
literal|0x3bc21e9d
block|,
literal|0xef087a76
block|,
literal|0x1d63f975
block|,
literal|0x0e330a81
block|,
literal|0xfc588982
block|,
literal|0xb21572c9
block|,
literal|0x407ef1ca
block|,
literal|0x532e023e
block|,
literal|0xa145813d
block|,
literal|0x758fe5d6
block|,
literal|0x87e466d5
block|,
literal|0x94b49521
block|,
literal|0x66df1622
block|,
literal|0x38cc2a06
block|,
literal|0xcaa7a905
block|,
literal|0xd9f75af1
block|,
literal|0x2b9cd9f2
block|,
literal|0xff56bd19
block|,
literal|0x0d3d3e1a
block|,
literal|0x1e6dcdee
block|,
literal|0xec064eed
block|,
literal|0xc38d26c4
block|,
literal|0x31e6a5c7
block|,
literal|0x22b65633
block|,
literal|0xd0ddd530
block|,
literal|0x0417b1db
block|,
literal|0xf67c32d8
block|,
literal|0xe52cc12c
block|,
literal|0x1747422f
block|,
literal|0x49547e0b
block|,
literal|0xbb3ffd08
block|,
literal|0xa86f0efc
block|,
literal|0x5a048dff
block|,
literal|0x8ecee914
block|,
literal|0x7ca56a17
block|,
literal|0x6ff599e3
block|,
literal|0x9d9e1ae0
block|,
literal|0xd3d3e1ab
block|,
literal|0x21b862a8
block|,
literal|0x32e8915c
block|,
literal|0xc083125f
block|,
literal|0x144976b4
block|,
literal|0xe622f5b7
block|,
literal|0xf5720643
block|,
literal|0x07198540
block|,
literal|0x590ab964
block|,
literal|0xab613a67
block|,
literal|0xb831c993
block|,
literal|0x4a5a4a90
block|,
literal|0x9e902e7b
block|,
literal|0x6cfbad78
block|,
literal|0x7fab5e8c
block|,
literal|0x8dc0dd8f
block|,
literal|0xe330a81a
block|,
literal|0x115b2b19
block|,
literal|0x020bd8ed
block|,
literal|0xf0605bee
block|,
literal|0x24aa3f05
block|,
literal|0xd6c1bc06
block|,
literal|0xc5914ff2
block|,
literal|0x37faccf1
block|,
literal|0x69e9f0d5
block|,
literal|0x9b8273d6
block|,
literal|0x88d28022
block|,
literal|0x7ab90321
block|,
literal|0xae7367ca
block|,
literal|0x5c18e4c9
block|,
literal|0x4f48173d
block|,
literal|0xbd23943e
block|,
literal|0xf36e6f75
block|,
literal|0x0105ec76
block|,
literal|0x12551f82
block|,
literal|0xe03e9c81
block|,
literal|0x34f4f86a
block|,
literal|0xc69f7b69
block|,
literal|0xd5cf889d
block|,
literal|0x27a40b9e
block|,
literal|0x79b737ba
block|,
literal|0x8bdcb4b9
block|,
literal|0x988c474d
block|,
literal|0x6ae7c44e
block|,
literal|0xbe2da0a5
block|,
literal|0x4c4623a6
block|,
literal|0x5f16d052
block|,
literal|0xad7d5351
block|}
decl_stmt|;
DECL|field|STRIDE_TABLE
specifier|static
specifier|final
name|int
index|[]
index|[]
name|STRIDE_TABLE
init|=
block|{
block|{
literal|0x00000000
block|,
literal|0x30d23865
block|,
literal|0x61a470ca
block|,
literal|0x517648af
block|,
literal|0xc348e194
block|,
literal|0xf39ad9f1
block|,
literal|0xa2ec915e
block|,
literal|0x923ea93b
block|,
literal|0x837db5d9
block|,
literal|0xb3af8dbc
block|,
literal|0xe2d9c513
block|,
literal|0xd20bfd76
block|,
literal|0x4035544d
block|,
literal|0x70e76c28
block|,
literal|0x21912487
block|,
literal|0x11431ce2
block|,
literal|0x03171d43
block|,
literal|0x33c52526
block|,
literal|0x62b36d89
block|,
literal|0x526155ec
block|,
literal|0xc05ffcd7
block|,
literal|0xf08dc4b2
block|,
literal|0xa1fb8c1d
block|,
literal|0x9129b478
block|,
literal|0x806aa89a
block|,
literal|0xb0b890ff
block|,
literal|0xe1ced850
block|,
literal|0xd11ce035
block|,
literal|0x4322490e
block|,
literal|0x73f0716b
block|,
literal|0x228639c4
block|,
literal|0x125401a1
block|,
literal|0x062e3a86
block|,
literal|0x36fc02e3
block|,
literal|0x678a4a4c
block|,
literal|0x57587229
block|,
literal|0xc566db12
block|,
literal|0xf5b4e377
block|,
literal|0xa4c2abd8
block|,
literal|0x941093bd
block|,
literal|0x85538f5f
block|,
literal|0xb581b73a
block|,
literal|0xe4f7ff95
block|,
literal|0xd425c7f0
block|,
literal|0x461b6ecb
block|,
literal|0x76c956ae
block|,
literal|0x27bf1e01
block|,
literal|0x176d2664
block|,
literal|0x053927c5
block|,
literal|0x35eb1fa0
block|,
literal|0x649d570f
block|,
literal|0x544f6f6a
block|,
literal|0xc671c651
block|,
literal|0xf6a3fe34
block|,
literal|0xa7d5b69b
block|,
literal|0x97078efe
block|,
literal|0x8644921c
block|,
literal|0xb696aa79
block|,
literal|0xe7e0e2d6
block|,
literal|0xd732dab3
block|,
literal|0x450c7388
block|,
literal|0x75de4bed
block|,
literal|0x24a80342
block|,
literal|0x147a3b27
block|,
literal|0x0c5c750c
block|,
literal|0x3c8e4d69
block|,
literal|0x6df805c6
block|,
literal|0x5d2a3da3
block|,
literal|0xcf149498
block|,
literal|0xffc6acfd
block|,
literal|0xaeb0e452
block|,
literal|0x9e62dc37
block|,
literal|0x8f21c0d5
block|,
literal|0xbff3f8b0
block|,
literal|0xee85b01f
block|,
literal|0xde57887a
block|,
literal|0x4c692141
block|,
literal|0x7cbb1924
block|,
literal|0x2dcd518b
block|,
literal|0x1d1f69ee
block|,
literal|0x0f4b684f
block|,
literal|0x3f99502a
block|,
literal|0x6eef1885
block|,
literal|0x5e3d20e0
block|,
literal|0xcc0389db
block|,
literal|0xfcd1b1be
block|,
literal|0xada7f911
block|,
literal|0x9d75c174
block|,
literal|0x8c36dd96
block|,
literal|0xbce4e5f3
block|,
literal|0xed92ad5c
block|,
literal|0xdd409539
block|,
literal|0x4f7e3c02
block|,
literal|0x7fac0467
block|,
literal|0x2eda4cc8
block|,
literal|0x1e0874ad
block|,
literal|0x0a724f8a
block|,
literal|0x3aa077ef
block|,
literal|0x6bd63f40
block|,
literal|0x5b040725
block|,
literal|0xc93aae1e
block|,
literal|0xf9e8967b
block|,
literal|0xa89eded4
block|,
literal|0x984ce6b1
block|,
literal|0x890ffa53
block|,
literal|0xb9ddc236
block|,
literal|0xe8ab8a99
block|,
literal|0xd879b2fc
block|,
literal|0x4a471bc7
block|,
literal|0x7a9523a2
block|,
literal|0x2be36b0d
block|,
literal|0x1b315368
block|,
literal|0x096552c9
block|,
literal|0x39b76aac
block|,
literal|0x68c12203
block|,
literal|0x58131a66
block|,
literal|0xca2db35d
block|,
literal|0xfaff8b38
block|,
literal|0xab89c397
block|,
literal|0x9b5bfbf2
block|,
literal|0x8a18e710
block|,
literal|0xbacadf75
block|,
literal|0xebbc97da
block|,
literal|0xdb6eafbf
block|,
literal|0x49500684
block|,
literal|0x79823ee1
block|,
literal|0x28f4764e
block|,
literal|0x18264e2b
block|,
literal|0x18b8ea18
block|,
literal|0x286ad27d
block|,
literal|0x791c9ad2
block|,
literal|0x49cea2b7
block|,
literal|0xdbf00b8c
block|,
literal|0xeb2233e9
block|,
literal|0xba547b46
block|,
literal|0x8a864323
block|,
literal|0x9bc55fc1
block|,
literal|0xab1767a4
block|,
literal|0xfa612f0b
block|,
literal|0xcab3176e
block|,
literal|0x588dbe55
block|,
literal|0x685f8630
block|,
literal|0x3929ce9f
block|,
literal|0x09fbf6fa
block|,
literal|0x1baff75b
block|,
literal|0x2b7dcf3e
block|,
literal|0x7a0b8791
block|,
literal|0x4ad9bff4
block|,
literal|0xd8e716cf
block|,
literal|0xe8352eaa
block|,
literal|0xb9436605
block|,
literal|0x89915e60
block|,
literal|0x98d24282
block|,
literal|0xa8007ae7
block|,
literal|0xf9763248
block|,
literal|0xc9a40a2d
block|,
literal|0x5b9aa316
block|,
literal|0x6b489b73
block|,
literal|0x3a3ed3dc
block|,
literal|0x0aecebb9
block|,
literal|0x1e96d09e
block|,
literal|0x2e44e8fb
block|,
literal|0x7f32a054
block|,
literal|0x4fe09831
block|,
literal|0xddde310a
block|,
literal|0xed0c096f
block|,
literal|0xbc7a41c0
block|,
literal|0x8ca879a5
block|,
literal|0x9deb6547
block|,
literal|0xad395d22
block|,
literal|0xfc4f158d
block|,
literal|0xcc9d2de8
block|,
literal|0x5ea384d3
block|,
literal|0x6e71bcb6
block|,
literal|0x3f07f419
block|,
literal|0x0fd5cc7c
block|,
literal|0x1d81cddd
block|,
literal|0x2d53f5b8
block|,
literal|0x7c25bd17
block|,
literal|0x4cf78572
block|,
literal|0xdec92c49
block|,
literal|0xee1b142c
block|,
literal|0xbf6d5c83
block|,
literal|0x8fbf64e6
block|,
literal|0x9efc7804
block|,
literal|0xae2e4061
block|,
literal|0xff5808ce
block|,
literal|0xcf8a30ab
block|,
literal|0x5db49990
block|,
literal|0x6d66a1f5
block|,
literal|0x3c10e95a
block|,
literal|0x0cc2d13f
block|,
literal|0x14e49f14
block|,
literal|0x2436a771
block|,
literal|0x7540efde
block|,
literal|0x4592d7bb
block|,
literal|0xd7ac7e80
block|,
literal|0xe77e46e5
block|,
literal|0xb6080e4a
block|,
literal|0x86da362f
block|,
literal|0x97992acd
block|,
literal|0xa74b12a8
block|,
literal|0xf63d5a07
block|,
literal|0xc6ef6262
block|,
literal|0x54d1cb59
block|,
literal|0x6403f33c
block|,
literal|0x3575bb93
block|,
literal|0x05a783f6
block|,
literal|0x17f38257
block|,
literal|0x2721ba32
block|,
literal|0x7657f29d
block|,
literal|0x4685caf8
block|,
literal|0xd4bb63c3
block|,
literal|0xe4695ba6
block|,
literal|0xb51f1309
block|,
literal|0x85cd2b6c
block|,
literal|0x948e378e
block|,
literal|0xa45c0feb
block|,
literal|0xf52a4744
block|,
literal|0xc5f87f21
block|,
literal|0x57c6d61a
block|,
literal|0x6714ee7f
block|,
literal|0x3662a6d0
block|,
literal|0x06b09eb5
block|,
literal|0x12caa592
block|,
literal|0x22189df7
block|,
literal|0x736ed558
block|,
literal|0x43bced3d
block|,
literal|0xd1824406
block|,
literal|0xe1507c63
block|,
literal|0xb02634cc
block|,
literal|0x80f40ca9
block|,
literal|0x91b7104b
block|,
literal|0xa165282e
block|,
literal|0xf0136081
block|,
literal|0xc0c158e4
block|,
literal|0x52fff1df
block|,
literal|0x622dc9ba
block|,
literal|0x335b8115
block|,
literal|0x0389b970
block|,
literal|0x11ddb8d1
block|,
literal|0x210f80b4
block|,
literal|0x7079c81b
block|,
literal|0x40abf07e
block|,
literal|0xd2955945
block|,
literal|0xe2476120
block|,
literal|0xb331298f
block|,
literal|0x83e311ea
block|,
literal|0x92a00d08
block|,
literal|0xa272356d
block|,
literal|0xf3047dc2
block|,
literal|0xc3d645a7
block|,
literal|0x51e8ec9c
block|,
literal|0x613ad4f9
block|,
literal|0x304c9c56
block|,
literal|0x009ea433
block|,       }
block|,
block|{
literal|0x00000000
block|,
literal|0x54075546
block|,
literal|0xa80eaa8c
block|,
literal|0xfc09ffca
block|,
literal|0x55f123e9
block|,
literal|0x01f676af
block|,
literal|0xfdff8965
block|,
literal|0xa9f8dc23
block|,
literal|0xabe247d2
block|,
literal|0xffe51294
block|,
literal|0x03eced5e
block|,
literal|0x57ebb818
block|,
literal|0xfe13643b
block|,
literal|0xaa14317d
block|,
literal|0x561dceb7
block|,
literal|0x021a9bf1
block|,
literal|0x5228f955
block|,
literal|0x062fac13
block|,
literal|0xfa2653d9
block|,
literal|0xae21069f
block|,
literal|0x07d9dabc
block|,
literal|0x53de8ffa
block|,
literal|0xafd77030
block|,
literal|0xfbd02576
block|,
literal|0xf9cabe87
block|,
literal|0xadcdebc1
block|,
literal|0x51c4140b
block|,
literal|0x05c3414d
block|,
literal|0xac3b9d6e
block|,
literal|0xf83cc828
block|,
literal|0x043537e2
block|,
literal|0x503262a4
block|,
literal|0xa451f2aa
block|,
literal|0xf056a7ec
block|,
literal|0x0c5f5826
block|,
literal|0x58580d60
block|,
literal|0xf1a0d143
block|,
literal|0xa5a78405
block|,
literal|0x59ae7bcf
block|,
literal|0x0da92e89
block|,
literal|0x0fb3b578
block|,
literal|0x5bb4e03e
block|,
literal|0xa7bd1ff4
block|,
literal|0xf3ba4ab2
block|,
literal|0x5a429691
block|,
literal|0x0e45c3d7
block|,
literal|0xf24c3c1d
block|,
literal|0xa64b695b
block|,
literal|0xf6790bff
block|,
literal|0xa27e5eb9
block|,
literal|0x5e77a173
block|,
literal|0x0a70f435
block|,
literal|0xa3882816
block|,
literal|0xf78f7d50
block|,
literal|0x0b86829a
block|,
literal|0x5f81d7dc
block|,
literal|0x5d9b4c2d
block|,
literal|0x099c196b
block|,
literal|0xf595e6a1
block|,
literal|0xa192b3e7
block|,
literal|0x086a6fc4
block|,
literal|0x5c6d3a82
block|,
literal|0xa064c548
block|,
literal|0xf463900e
block|,
literal|0x4d4f93a5
block|,
literal|0x1948c6e3
block|,
literal|0xe5413929
block|,
literal|0xb1466c6f
block|,
literal|0x18beb04c
block|,
literal|0x4cb9e50a
block|,
literal|0xb0b01ac0
block|,
literal|0xe4b74f86
block|,
literal|0xe6add477
block|,
literal|0xb2aa8131
block|,
literal|0x4ea37efb
block|,
literal|0x1aa42bbd
block|,
literal|0xb35cf79e
block|,
literal|0xe75ba2d8
block|,
literal|0x1b525d12
block|,
literal|0x4f550854
block|,
literal|0x1f676af0
block|,
literal|0x4b603fb6
block|,
literal|0xb769c07c
block|,
literal|0xe36e953a
block|,
literal|0x4a964919
block|,
literal|0x1e911c5f
block|,
literal|0xe298e395
block|,
literal|0xb69fb6d3
block|,
literal|0xb4852d22
block|,
literal|0xe0827864
block|,
literal|0x1c8b87ae
block|,
literal|0x488cd2e8
block|,
literal|0xe1740ecb
block|,
literal|0xb5735b8d
block|,
literal|0x497aa447
block|,
literal|0x1d7df101
block|,
literal|0xe91e610f
block|,
literal|0xbd193449
block|,
literal|0x4110cb83
block|,
literal|0x15179ec5
block|,
literal|0xbcef42e6
block|,
literal|0xe8e817a0
block|,
literal|0x14e1e86a
block|,
literal|0x40e6bd2c
block|,
literal|0x42fc26dd
block|,
literal|0x16fb739b
block|,
literal|0xeaf28c51
block|,
literal|0xbef5d917
block|,
literal|0x170d0534
block|,
literal|0x430a5072
block|,
literal|0xbf03afb8
block|,
literal|0xeb04fafe
block|,
literal|0xbb36985a
block|,
literal|0xef31cd1c
block|,
literal|0x133832d6
block|,
literal|0x473f6790
block|,
literal|0xeec7bbb3
block|,
literal|0xbac0eef5
block|,
literal|0x46c9113f
block|,
literal|0x12ce4479
block|,
literal|0x10d4df88
block|,
literal|0x44d38ace
block|,
literal|0xb8da7504
block|,
literal|0xecdd2042
block|,
literal|0x4525fc61
block|,
literal|0x1122a927
block|,
literal|0xed2b56ed
block|,
literal|0xb92c03ab
block|,
literal|0x9a9f274a
block|,
literal|0xce98720c
block|,
literal|0x32918dc6
block|,
literal|0x6696d880
block|,
literal|0xcf6e04a3
block|,
literal|0x9b6951e5
block|,
literal|0x6760ae2f
block|,
literal|0x3367fb69
block|,
literal|0x317d6098
block|,
literal|0x657a35de
block|,
literal|0x9973ca14
block|,
literal|0xcd749f52
block|,
literal|0x648c4371
block|,
literal|0x308b1637
block|,
literal|0xcc82e9fd
block|,
literal|0x9885bcbb
block|,
literal|0xc8b7de1f
block|,
literal|0x9cb08b59
block|,
literal|0x60b97493
block|,
literal|0x34be21d5
block|,
literal|0x9d46fdf6
block|,
literal|0xc941a8b0
block|,
literal|0x3548577a
block|,
literal|0x614f023c
block|,
literal|0x635599cd
block|,
literal|0x3752cc8b
block|,
literal|0xcb5b3341
block|,
literal|0x9f5c6607
block|,
literal|0x36a4ba24
block|,
literal|0x62a3ef62
block|,
literal|0x9eaa10a8
block|,
literal|0xcaad45ee
block|,
literal|0x3eced5e0
block|,
literal|0x6ac980a6
block|,
literal|0x96c07f6c
block|,
literal|0xc2c72a2a
block|,
literal|0x6b3ff609
block|,
literal|0x3f38a34f
block|,
literal|0xc3315c85
block|,
literal|0x973609c3
block|,
literal|0x952c9232
block|,
literal|0xc12bc774
block|,
literal|0x3d2238be
block|,
literal|0x69256df8
block|,
literal|0xc0ddb1db
block|,
literal|0x94dae49d
block|,
literal|0x68d31b57
block|,
literal|0x3cd44e11
block|,
literal|0x6ce62cb5
block|,
literal|0x38e179f3
block|,
literal|0xc4e88639
block|,
literal|0x90efd37f
block|,
literal|0x39170f5c
block|,
literal|0x6d105a1a
block|,
literal|0x9119a5d0
block|,
literal|0xc51ef096
block|,
literal|0xc7046b67
block|,
literal|0x93033e21
block|,
literal|0x6f0ac1eb
block|,
literal|0x3b0d94ad
block|,
literal|0x92f5488e
block|,
literal|0xc6f21dc8
block|,
literal|0x3afbe202
block|,
literal|0x6efcb744
block|,
literal|0xd7d0b4ef
block|,
literal|0x83d7e1a9
block|,
literal|0x7fde1e63
block|,
literal|0x2bd94b25
block|,
literal|0x82219706
block|,
literal|0xd626c240
block|,
literal|0x2a2f3d8a
block|,
literal|0x7e2868cc
block|,
literal|0x7c32f33d
block|,
literal|0x2835a67b
block|,
literal|0xd43c59b1
block|,
literal|0x803b0cf7
block|,
literal|0x29c3d0d4
block|,
literal|0x7dc48592
block|,
literal|0x81cd7a58
block|,
literal|0xd5ca2f1e
block|,
literal|0x85f84dba
block|,
literal|0xd1ff18fc
block|,
literal|0x2df6e736
block|,
literal|0x79f1b270
block|,
literal|0xd0096e53
block|,
literal|0x840e3b15
block|,
literal|0x7807c4df
block|,
literal|0x2c009199
block|,
literal|0x2e1a0a68
block|,
literal|0x7a1d5f2e
block|,
literal|0x8614a0e4
block|,
literal|0xd213f5a2
block|,
literal|0x7beb2981
block|,
literal|0x2fec7cc7
block|,
literal|0xd3e5830d
block|,
literal|0x87e2d64b
block|,
literal|0x73814645
block|,
literal|0x27861303
block|,
literal|0xdb8fecc9
block|,
literal|0x8f88b98f
block|,
literal|0x267065ac
block|,
literal|0x727730ea
block|,
literal|0x8e7ecf20
block|,
literal|0xda799a66
block|,
literal|0xd8630197
block|,
literal|0x8c6454d1
block|,
literal|0x706dab1b
block|,
literal|0x246afe5d
block|,
literal|0x8d92227e
block|,
literal|0xd9957738
block|,
literal|0x259c88f2
block|,
literal|0x719bddb4
block|,
literal|0x21a9bf10
block|,
literal|0x75aeea56
block|,
literal|0x89a7159c
block|,
literal|0xdda040da
block|,
literal|0x74589cf9
block|,
literal|0x205fc9bf
block|,
literal|0xdc563675
block|,
literal|0x88516333
block|,
literal|0x8a4bf8c2
block|,
literal|0xde4cad84
block|,
literal|0x2245524e
block|,
literal|0x76420708
block|,
literal|0xdfbadb2b
block|,
literal|0x8bbd8e6d
block|,
literal|0x77b471a7
block|,
literal|0x23b324e1
block|,       }
block|,
block|{
literal|0x00000000
block|,
literal|0x678efd01
block|,
literal|0xcf1dfa02
block|,
literal|0xa8930703
block|,
literal|0x9bd782f5
block|,
literal|0xfc597ff4
block|,
literal|0x54ca78f7
block|,
literal|0x334485f6
block|,
literal|0x3243731b
block|,
literal|0x55cd8e1a
block|,
literal|0xfd5e8919
block|,
literal|0x9ad07418
block|,
literal|0xa994f1ee
block|,
literal|0xce1a0cef
block|,
literal|0x66890bec
block|,
literal|0x0107f6ed
block|,
literal|0x6486e636
block|,
literal|0x03081b37
block|,
literal|0xab9b1c34
block|,
literal|0xcc15e135
block|,
literal|0xff5164c3
block|,
literal|0x98df99c2
block|,
literal|0x304c9ec1
block|,
literal|0x57c263c0
block|,
literal|0x56c5952d
block|,
literal|0x314b682c
block|,
literal|0x99d86f2f
block|,
literal|0xfe56922e
block|,
literal|0xcd1217d8
block|,
literal|0xaa9cead9
block|,
literal|0x020fedda
block|,
literal|0x658110db
block|,
literal|0xc90dcc6c
block|,
literal|0xae83316d
block|,
literal|0x0610366e
block|,
literal|0x619ecb6f
block|,
literal|0x52da4e99
block|,
literal|0x3554b398
block|,
literal|0x9dc7b49b
block|,
literal|0xfa49499a
block|,
literal|0xfb4ebf77
block|,
literal|0x9cc04276
block|,
literal|0x34534575
block|,
literal|0x53ddb874
block|,
literal|0x60993d82
block|,
literal|0x0717c083
block|,
literal|0xaf84c780
block|,
literal|0xc80a3a81
block|,
literal|0xad8b2a5a
block|,
literal|0xca05d75b
block|,
literal|0x6296d058
block|,
literal|0x05182d59
block|,
literal|0x365ca8af
block|,
literal|0x51d255ae
block|,
literal|0xf94152ad
block|,
literal|0x9ecfafac
block|,
literal|0x9fc85941
block|,
literal|0xf846a440
block|,
literal|0x50d5a343
block|,
literal|0x375b5e42
block|,
literal|0x041fdbb4
block|,
literal|0x639126b5
block|,
literal|0xcb0221b6
block|,
literal|0xac8cdcb7
block|,
literal|0x97f7ee29
block|,
literal|0xf0791328
block|,
literal|0x58ea142b
block|,
literal|0x3f64e92a
block|,
literal|0x0c206cdc
block|,
literal|0x6bae91dd
block|,
literal|0xc33d96de
block|,
literal|0xa4b36bdf
block|,
literal|0xa5b49d32
block|,
literal|0xc23a6033
block|,
literal|0x6aa96730
block|,
literal|0x0d279a31
block|,
literal|0x3e631fc7
block|,
literal|0x59ede2c6
block|,
literal|0xf17ee5c5
block|,
literal|0x96f018c4
block|,
literal|0xf371081f
block|,
literal|0x94fff51e
block|,
literal|0x3c6cf21d
block|,
literal|0x5be20f1c
block|,
literal|0x68a68aea
block|,
literal|0x0f2877eb
block|,
literal|0xa7bb70e8
block|,
literal|0xc0358de9
block|,
literal|0xc1327b04
block|,
literal|0xa6bc8605
block|,
literal|0x0e2f8106
block|,
literal|0x69a17c07
block|,
literal|0x5ae5f9f1
block|,
literal|0x3d6b04f0
block|,
literal|0x95f803f3
block|,
literal|0xf276fef2
block|,
literal|0x5efa2245
block|,
literal|0x3974df44
block|,
literal|0x91e7d847
block|,
literal|0xf6692546
block|,
literal|0xc52da0b0
block|,
literal|0xa2a35db1
block|,
literal|0x0a305ab2
block|,
literal|0x6dbea7b3
block|,
literal|0x6cb9515e
block|,
literal|0x0b37ac5f
block|,
literal|0xa3a4ab5c
block|,
literal|0xc42a565d
block|,
literal|0xf76ed3ab
block|,
literal|0x90e02eaa
block|,
literal|0x387329a9
block|,
literal|0x5ffdd4a8
block|,
literal|0x3a7cc473
block|,
literal|0x5df23972
block|,
literal|0xf5613e71
block|,
literal|0x92efc370
block|,
literal|0xa1ab4686
block|,
literal|0xc625bb87
block|,
literal|0x6eb6bc84
block|,
literal|0x09384185
block|,
literal|0x083fb768
block|,
literal|0x6fb14a69
block|,
literal|0xc7224d6a
block|,
literal|0xa0acb06b
block|,
literal|0x93e8359d
block|,
literal|0xf466c89c
block|,
literal|0x5cf5cf9f
block|,
literal|0x3b7b329e
block|,
literal|0x2a03aaa3
block|,
literal|0x4d8d57a2
block|,
literal|0xe51e50a1
block|,
literal|0x8290ada0
block|,
literal|0xb1d42856
block|,
literal|0xd65ad557
block|,
literal|0x7ec9d254
block|,
literal|0x19472f55
block|,
literal|0x1840d9b8
block|,
literal|0x7fce24b9
block|,
literal|0xd75d23ba
block|,
literal|0xb0d3debb
block|,
literal|0x83975b4d
block|,
literal|0xe419a64c
block|,
literal|0x4c8aa14f
block|,
literal|0x2b045c4e
block|,
literal|0x4e854c95
block|,
literal|0x290bb194
block|,
literal|0x8198b697
block|,
literal|0xe6164b96
block|,
literal|0xd552ce60
block|,
literal|0xb2dc3361
block|,
literal|0x1a4f3462
block|,
literal|0x7dc1c963
block|,
literal|0x7cc63f8e
block|,
literal|0x1b48c28f
block|,
literal|0xb3dbc58c
block|,
literal|0xd455388d
block|,
literal|0xe711bd7b
block|,
literal|0x809f407a
block|,
literal|0x280c4779
block|,
literal|0x4f82ba78
block|,
literal|0xe30e66cf
block|,
literal|0x84809bce
block|,
literal|0x2c139ccd
block|,
literal|0x4b9d61cc
block|,
literal|0x78d9e43a
block|,
literal|0x1f57193b
block|,
literal|0xb7c41e38
block|,
literal|0xd04ae339
block|,
literal|0xd14d15d4
block|,
literal|0xb6c3e8d5
block|,
literal|0x1e50efd6
block|,
literal|0x79de12d7
block|,
literal|0x4a9a9721
block|,
literal|0x2d146a20
block|,
literal|0x85876d23
block|,
literal|0xe2099022
block|,
literal|0x878880f9
block|,
literal|0xe0067df8
block|,
literal|0x48957afb
block|,
literal|0x2f1b87fa
block|,
literal|0x1c5f020c
block|,
literal|0x7bd1ff0d
block|,
literal|0xd342f80e
block|,
literal|0xb4cc050f
block|,
literal|0xb5cbf3e2
block|,
literal|0xd2450ee3
block|,
literal|0x7ad609e0
block|,
literal|0x1d58f4e1
block|,
literal|0x2e1c7117
block|,
literal|0x49928c16
block|,
literal|0xe1018b15
block|,
literal|0x868f7614
block|,
literal|0xbdf4448a
block|,
literal|0xda7ab98b
block|,
literal|0x72e9be88
block|,
literal|0x15674389
block|,
literal|0x2623c67f
block|,
literal|0x41ad3b7e
block|,
literal|0xe93e3c7d
block|,
literal|0x8eb0c17c
block|,
literal|0x8fb73791
block|,
literal|0xe839ca90
block|,
literal|0x40aacd93
block|,
literal|0x27243092
block|,
literal|0x1460b564
block|,
literal|0x73ee4865
block|,
literal|0xdb7d4f66
block|,
literal|0xbcf3b267
block|,
literal|0xd972a2bc
block|,
literal|0xbefc5fbd
block|,
literal|0x166f58be
block|,
literal|0x71e1a5bf
block|,
literal|0x42a52049
block|,
literal|0x252bdd48
block|,
literal|0x8db8da4b
block|,
literal|0xea36274a
block|,
literal|0xeb31d1a7
block|,
literal|0x8cbf2ca6
block|,
literal|0x242c2ba5
block|,
literal|0x43a2d6a4
block|,
literal|0x70e65352
block|,
literal|0x1768ae53
block|,
literal|0xbffba950
block|,
literal|0xd8755451
block|,
literal|0x74f988e6
block|,
literal|0x137775e7
block|,
literal|0xbbe472e4
block|,
literal|0xdc6a8fe5
block|,
literal|0xef2e0a13
block|,
literal|0x88a0f712
block|,
literal|0x2033f011
block|,
literal|0x47bd0d10
block|,
literal|0x46bafbfd
block|,
literal|0x213406fc
block|,
literal|0x89a701ff
block|,
literal|0xee29fcfe
block|,
literal|0xdd6d7908
block|,
literal|0xbae38409
block|,
literal|0x1270830a
block|,
literal|0x75fe7e0b
block|,
literal|0x107f6ed0
block|,
literal|0x77f193d1
block|,
literal|0xdf6294d2
block|,
literal|0xb8ec69d3
block|,
literal|0x8ba8ec25
block|,
literal|0xec261124
block|,
literal|0x44b51627
block|,
literal|0x233beb26
block|,
literal|0x223c1dcb
block|,
literal|0x45b2e0ca
block|,
literal|0xed21e7c9
block|,
literal|0x8aaf1ac8
block|,
literal|0xb9eb9f3e
block|,
literal|0xde65623f
block|,
literal|0x76f6653c
block|,
literal|0x1178983d
block|,       }
block|,
block|{
literal|0x00000000
block|,
literal|0xf20c0dfe
block|,
literal|0xe1f46d0d
block|,
literal|0x13f860f3
block|,
literal|0xc604aceb
block|,
literal|0x3408a115
block|,
literal|0x27f0c1e6
block|,
literal|0xd5fccc18
block|,
literal|0x89e52f27
block|,
literal|0x7be922d9
block|,
literal|0x6811422a
block|,
literal|0x9a1d4fd4
block|,
literal|0x4fe183cc
block|,
literal|0xbded8e32
block|,
literal|0xae15eec1
block|,
literal|0x5c19e33f
block|,
literal|0x162628bf
block|,
literal|0xe42a2541
block|,
literal|0xf7d245b2
block|,
literal|0x05de484c
block|,
literal|0xd0228454
block|,
literal|0x222e89aa
block|,
literal|0x31d6e959
block|,
literal|0xc3dae4a7
block|,
literal|0x9fc30798
block|,
literal|0x6dcf0a66
block|,
literal|0x7e376a95
block|,
literal|0x8c3b676b
block|,
literal|0x59c7ab73
block|,
literal|0xabcba68d
block|,
literal|0xb833c67e
block|,
literal|0x4a3fcb80
block|,
literal|0x2c4c517e
block|,
literal|0xde405c80
block|,
literal|0xcdb83c73
block|,
literal|0x3fb4318d
block|,
literal|0xea48fd95
block|,
literal|0x1844f06b
block|,
literal|0x0bbc9098
block|,
literal|0xf9b09d66
block|,
literal|0xa5a97e59
block|,
literal|0x57a573a7
block|,
literal|0x445d1354
block|,
literal|0xb6511eaa
block|,
literal|0x63add2b2
block|,
literal|0x91a1df4c
block|,
literal|0x8259bfbf
block|,
literal|0x7055b241
block|,
literal|0x3a6a79c1
block|,
literal|0xc866743f
block|,
literal|0xdb9e14cc
block|,
literal|0x29921932
block|,
literal|0xfc6ed52a
block|,
literal|0x0e62d8d4
block|,
literal|0x1d9ab827
block|,
literal|0xef96b5d9
block|,
literal|0xb38f56e6
block|,
literal|0x41835b18
block|,
literal|0x527b3beb
block|,
literal|0xa0773615
block|,
literal|0x758bfa0d
block|,
literal|0x8787f7f3
block|,
literal|0x947f9700
block|,
literal|0x66739afe
block|,
literal|0x5898a2fc
block|,
literal|0xaa94af02
block|,
literal|0xb96ccff1
block|,
literal|0x4b60c20f
block|,
literal|0x9e9c0e17
block|,
literal|0x6c9003e9
block|,
literal|0x7f68631a
block|,
literal|0x8d646ee4
block|,
literal|0xd17d8ddb
block|,
literal|0x23718025
block|,
literal|0x3089e0d6
block|,
literal|0xc285ed28
block|,
literal|0x17792130
block|,
literal|0xe5752cce
block|,
literal|0xf68d4c3d
block|,
literal|0x048141c3
block|,
literal|0x4ebe8a43
block|,
literal|0xbcb287bd
block|,
literal|0xaf4ae74e
block|,
literal|0x5d46eab0
block|,
literal|0x88ba26a8
block|,
literal|0x7ab62b56
block|,
literal|0x694e4ba5
block|,
literal|0x9b42465b
block|,
literal|0xc75ba564
block|,
literal|0x3557a89a
block|,
literal|0x26afc869
block|,
literal|0xd4a3c597
block|,
literal|0x015f098f
block|,
literal|0xf3530471
block|,
literal|0xe0ab6482
block|,
literal|0x12a7697c
block|,
literal|0x74d4f382
block|,
literal|0x86d8fe7c
block|,
literal|0x95209e8f
block|,
literal|0x672c9371
block|,
literal|0xb2d05f69
block|,
literal|0x40dc5297
block|,
literal|0x53243264
block|,
literal|0xa1283f9a
block|,
literal|0xfd31dca5
block|,
literal|0x0f3dd15b
block|,
literal|0x1cc5b1a8
block|,
literal|0xeec9bc56
block|,
literal|0x3b35704e
block|,
literal|0xc9397db0
block|,
literal|0xdac11d43
block|,
literal|0x28cd10bd
block|,
literal|0x62f2db3d
block|,
literal|0x90fed6c3
block|,
literal|0x8306b630
block|,
literal|0x710abbce
block|,
literal|0xa4f677d6
block|,
literal|0x56fa7a28
block|,
literal|0x45021adb
block|,
literal|0xb70e1725
block|,
literal|0xeb17f41a
block|,
literal|0x191bf9e4
block|,
literal|0x0ae39917
block|,
literal|0xf8ef94e9
block|,
literal|0x2d1358f1
block|,
literal|0xdf1f550f
block|,
literal|0xcce735fc
block|,
literal|0x3eeb3802
block|,
literal|0xb13145f8
block|,
literal|0x433d4806
block|,
literal|0x50c528f5
block|,
literal|0xa2c9250b
block|,
literal|0x7735e913
block|,
literal|0x8539e4ed
block|,
literal|0x96c1841e
block|,
literal|0x64cd89e0
block|,
literal|0x38d46adf
block|,
literal|0xcad86721
block|,
literal|0xd92007d2
block|,
literal|0x2b2c0a2c
block|,
literal|0xfed0c634
block|,
literal|0x0cdccbca
block|,
literal|0x1f24ab39
block|,
literal|0xed28a6c7
block|,
literal|0xa7176d47
block|,
literal|0x551b60b9
block|,
literal|0x46e3004a
block|,
literal|0xb4ef0db4
block|,
literal|0x6113c1ac
block|,
literal|0x931fcc52
block|,
literal|0x80e7aca1
block|,
literal|0x72eba15f
block|,
literal|0x2ef24260
block|,
literal|0xdcfe4f9e
block|,
literal|0xcf062f6d
block|,
literal|0x3d0a2293
block|,
literal|0xe8f6ee8b
block|,
literal|0x1afae375
block|,
literal|0x09028386
block|,
literal|0xfb0e8e78
block|,
literal|0x9d7d1486
block|,
literal|0x6f711978
block|,
literal|0x7c89798b
block|,
literal|0x8e857475
block|,
literal|0x5b79b86d
block|,
literal|0xa975b593
block|,
literal|0xba8dd560
block|,
literal|0x4881d89e
block|,
literal|0x14983ba1
block|,
literal|0xe694365f
block|,
literal|0xf56c56ac
block|,
literal|0x07605b52
block|,
literal|0xd29c974a
block|,
literal|0x20909ab4
block|,
literal|0x3368fa47
block|,
literal|0xc164f7b9
block|,
literal|0x8b5b3c39
block|,
literal|0x795731c7
block|,
literal|0x6aaf5134
block|,
literal|0x98a35cca
block|,
literal|0x4d5f90d2
block|,
literal|0xbf539d2c
block|,
literal|0xacabfddf
block|,
literal|0x5ea7f021
block|,
literal|0x02be131e
block|,
literal|0xf0b21ee0
block|,
literal|0xe34a7e13
block|,
literal|0x114673ed
block|,
literal|0xc4babff5
block|,
literal|0x36b6b20b
block|,
literal|0x254ed2f8
block|,
literal|0xd742df06
block|,
literal|0xe9a9e704
block|,
literal|0x1ba5eafa
block|,
literal|0x085d8a09
block|,
literal|0xfa5187f7
block|,
literal|0x2fad4bef
block|,
literal|0xdda14611
block|,
literal|0xce5926e2
block|,
literal|0x3c552b1c
block|,
literal|0x604cc823
block|,
literal|0x9240c5dd
block|,
literal|0x81b8a52e
block|,
literal|0x73b4a8d0
block|,
literal|0xa64864c8
block|,
literal|0x54446936
block|,
literal|0x47bc09c5
block|,
literal|0xb5b0043b
block|,
literal|0xff8fcfbb
block|,
literal|0x0d83c245
block|,
literal|0x1e7ba2b6
block|,
literal|0xec77af48
block|,
literal|0x398b6350
block|,
literal|0xcb876eae
block|,
literal|0xd87f0e5d
block|,
literal|0x2a7303a3
block|,
literal|0x766ae09c
block|,
literal|0x8466ed62
block|,
literal|0x979e8d91
block|,
literal|0x6592806f
block|,
literal|0xb06e4c77
block|,
literal|0x42624189
block|,
literal|0x519a217a
block|,
literal|0xa3962c84
block|,
literal|0xc5e5b67a
block|,
literal|0x37e9bb84
block|,
literal|0x2411db77
block|,
literal|0xd61dd689
block|,
literal|0x03e11a91
block|,
literal|0xf1ed176f
block|,
literal|0xe215779c
block|,
literal|0x10197a62
block|,
literal|0x4c00995d
block|,
literal|0xbe0c94a3
block|,
literal|0xadf4f450
block|,
literal|0x5ff8f9ae
block|,
literal|0x8a0435b6
block|,
literal|0x78083848
block|,
literal|0x6bf058bb
block|,
literal|0x99fc5545
block|,
literal|0xd3c39ec5
block|,
literal|0x21cf933b
block|,
literal|0x3237f3c8
block|,
literal|0xc03bfe36
block|,
literal|0x15c7322e
block|,
literal|0xe7cb3fd0
block|,
literal|0xf4335f23
block|,
literal|0x063f52dd
block|,
literal|0x5a26b1e2
block|,
literal|0xa82abc1c
block|,
literal|0xbbd2dcef
block|,
literal|0x49ded111
block|,
literal|0x9c221d09
block|,
literal|0x6e2e10f7
block|,
literal|0x7dd67004
block|,
literal|0x8fda7dfa
block|,       }
block|,     }
decl_stmt|;
comment|// Value x picked so computeForWord(x) == ~0, found by exhaustive search.
DECL|field|INVERSE_COMPUTE_FOR_WORD_OF_ALL_1S
specifier|static
specifier|final
name|int
name|INVERSE_COMPUTE_FOR_WORD_OF_ALL_1S
init|=
literal|0xeee3ddcd
decl_stmt|;
DECL|method|computeForWord (int word)
specifier|static
name|int
name|computeForWord
parameter_list|(
name|int
name|word
parameter_list|)
block|{
return|return
name|STRIDE_TABLE
index|[
literal|3
index|]
index|[
name|word
operator|&
literal|0xFF
index|]
operator|^
name|STRIDE_TABLE
index|[
literal|2
index|]
index|[
operator|(
name|word
operator|>>>
literal|8
operator|)
operator|&
literal|0xFF
index|]
operator|^
name|STRIDE_TABLE
index|[
literal|1
index|]
index|[
operator|(
name|word
operator|>>>
literal|16
operator|)
operator|&
literal|0xFF
index|]
operator|^
name|STRIDE_TABLE
index|[
literal|0
index|]
index|[
name|word
operator|>>>
literal|24
index|]
return|;
block|}
DECL|method|combine (int csum, int crc)
specifier|static
name|int
name|combine
parameter_list|(
name|int
name|csum
parameter_list|,
name|int
name|crc
parameter_list|)
block|{
name|csum
operator|^=
name|crc
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
name|i
operator|++
control|)
block|{
name|csum
operator|=
operator|(
name|csum
operator|>>>
literal|8
operator|)
operator|^
name|BYTE_TABLE
index|[
name|csum
operator|&
literal|0xFF
index|]
expr_stmt|;
block|}
return|return
name|csum
return|;
block|}
DECL|field|EMPTY
specifier|private
specifier|static
specifier|final
name|ByteBuffer
name|EMPTY
init|=
name|ByteBuffer
operator|.
name|allocate
argument_list|(
literal|0
argument_list|)
decl_stmt|;
block|}
block|}
end_class

end_unit

