begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2011 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except  * in compliance with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software distributed under the License  * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express  * or implied. See the License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|com.google.common.hash
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|hash
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verifyNoMoreInteractions
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|testing
operator|.
name|NullPointerTester
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_comment
comment|/**  * Tests for {@link HashingOutputStream}.  *  * @author Nick Piepmeier  */
end_comment

begin_class
DECL|class|HashingOutputStreamTest
specifier|public
class|class
name|HashingOutputStreamTest
extends|extends
name|TestCase
block|{
DECL|field|hasher
specifier|private
name|Hasher
name|hasher
decl_stmt|;
DECL|field|hashFunction
specifier|private
name|HashFunction
name|hashFunction
decl_stmt|;
DECL|field|buffer
specifier|private
specifier|final
name|ByteArrayOutputStream
name|buffer
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"DoNotMock"
argument_list|)
annotation|@
name|Override
DECL|method|setUp ()
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|hasher
operator|=
name|mock
argument_list|(
name|Hasher
operator|.
name|class
argument_list|)
expr_stmt|;
name|hashFunction
operator|=
name|mock
argument_list|(
name|HashFunction
operator|.
name|class
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|hashFunction
operator|.
name|newHasher
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|hasher
argument_list|)
expr_stmt|;
block|}
DECL|method|testWrite_putSingleByte ()
specifier|public
name|void
name|testWrite_putSingleByte
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|b
init|=
literal|'q'
decl_stmt|;
name|HashingOutputStream
name|out
init|=
operator|new
name|HashingOutputStream
argument_list|(
name|hashFunction
argument_list|,
name|buffer
argument_list|)
decl_stmt|;
name|out
operator|.
name|write
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|hashFunction
argument_list|)
operator|.
name|newHasher
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|hasher
argument_list|)
operator|.
name|putByte
argument_list|(
operator|(
name|byte
operator|)
name|b
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|hashFunction
argument_list|,
name|hasher
argument_list|)
expr_stmt|;
block|}
DECL|method|testWrite_putByteArray ()
specifier|public
name|void
name|testWrite_putByteArray
parameter_list|()
throws|throws
name|Exception
block|{
name|byte
index|[]
name|buf
init|=
operator|new
name|byte
index|[]
block|{
literal|'y'
block|,
literal|'a'
block|,
literal|'m'
block|,
literal|'s'
block|}
decl_stmt|;
name|HashingOutputStream
name|out
init|=
operator|new
name|HashingOutputStream
argument_list|(
name|hashFunction
argument_list|,
name|buffer
argument_list|)
decl_stmt|;
name|out
operator|.
name|write
argument_list|(
name|buf
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|hashFunction
argument_list|)
operator|.
name|newHasher
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|hasher
argument_list|)
operator|.
name|putBytes
argument_list|(
name|buf
argument_list|,
literal|0
argument_list|,
name|buf
operator|.
name|length
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|hashFunction
argument_list|,
name|hasher
argument_list|)
expr_stmt|;
block|}
DECL|method|testWrite_putByteArrayAtPos ()
specifier|public
name|void
name|testWrite_putByteArrayAtPos
parameter_list|()
throws|throws
name|Exception
block|{
name|byte
index|[]
name|buf
init|=
operator|new
name|byte
index|[]
block|{
literal|'y'
block|,
literal|'a'
block|,
literal|'m'
block|,
literal|'s'
block|}
decl_stmt|;
name|HashingOutputStream
name|out
init|=
operator|new
name|HashingOutputStream
argument_list|(
name|hashFunction
argument_list|,
name|buffer
argument_list|)
decl_stmt|;
name|out
operator|.
name|write
argument_list|(
name|buf
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|hashFunction
argument_list|)
operator|.
name|newHasher
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|hasher
argument_list|)
operator|.
name|putBytes
argument_list|(
name|buf
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|hashFunction
argument_list|,
name|hasher
argument_list|)
expr_stmt|;
block|}
DECL|method|testHash_hashesCorrectly ()
specifier|public
name|void
name|testHash_hashesCorrectly
parameter_list|()
throws|throws
name|Exception
block|{
name|byte
index|[]
name|buf
init|=
operator|new
name|byte
index|[]
block|{
literal|'y'
block|,
literal|'a'
block|,
literal|'m'
block|,
literal|'s'
block|}
decl_stmt|;
name|HashCode
name|expectedHash
init|=
name|Hashing
operator|.
name|md5
argument_list|()
operator|.
name|hashBytes
argument_list|(
name|buf
argument_list|)
decl_stmt|;
name|HashingOutputStream
name|out
init|=
operator|new
name|HashingOutputStream
argument_list|(
name|Hashing
operator|.
name|md5
argument_list|()
argument_list|,
name|buffer
argument_list|)
decl_stmt|;
name|out
operator|.
name|write
argument_list|(
name|buf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedHash
argument_list|,
name|out
operator|.
name|hash
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testChecksForNull ()
specifier|public
name|void
name|testChecksForNull
parameter_list|()
throws|throws
name|Exception
block|{
name|NullPointerTester
name|tester
init|=
operator|new
name|NullPointerTester
argument_list|()
decl_stmt|;
name|tester
operator|.
name|testAllPublicInstanceMethods
argument_list|(
operator|new
name|HashingOutputStream
argument_list|(
name|Hashing
operator|.
name|md5
argument_list|()
argument_list|,
operator|new
name|ByteArrayOutputStream
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|tester
operator|.
name|testAllPublicStaticMethods
argument_list|(
name|HashingOutputStream
operator|.
name|class
argument_list|)
expr_stmt|;
name|tester
operator|.
name|testAllPublicConstructors
argument_list|(
name|HashingOutputStream
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

