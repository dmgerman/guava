begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2012 The Guava Authors  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.google.common.base
package|package
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_comment
comment|/**  * Tests for {@link StandardSystemProperty}.  *  * @author Kurt Alfred Kluever  */
end_comment

begin_class
DECL|class|StandardSystemPropertyTest
specifier|public
class|class
name|StandardSystemPropertyTest
extends|extends
name|TestCase
block|{
DECL|method|testGetKeyMatchesString ()
specifier|public
name|void
name|testGetKeyMatchesString
parameter_list|()
block|{
for|for
control|(
name|StandardSystemProperty
name|property
range|:
name|StandardSystemProperty
operator|.
name|values
argument_list|()
control|)
block|{
name|String
name|fieldName
init|=
name|property
operator|.
name|name
argument_list|()
decl_stmt|;
name|String
name|expected
init|=
name|Ascii
operator|.
name|toLowerCase
argument_list|(
name|fieldName
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"_"
argument_list|,
literal|"."
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|property
operator|.
name|key
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testGetValue ()
specifier|public
name|void
name|testGetValue
parameter_list|()
block|{
for|for
control|(
name|StandardSystemProperty
name|property
range|:
name|StandardSystemProperty
operator|.
name|values
argument_list|()
control|)
block|{
name|assertEquals
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
name|property
operator|.
name|key
argument_list|()
argument_list|)
argument_list|,
name|property
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testToString ()
specifier|public
name|void
name|testToString
parameter_list|()
block|{
for|for
control|(
name|StandardSystemProperty
name|property
range|:
name|StandardSystemProperty
operator|.
name|values
argument_list|()
control|)
block|{
name|assertEquals
argument_list|(
name|property
operator|.
name|key
argument_list|()
operator|+
literal|"="
operator|+
name|property
operator|.
name|value
argument_list|()
argument_list|,
name|property
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testNoNullValues ()
specifier|public
name|void
name|testNoNullValues
parameter_list|()
block|{
for|for
control|(
name|StandardSystemProperty
name|property
range|:
name|StandardSystemProperty
operator|.
name|values
argument_list|()
control|)
block|{
comment|// Even though the contract in System.getProperties() specifies that a value will exist for
comment|// all of the listed keys, for some reason the "java.compiler" key returns null in some JVMs.
if|if
condition|(
name|property
operator|!=
name|StandardSystemProperty
operator|.
name|JAVA_COMPILER
condition|)
block|{
name|assertNotNull
argument_list|(
name|property
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

